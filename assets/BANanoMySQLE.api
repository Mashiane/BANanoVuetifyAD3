{"filename":"BANanoMySQLE","events":[],"subroutines":[{"signature":"Sub Class_Globals"},{"signature":"Sub Reset"},{"signature":"Sub setUsesEncryption(b As Boolean)"},{"signature":"Sub getUsesEncryption As Boolean"},{"signature":"Sub SchemaAddInt1(b As String) As BANanoMySQLE"},{"signature":"Sub SchemaAddText1(b As String) As BANanoMySQLE"},{"signature":"Sub SchemaAddFloat1(b As String) As BANanoMySQLE"},{"signature":"Sub SchemaAddDouble1(b As String) As BANanoMySQLE"},{"signature":"Sub SchemaAddBlob1(b As String) As BANanoMySQLE"},{"signature":"Sub GetCount As BANanoMySQLE"},{"signature":"Sub GetSum As BANanoMySQLE"},{"signature":"Sub SetConnection(shost As String, susername As String, spassword As String) As BANanoMySQLE"},{"signature":"Sub SetConnection1(shost As String, susername As String, spassword As String, sport As String) As BANanoMySQLE"},{"signature":"Sub ReadBy(pk As String, pv As String)"},{"signature":"Sub DeleteBy(pk As String, pv As String)"},{"signature":"Sub UpdateBy(pk As String, pv As String)"},{"signature":"Sub AssignToken(userField As String, user As String, tokenField As String)"},{"signature":"Sub MoveFirst"},{"signature":"Sub MoveLast"},{"signature":"Sub MovePrevious"},{"signature":"Sub MoveNext"},{"signature":"Sub BuildDirect As Map"},{"signature":"Sub PrepareRecord"},{"signature":"Sub SetCallBack(v As String, a As String)"},{"signature":"Sub SelectWhere1(tblfields As List, tblWhere As Map, operators As List, AndOr As List, orderBy As List) As BANanoMySQLE"},{"signature":"Sub NewList As List"},{"signature":"Sub NextRow As Boolean"},{"signature":"Sub FromJSON As BANanoMySQLE"},{"signature":"Sub SchemaAddField(fldName As String, fldType As String)"},{"signature":"Sub GetMax As BANanoMySQLE"},{"signature":"Sub GetMin As BANanoMySQLE"},{"signature":"Sub GetDatabases As BANanoMySQLE"},{"signature":"Sub setPosition(pos As Int)"},{"signature":"Sub getPosition As Int"},{"signature":"Sub GetInt(fld As String) As Int"},{"signature":"Sub GetLong(fld As String) As Long"},{"signature":"Sub GetString(fld As String) As String"},{"signature":"Sub GetBoolean(fld As String) As Boolean"},{"signature":"Sub GetDouble(fld As String) As Double"},{"signature":"Sub GetRecord(pos As Int) As Map"},{"signature":"Sub GetTableNames As BANanoMySQLE"},{"signature":"Sub ShowIndexes"},{"signature":"Sub ShowForeignKeys"},{"signature":"Sub ShowColumns As BANanoMySQLE"},{"signature":"Sub DescribeTable As BANanoMySQLE"},{"signature":"Sub GetNextID As String"},{"signature":"Sub CStr(o As Object) As String"},{"signature":"Sub Initialize(dbName As String, tblName As String, PK As String, AI As String) As BANanoMySQLE"},{"signature":"Sub SchemaClear As BANanoMySQLE"},{"signature":"Sub SetField(fldName As String, fldValue As Object) As BANanoMySQLE"},{"signature":"Sub SchemaAddBoolean(bools As List) As BANanoMySQLE"},{"signature":"Sub SchemaAddInt(bools As List) As BANanoMySQLE"},{"signature":"Sub SchemaAddDouble(bools As List) As BANanoMySQLE"},{"signature":"Sub SchemaAddFloat(bools As List) As BANanoMySQLE"},{"signature":"Sub SchemaAddBlob(bools As List) As BANanoMySQLE"},{"signature":"Sub SchemaAddText(bools As List) As BANanoMySQLE"},{"signature":"Sub SchemaCreateTable As BANanoMySQLE"},{"signature":"Sub Json2Map(strJSON As String) As Map"},{"signature":"Sub Map2Json(mp As Map) As String"},{"signature":"Sub Connection As BANanoMySQLE"},{"signature":"Sub CreateDatabase As BANanoMySQLE"},{"signature":"Sub DropDataBase As BANanoMySQLE"},{"signature":"Sub Execute(strSQL As String) As BANanoMySQLE"},{"signature":"Sub CreateTable(tblFields As Map) As BANanoMySQLE"},{"signature":"Sub DropTable As BANanoMySQLE"},{"signature":"Sub Insert As BANanoMySQLE"},{"signature":"Sub Insert1(Rec As Map) As BANanoMySQLE"},{"signature":"Sub InsertReplace As BANanoMySQLE"},{"signature":"Sub Delete(primaryValue As String) As BANanoMySQLE"},{"signature":"Sub Read(primaryValue As String) As BANanoMySQLE"},{"signature":"Sub Exists(primaryValue As String) As BANanoMySQLE"},{"signature":"Sub SelectWhere(tblfields As List, tblWhere As Map, operators As List, orderBy As List) As BANanoMySQLE"},{"signature":"Sub SelectMaxWhere(fld As String, tblWhere As Map, operators As List) As BANanoMySQLE"},{"signature":"Sub SelectWhereAscDesc(tblfields As List, tblWhere As Map, operators As List, orderBy As List, AscDesc As List) As BANanoMySQLE"},{"signature":"Sub SelectDistinctWhere(tblfields As List, tblWhere As Map, operators As List, orderBy As List) As BANanoMySQLE"},{"signature":"Sub DeleteAll As BANanoMySQLE"},{"signature":"Sub DeleteWhere(tblWhere As Map, operators As List) As BANanoMySQLE"},{"signature":"Sub SelectAll(tblfields As List, orderBy As List) As BANanoMySQLE"},{"signature":"Sub SelectDistinctAll(tblfields As List, orderBy As List) As BANanoMySQLE"},{"signature":"Sub Build As Map"},{"signature":"Sub Build1 As Map"},{"signature":"Sub BuildDynamic(isPHP As Boolean) As Map"},{"signature":"Sub Truncate As BANanoMySQLE"},{"signature":"Sub FirstRecord As Map"},{"signature":"Sub Update(priValue As String) As BANanoMySQLE"},{"signature":"Sub Update1(Rec As Map, priValue As String) As BANanoMySQLE"},{"signature":"Sub UpdateWhere(tblfields As Map, tblWhere As Map, operators As List) As BANanoMySQLE"},{"signature":"Sub UpdateAll(tblFields As Map) As BANanoMySQLE"},{"signature":"Sub SelectAllAscDesc(tblfields As List, orderBy As List, AscDesc As List)"},{"signature":"Sub GetSumWait As List"},{"signature":"Sub UpdateAllWait(tblFields As Map) As Boolean"},{"signature":"Sub UpdateWhereWait(tblfields As Map, tblWhere As Map, operators As List) As Boolean"},{"signature":"Sub UpdateWait(rec As Map, priValue As String) As Boolean"},{"signature":"Sub SelectDistinctAllWait(tblfields As List, orderBy As List) As List"},{"signature":"Sub SelectAllWait(tblfields As List, orderBy As List) As List"},{"signature":"Sub SelectEverything As BANanoMySQLE"},{"signature":"Sub SelectEverythingWait As List"},{"signature":"Sub DeleteWhereWait(tblWhere As Map, operators As List) As Boolean"},{"signature":"Sub DeleteAllWait As Boolean"},{"signature":"Sub SelectDistinctWhereWait(tblfields As List, tblWhere As Map, operators As List, orderBy As List) As List"},{"signature":"Sub SelectWhereWait(tblfields As List, tblWhere As Map, operators As List, orderBy As List) As List"},{"signature":"Sub ExistsWait(primaryValue As String) As List"},{"signature":"Sub ReadWait(primaryValue As String) As List"},{"signature":"Sub GetCountWait As List"},{"signature":"Sub DeleteWait(pk As String) As Boolean"},{"signature":"Sub InsertWait As Boolean"},{"signature":"Sub SetRecord(rec As Map)"},{"signature":"Sub DropTableWait As Boolean"},{"signature":"Sub ExecuteWait(qry As String) As List"},{"signature":"Sub SelectMaxWhereWait(fld As String, tblWhere As Map, operators As List) As List"},{"signature":"Sub SelectWhereAscDescWait(tblfields As List, tblWhere As Map, operators As List, orderBy As List, AscDesc As List) As List"},{"signature":"Sub SelectWhere1Wait(tblfields As List, tblWhere As Map, operators As List, AndOr As List, orderBy As List) As List"},{"signature":"Sub GetTableNamesWait As List"},{"signature":"Sub DescribeTableWait As List"},{"signature":"Sub ColumnNamesWait As List"},{"signature":"Sub GetMinWait As List"},{"signature":"Sub GetMaxWait As List"}],"properties":[]}