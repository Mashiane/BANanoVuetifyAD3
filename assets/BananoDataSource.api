{"filename":"BananoDataSource","events":[{"event":"Chart (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"Connect (Success As Boolean, Response As String, Error As String)"},{"event":"Count (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"Create (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"CreateBulk (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"CreateTable (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"Custom (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"Delete (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"DescribeTable (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"Done (Action As String, Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"DropDatabase (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"DropTable (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"Excel (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"Exists (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"Pdf (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"Read (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"Report (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"SelectAll (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"SelectForCombo (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"SelectWhere (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"ShowCreateTable (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"ShowDataBases (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"TableNames (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"Undo (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"Update (Success As Boolean, Response As String, Error As String, affectedRows As Int, Result As List)"},{"event":"Connected (Success As Boolean)"},{"event":"OnAuthStateChanged (User As Map)"},{"event":"SignUp (Success As Boolean, Result As Map)"},{"event":"Replicate (err As RelaxErr, res As Map)"},{"event":"Change (change As Map)"},{"event":"Complete (info As Map)"},{"event":"Error (err As Map)"}],"subroutines":[{"signature":"Sub Class_Globals"},{"signature":"Sub Initialize (CallBack As Object, Name As String, EventName As String)"},{"signature":"public Sub CLEAR_PARAMETERS"},{"signature":"public Sub ADD_PARAMETER_STRING(value As String)"},{"signature":"public Sub ADD_PARAMETER_INTEGER(value As Int)"},{"signature":"public Sub ADD_PARAMETER_DOUBLE(value As Double)"},{"signature":"public Sub ADD_PARAMETER_BLOB(value As String)"},{"signature":"Sub setJRDCCommand(p As String)"},{"signature":"Sub getJRDCCommand As String"},{"signature":"Sub setUserName(p As String)"},{"signature":"Sub getUserName As String"},{"signature":"Sub setPort(p As String)"},{"signature":"Sub getPort As String"},{"signature":"Sub setDynamic(b As Boolean)"},{"signature":"Sub setPrimaryKey(p As String)"},{"signature":"Sub setAutoIncrement(p As String)"},{"signature":"Sub getPrimaryKey As String"},{"signature":"Sub setSingular(p As String)"},{"signature":"Sub getSingular As String"},{"signature":"Sub setPlural(p As String)"},{"signature":"Sub getPlural As String"},{"signature":"Sub getDisplayField As String"},{"signature":"Sub setDisplayField(p As String)"},{"signature":"Sub getDisplayValue As String"},{"signature":"Sub setCustomQuery(p As String)"},{"signature":"Sub setShowLogs(b As Boolean)"},{"signature":"Sub setPassword(p As String)"},{"signature":"Sub getPassword As String"},{"signature":"Sub setHostName(p As String)"},{"signature":"Sub getHostName As String"},{"signature":"Sub setDatabaseName(p As String)"},{"signature":"Sub getDatabaseName As String"},{"signature":"Sub setTableName(p As String)"},{"signature":"Sub getTableName As String"},{"signature":"Sub setRecordSource(p As String)"},{"signature":"Sub getRecordSource As String"},{"signature":"Sub setDatabaseType(dt As String)"},{"signature":"Sub getDatabaseType As String"},{"signature":"Sub SchemaBuild"},{"signature":"Sub SchemaReset As BananoDataSource"},{"signature":"Sub AddDefault(fld As String, value As Object) As BananoDataSource"},{"signature":"Sub ADD_DEFAULT(fld As String, value As Object) As BananoDataSource"},{"signature":"Sub SchemaSetFields(flds As List)"},{"signature":"Sub SchemaSetIntegers(flds As List)"},{"signature":"Sub SchemaSetMultiSelect(flds As List)"},{"signature":"Sub SchemaSetStrings(flds As List)"},{"signature":"Sub SchemaSetReadDataTypes(flds As Map)"},{"signature":"Sub SchemaSetDefaults(dm As Map)"},{"signature":"Sub SchemaSetDoubles(flds As List)"},{"signature":"Sub SchemaSetBlobs(flds As List)"},{"signature":"Sub SchemaSetOrderBy(flds As List)"},{"signature":"Sub getSALT As String"},{"signature":"Sub SchemaSetSelectFields(flds As List)"},{"signature":"Sub BindState(VC As VueComponent)"},{"signature":"Sub BindStateOnApp(C As VuetifyApp)"},{"signature":"Sub ADD"},{"signature":"Sub DEFAULTS"},{"signature":"Sub CREATE_OR_UPDATE"},{"signature":"Sub CREATE_BULK(recs As List)"},{"signature":"Sub CREATE_OR_UPDATE_JRDC(VA As VuetifyApp)"},{"signature":"Sub DELETE_JRDC(V As VuetifyApp)"},{"signature":"Sub CREATE_MODE"},{"signature":"Sub UPDATE_MODE"},{"signature":"Sub READ_MODE"},{"signature":"Sub DELETE_MODE"},{"signature":"Sub CREATEMODE"},{"signature":"Sub UPDATEMODE"},{"signature":"Sub READMODE"},{"signature":"Sub DELETEMODE"},{"signature":"Sub RESET"},{"signature":"Sub MOVEFIRST(recs As List)"},{"signature":"Sub MOVE_FIRST(recs As List)"},{"signature":"Sub FORM As Map"},{"signature":"Sub READ"},{"signature":"Sub CREATE_TABLE"},{"signature":"Sub DROP_TABLE"},{"signature":"Sub READ_JRDC(V As VuetifyApp)"},{"signature":"Sub EDIT_DATATABLE(rec As Map)"},{"signature":"Sub EDIT_UPDATE(rec As Map)"},{"signature":"Sub READ1(rec As Map)"},{"signature":"Sub EDIT(rec As Map)"},{"signature":"Sub EDIT_DONT_READ(rec As Map)"},{"signature":"Sub CREATE1(rec As Map)"},{"signature":"Sub CREATE"},{"signature":"Sub DELETE"},{"signature":"Sub DELETE_CONFIRM(item As Map)"},{"signature":"Sub DELETE1(rec As Map)"},{"signature":"Sub UPDATE1(rec As Map)"},{"signature":"Sub UPDATE"},{"signature":"Sub UNDO"},{"signature":"Sub CONNECT"},{"signature":"Sub SHOWDATABASES"},{"signature":"Sub SHOW_DATABASES"},{"signature":"Sub SHOW_CREATE_TABLE"},{"signature":"Sub CUSTOM_QUERY(ActionName As String, strCustomQuery As String)"},{"signature":"Sub CUSTOM(actionName As String)"},{"signature":"Sub TABLE_NAMES"},{"signature":"Sub DESCRIBE_TABLE"},{"signature":"Sub COUNT"},{"signature":"Sub SELECT_ALL"},{"signature":"Sub SELECTALL"},{"signature":"Sub SELECT_ALL_JRDC(VA As VuetifyApp)"},{"signature":"Sub SELECT_ALL_DIRECT(sTag As String, VA As VuetifyApp)"},{"signature":"Sub CREATE_OR_UPDATE_DIRECT(sTag As String, VA As VuetifyApp)"},{"signature":"Sub READ_DIRECT(sTag As String, VA As VuetifyApp)"},{"signature":"Sub DELETE_DIRECT(sTag As String, VA As VuetifyApp)"},{"signature":"Sub CUSTOM_JRDC(VA As VuetifyApp, commandType As String, jrdcCommand As String,  qry As String, args As List)"},{"signature":"Sub COUNT_DIRECT(VA As VuetifyApp, stag As String,  tableName As String)"},{"signature":"Sub SUM_DIRECT(VA As VuetifyApp, stag As String, fieldName As String, tableName As String)"},{"signature":"Sub CUSTOM_DIRECT(VA As VuetifyApp, commandType As String, stag As String,  qry As String, args As List)"},{"signature":"Sub SELECT_WHERE"},{"signature":"Sub SELECTWHERE"},{"signature":"Sub SELECT_WHERE_JRDC(V As VuetifyApp)"},{"signature":"Sub SELECT_WHERE_CUSTOM_JRDC(V As VuetifyApp, MyAction As String, qry As String)"},{"signature":"Sub EXISTS"},{"signature":"Sub EXISTS_JRDC(V As VuetifyApp)"},{"signature":"Sub PDF"},{"signature":"Sub CHART"},{"signature":"Sub EXCEL"},{"signature":"Sub REPORT"},{"signature":"Sub GetJRDCPayload As Map"},{"signature":"Sub ClearWhere"},{"signature":"Sub CLEAR_WHERE As BananoDataSource"},{"signature":"Sub AddWhereMap(fw As Map)"},{"signature":"Sub ADD_WHERE_MAP(fw As Map) As BananoDataSource"},{"signature":"Sub AddWhere(fld As String, operator As String, value As Object)"},{"signature":"Sub ADD_WHERE(fld As String, operator As String, value As Object) As BananoDataSource"},{"signature":"Sub SHOWFIRSTRECORD"},{"signature":"Sub SHOW_FIRST_RECORD"},{"signature":"Sub GetFirstRecord As Map"},{"signature":"Sub GET_FIRST_RECORD As Map"},{"signature":"Sub SetKey(keyValue As String)"},{"signature":"Sub SETRECORD(rec As Map)"},{"signature":"Sub SET_RECORD(rec As Map)"},{"signature":"Sub VERIFY"},{"signature":"Sub isNaN(obj As Object) As Boolean"},{"signature":"Sub CorrectDataTypesSave(rec As Map)"},{"signature":"Sub getID As String"},{"signature":"Sub getHere As String"},{"signature":"Sub OnExecution"},{"signature":"Sub OnDone"},{"signature":"Sub IsCreate As Boolean"},{"signature":"Sub IsUpdate As Boolean"},{"signature":"Sub IsDelete As Boolean"},{"signature":"Sub AuthenticateUser"},{"signature":"Sub GetUserByUserName"},{"signature":"Sub SELECTFORCOMBO"},{"signature":"Sub SELECTFORCOMBOCUSTOM(MyAction As String)"},{"signature":"Sub setJRDC_INSERT(s As String)"},{"signature":"Sub setJRDC_UPDATE(s As String)"},{"signature":"Sub setJRDC_DELETE(s As String)"},{"signature":"Sub setJRDC_SELECT(s As String)"},{"signature":"Sub setJRDC_READ(s As String)"},{"signature":"Sub setJRDC_SELECT_WHERE(s As String)"},{"signature":"Sub setJRDC_EXISTS(s As String)"},{"signature":"Sub setJRDC_SELECT_WHERE_CUSTOM(s As String)"},{"signature":"Sub EDIT_JRDC(VA As VuetifyApp, item As Map)"},{"signature":"Sub EDIT_DIRECT(sTag As String, VA As VuetifyApp, item As Map)"},{"signature":"Sub FIRESTORE_CONNECT"},{"signature":"Sub disableNetwork() As BANanoPromise"},{"signature":"Sub enableNetwork() As BANanoPromise"},{"signature":"Sub SetFireStore(fs As BANanoObject)"},{"signature":"Sub ErrorMessage(res As Map) As String"},{"signature":"Sub AddToParent(targetID As String, Props As Map)"},{"signature":"Sub AddDesignWait(designName As String) As Boolean"},{"signature":"Sub NextRow As Boolean"},{"signature":"Sub FirstRecord As Map"},{"signature":"Sub setPosition(pos As Int)"},{"signature":"Sub getPosition As Int"},{"signature":"Sub GetInt(fld As String) As Int"},{"signature":"Sub GetLong(fld As String) As Long"},{"signature":"Sub GetString(fld As String) As String"},{"signature":"Sub GetBoolean(fld As String) As Boolean"},{"signature":"Sub GetDouble(fld As String) As Double"},{"signature":"Sub GetRecord(pos As Int) As Map"},{"signature":"Sub MoveToFirst"},{"signature":"Sub MoveToLast"},{"signature":"Sub MoveToPrevious"},{"signature":"Sub MoveToNext"},{"signature":"Sub DesignerCreateView (Target As BANanoElement, Props As Map)"},{"signature":"Sub setParentIDDT(detiParentID As String)"},{"signature":"Sub setUsesEncryptionDT(detiUsesEncryption As Boolean)"},{"signature":"Sub setEncryptToDT(detiEncryptTo As Boolean)"},{"signature":"Sub setEncryptFromDT(detiEncryptFrom As Boolean)"},{"signature":"Sub setShowLogDT(detiShowLog As Boolean)"},{"signature":"Sub setLowerCaseFieldsDT(detiLowerCaseFields As Boolean)"},{"signature":"Sub setVapidKeyDT(detiVapidKey As String)"},{"signature":"Sub setUseAnalyticsDT(detiUseAnalytics As Boolean)"},{"signature":"Sub setUseAuthDT(detiUseAuth As Boolean)"},{"signature":"Sub setUseDatabaseDT(detiUseDatabase As Boolean)"},{"signature":"Sub setUseFireStoreDT(detiUseFireStore As Boolean)"},{"signature":"Sub setUsePerformanceDT(detiUsePerformance As Boolean)"},{"signature":"Sub setUseStorageDT(detiUseStorage As Boolean)"},{"signature":"Sub setUseMessagingDT(detiUseMessaging As Boolean)"},{"signature":"Sub setTimeStampOnSnapShotsDT(detiTimeStampOnSnapShots As Boolean)"},{"signature":"Sub setEnablePersistenceDT(detiEnablePersistence As Boolean)"},{"signature":"Sub setDatabaseTypeDT(detiDatabaseType As String)"},{"signature":"Sub setHostNameDT(detiHostName As String)"},{"signature":"Sub setPortDT(detiPort As String)"},{"signature":"Sub setDatabaseNameDT(detiDatabaseName As String)"},{"signature":"Sub setUserNameDT(detiUserName As String)"},{"signature":"Sub setPasswordDT(detiPassword As String)"},{"signature":"Sub setSaltDT(detiSalt As String)"},{"signature":"Sub setDynamicDT(detiDynamic As Boolean)"},{"signature":"Sub setWorkOnlineDT(detiWorkOnline As Boolean)"},{"signature":"Sub setWatchChangesDT(detiWatchChanges As Boolean)"},{"signature":"Sub setLiveReplicationDT(detiLiveReplication As Boolean)"},{"signature":"Sub setTableNameDT(detiTableName As String)"},{"signature":"Sub setEscapeFieldsDT(detiEscapeFields As Boolean)"},{"signature":"Sub setRecordSourceDT(detiRecordSource As String)"},{"signature":"Sub setPrimaryKeyDT(detiPrimaryKey As String)"},{"signature":"Sub setAutoIncrementDT(detiAutoIncrement As String)"},{"signature":"Sub setPasswordFieldDT(detiPasswordField As String)"},{"signature":"Sub setSingularDT(detiSingular As String)"},{"signature":"Sub setPluralDT(detiPlural As String)"},{"signature":"Sub setDisplayFieldDT(detiDisplayField As String)"},{"signature":"Sub setFieldsDT(detiFields As String)"},{"signature":"Sub setSelectFieldsDT(detiSelectFields As String)"},{"signature":"Sub setOrderByDT(detiOrderBy As String)"},{"signature":"Sub setMultiSelectDT(detiMultiSelect As String)"},{"signature":"Sub setDefaultsDT(detiDefaults As String)"},{"signature":"Sub setIntegersDT(detiIntegers As String)"},{"signature":"Sub setDoublesDT(detiDoubles As String)"},{"signature":"Sub setBlobsDT(detiBlobs As String)"},{"signature":"Sub setJRDCInsertDT(detiJRDCInsert As String)"},{"signature":"Sub setJRDCUpdateDT(detiJRDCUpdate As String)"},{"signature":"Sub setJRDCDeleteDT(detiJRDCDelete As String)"},{"signature":"Sub setJRDCSelectDT(detiJRDCSelect As String)"},{"signature":"Sub setJRDCSelectWhereDT(detiJRDCSelectWhere As String)"},{"signature":"Sub setJRDCSelectWhereCustomDT(detiJRDCSelectWhereCustom As String)"},{"signature":"Sub setJRDCExistsDT(detiJRDCExists As String)"},{"signature":"Sub setJRDCReadDT(detiJRDCRead As String)"},{"signature":"Sub AddToParentDT(xParentID As String)"}],"properties":[{"key":"ReadMe","displayname":"ReadMe*","fieldtype":"String","defaultvalue":"The DataSource helps you connect your front end to your back end. Before you execute any statements on it - you need to execute BindState first! With this you dont have to write any SQL statements and you can also use it with your custom SQL statements.","description":"The DataSource helps you connect your front end to your back end. Before you execute any statements on it - you need to execute BindState first! With this you dont have to write any SQL statements and you can also use it with your custom SQL statements."},{"key":"ParentID","displayname":"ParentID","fieldtype":"String","defaultvalue":"","description":"The id of the element to place this into"},{"key":"UsesEncryption","displayname":"Uses Encrytion","fieldtype":"Boolean","defaultvalue":"False","description":"Set this to True if encrypting to or from server"},{"key":"EncryptTo","displayname":"Encrypt To","fieldtype":"Boolean","defaultvalue":"False","description":"Encrypt content to Server"},{"key":"EncryptFrom","displayname":"Encrypt From","fieldtype":"Boolean","defaultvalue":"False","description":"Encrypt content from Server"},{"key":"ShowLog","displayname":"Show Logs","fieldtype":"Boolean","defaultvalue":"False","description":"Show Logs"},{"key":"LowerCaseFields","displayname":"Lower Case Fields","fieldtype":"Boolean","defaultvalue":"True","description":"Convert fields to lowercase when returning content"},{"key":"VapidKey","displayname":"VapidKey","fieldtype":"String","defaultvalue":"","description":"VapidKey"},{"key":"UseAnalytics","displayname":"UseAnalytics","fieldtype":"Boolean","defaultvalue":"False","description":"UseAnalytics"},{"key":"UseAuth","displayname":"UseAuth","fieldtype":"Boolean","defaultvalue":"False","description":"UseAuth"},{"key":"UseDatabase","displayname":"UseRealDatabase","fieldtype":"Boolean","defaultvalue":"False","description":"UseRealDatabase"},{"key":"UseFireStore","displayname":"UseFireStore","fieldtype":"Boolean","defaultvalue":"False","description":"UseFireStore"},{"key":"UsePerformance","displayname":"UsePerformance","fieldtype":"Boolean","defaultvalue":"False","description":"UsePerformance"},{"key":"UseStorage","displayname":"UseStorage","fieldtype":"Boolean","defaultvalue":"False","description":"UseStorage"},{"key":"UseMessaging","displayname":"UseMessaging","fieldtype":"Boolean","defaultvalue":"False","description":"UseMessaging"},{"key":"TimeStampOnSnapShots","displayname":"TimeStampOnSnapShots","fieldtype":"Boolean","defaultvalue":"True","description":"TimeStampOnSnapShots"},{"key":"EnablePersistence","displayname":"EnablePersistence","fieldtype":"Boolean","defaultvalue":"False","description":"EnablePersistence"},{"key":"DatabaseType","displayname":"Database Type*","fieldtype":"String","defaultvalue":"mysql","description":"Database Type","list":"indexeddb|jrdc|mssql|mysql|sqlite|firestore|mongodb|direct_sqlite|direct_mysql|direct_mssql|direct_msaccess|json|couchdb|direct_mongodb|postgres|direct_postgres|msaccess"},{"key":"HostName","displayname":"Host Name*","fieldtype":"String","defaultvalue":"localhost","description":"Host Name"},{"key":"Port","displayname":"Port*","fieldtype":"String","defaultvalue":"3306","description":"Port Number"},{"key":"DatabaseName","displayname":"Database Name*","fieldtype":"String","defaultvalue":"","description":"Database Name"},{"key":"UserName","displayname":"User Name","fieldtype":"String","defaultvalue":"root","description":"User Name"},{"key":"Password","displayname":"Password","fieldtype":"String","defaultvalue":"","description":"Password"},{"key":"Salt","displayname":"Salt","fieldtype":"String","defaultvalue":"","description":"Salt for MD5Hashing"},{"key":"Dynamic","displayname":"Dynamic (No Config File)","fieldtype":"Boolean","defaultvalue":"False","description":"Dynamic (Do not use config file)"},{"key":"WorkOnline","displayname":"CouchDB Work Online","fieldtype":"Boolean","defaultvalue":"True","description":"Persist changes to online server"},{"key":"WatchChanges","displayname":"CouchDB Watch Changes","fieldtype":"Boolean","defaultvalue":"False","description":"Watch Changes on Record Changes and fire events"},{"key":"LiveReplication","displayname":"Live Replication","fieldtype":"Boolean","defaultvalue":"False","description":"Live Replication to server as and when it happens"},{"key":"TableName","displayname":"Table Name*","fieldtype":"String","defaultvalue":"","description":"The name of the table in the database"},{"key":"EscapeFields","displayname":"EscapeFields*","fieldtype":"Boolean","defaultvalue":"True","description":"Fields should be escaped"},{"key":"RecordSource","displayname":"Record Source*","fieldtype":"String","defaultvalue":"","description":"The name to give each record. This is used for data binding"},{"key":"PrimaryKey","displayname":"Primary Key Field*","fieldtype":"String","defaultvalue":"","description":"The name of the field that is a Primary Key"},{"key":"AutoIncrement","displayname":"Auto Increment Field*","fieldtype":"String","defaultvalue":"","description":"The name of the field that is for Auto Increment"},{"key":"PasswordField","displayname":"Password Field","fieldtype":"String","defaultvalue":"","description":"Password Field on users table"},{"key":"Singular","displayname":"Singular (Each Entry on Table)*","fieldtype":"String","defaultvalue":"","description":"A single entry from this table is called? e.g. Category"},{"key":"Plural","displayname":"Plural (Collection of Entries)*","fieldtype":"String","defaultvalue":"","description":"A collection of entries from this table is called? e.g. Categories"},{"key":"DisplayField","displayname":"When Deleting Display Field*","fieldtype":"String","defaultvalue":"","description":"Which field name should be displayed to confirm a delete"},{"key":"Fields","displayname":"Field Names on Table (;)*","fieldtype":"String","defaultvalue":"","description":"The names of the fields from table to use for CRUD functionality"},{"key":"SelectFields","displayname":"Fields for Select Statement (;)*","fieldtype":"String","defaultvalue":"*","description":"The names of the fields Fields to select from table for SQL statement e.g * for  all"},{"key":"OrderBy","displayname":"Order / Sort By Fields (;)*","fieldtype":"String","defaultvalue":"id","description":"Fields to Order / Sort ByBy on SQL statement"},{"key":"MultiSelect","displayname":"MultiSelect Fields (;)","fieldtype":"String","defaultvalue":"","description":"Enter field names that are MultiSelect"},{"key":"Defaults","displayname":"Defaults Values (JSON);","fieldtype":"String","defaultvalue":"","description":"Enter the default values per field"},{"key":"Integers","displayname":"Integer Fields (;)","fieldtype":"String","defaultvalue":"","description":"Enter field names that are Integers"},{"key":"Doubles","displayname":"Double Fields (;)","fieldtype":"String","defaultvalue":"","description":"Enter field names that are Doubles"},{"key":"Blobs","displayname":"Blob Fields (;)","fieldtype":"String","defaultvalue":"","description":"Enter field names that are Blobs"},{"key":"JRDCInsert","displayname":"JRDC Insert Command","fieldtype":"String","defaultvalue":"","description":"The JRDC command for INSERT to the table"},{"key":"JRDCUpdate","displayname":"JRDC Update Command","fieldtype":"String","defaultvalue":"","description":"The JRDC command for UPDATE to the table"},{"key":"JRDCDelete","displayname":"JRDC Delete Command","fieldtype":"String","defaultvalue":"","description":"The JRDC command for DELETE to the table"},{"key":"JRDCSelect","displayname":"JRDC Select Command","fieldtype":"String","defaultvalue":"","description":"The JRDC command for SELECT WHERE from the table"},{"key":"JRDCSelectWhere","displayname":"JRDC Select Where Command","fieldtype":"String","defaultvalue":"","description":"The JRDC command for a 'Select Where' statement"},{"key":"JRDCSelectWhereCustom","displayname":"JRDC Select Where Custom Command","fieldtype":"String","defaultvalue":"","description":"The JRDC command for a CUSTOM 'SELECT WHERE' statement"},{"key":"JRDCExists","displayname":"JRDC Exists Command","fieldtype":"String","defaultvalue":"","description":"The JRDC command to check Existense of records"},{"key":"JRDCRead","displayname":"JRDC Read Command","fieldtype":"String","defaultvalue":"","description":"The JRDC command for Read statements"}]}