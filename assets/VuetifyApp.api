{"filename":"VuetifyApp","events":[{"event":"Mounted"},{"event":"Created"},{"event":"Destroyed"},{"event":"Activated"},{"event":"BeforeUpdate"},{"event":"BeforeMount"},{"event":"BeforeDestroy"},{"event":"BeforeCreate"},{"event":"Updated"},{"event":"DeActivated"},{"event":"BeforeUnload (e As BANanoEvent)"},{"event":"Unload (e As BANanoEvent)"},{"event":"Load (e As BANanoEvent)"},{"event":"BeforeEach (boTo As Map, boFrom As Map, boNext As BANanoObject)"},{"event":"Animation_Update (anim As BANanoObject)"},{"event":"Animation_Begin (anim As BANanoObject)"},{"event":"Animation_Complete (anim As BANanoObject)"},{"event":"Animation_LoopComplete (anim As BANanoObject)"},{"event":"Animation_LoopBegin (anim As BANanoObject)"},{"event":"Animation_Change"},{"event":"Animation_ChangeBegin (anim As BANanoObject)"},{"event":"Animation_ChangeComplete (anim As BananoObject)"},{"event":"ConnectionChange (status As Boolean)"},{"event":"Notification_Show"},{"event":"Notification_Close"},{"event":"Notification_Error"},{"event":"Notification_Click"}],"subroutines":[{"signature":"Sub Class_Globals"},{"signature":"Sub SetDataModelMySQL(DC As BANanoMySQLE)"},{"signature":"Sub This As BANanoObject"},{"signature":"Sub SetDataModelAlaSQL(DC As BANanoALASQLE)"},{"signature":"Sub SetDataModelSQLite(DC As BANanoSQLiteE)"},{"signature":"Sub AddDataModel(TableName As String, PrimaryKey As String, AutoIncrement As Boolean)"},{"signature":"Sub AddDataModelStrings(TableName As String, FieldNames As List)"},{"signature":"Sub AddDataModelIntegers(TableName As String, FieldNames As List)"},{"signature":"Sub AddDataModelDoubles(TableName As String, FieldNames As List)"},{"signature":"Sub AddDataModelBlobs(TableName As String, FieldNames As List)"},{"signature":"Sub FindProgressLoaderOn(appBar As VAppBar)"},{"signature":"Sub FindProgressLoaderOn1(appBar As String)"},{"signature":"Sub PagePause"},{"signature":"Sub PageResume"},{"signature":"Sub PageWorking"},{"signature":"Sub PageFinished"},{"signature":"Sub ShowProgressLoader"},{"signature":"Sub HideProgressLoader"},{"signature":"Sub BindAppProgressBar(pb As VueElement)"},{"signature":"Sub CalculateDistance(lat1 As Double, lon1 As Double, lat2 As Double, lon2 As Double) As Int"},{"signature":"Sub GetVueElement(Module As Object, elID As String) As VueElement"},{"signature":"Sub Import(comp As VueComponent)"},{"signature":"Sub ImportVueComponent(comp As VueComponent)"},{"signature":"Sub AppendHolderTo(target As String)"},{"signature":"Sub NiceDate(sdate As String) As String\t\t\t'ignoredeadcode"},{"signature":"Sub PriorityColor(svalue As String) As String"},{"signature":"Sub UseVueKanban"},{"signature":"Sub NiceMonth(sdate As String) As String\t\t\t'ignoredeadcode"},{"signature":"Sub NiceYear(sdate As String) As String\t\t\t'ignoredeadcode"},{"signature":"Sub NiceDateTime(d As String, t As String) As String\t\t\t\t'ignoredeadcode"},{"signature":"Sub NiceTime(stime As String) As String\t\t\t'ignoredeadcode"},{"signature":"Sub NiceTimeOnly(stime As String) As String\t\t\t\t'ignoredeadcode"},{"signature":"Sub NiceMoney(smoney As String) As String\t\t'ignoredeadcode"},{"signature":"Sub nicefilesize(fsx As String) As String\t\t'ignoredeadcode"},{"signature":"Sub FormatFileSize(Bytes As Float) As String\t'ignoredeadcode\t\t\t\t'ignoredeadcode"},{"signature":"Sub SnackBarInitialize"},{"signature":"Sub AddAppSnackBar As VueElement"},{"signature":"Sub SnackBarColor(s As String) As VuetifyApp"},{"signature":"Sub SnackBarTimeOut(tout As Int) As VuetifyApp"},{"signature":"Sub SnackBarRounded(b As Boolean) As VuetifyApp"},{"signature":"Sub SnackBarShaped(b As Boolean) As VuetifyApp"},{"signature":"Sub SnackBarOutlined(b As Boolean) As VuetifyApp"},{"signature":"Sub SnackBarTopLeft As VuetifyApp"},{"signature":"Sub SnackBarTopCentered As VuetifyApp"},{"signature":"Sub SnackBarBottomCentered As VuetifyApp"},{"signature":"Sub SnackBarTopRight As VuetifyApp"},{"signature":"Sub SnackBarBottomLeft As VuetifyApp"},{"signature":"Sub SnackBarBottomRight As VuetifyApp"},{"signature":"Sub SnackBarCentered As VuetifyApp"},{"signature":"Sub ShowDialog(b As Boolean)"},{"signature":"Sub ShowDialog1"},{"signature":"Sub HideDialog"},{"signature":"Sub GetPromptValue As String"},{"signature":"Sub ShowConfirm(sprocess As String, Title As String, Message As String, ConfirmText As String, CancelText As String)"},{"signature":"Sub ShowPrompt(sProcess As String, Title As String, Label As String, Placeholder As String, Hint As String, DefaultValue As String, OkText As String, CancelText As String)"},{"signature":"Sub ShowPrompt1(sProcess As String, Title As String, Label As String, Placeholder As String, Hint As String, DefaultValue As String, OkText As String, CancelText As String, InputType As String)"},{"signature":"Sub ShowAlert(sProcess As String, title As String, Message As String, OkTitle As String)"},{"signature":"Sub getConfirm As String"},{"signature":"Sub getPromptProcess As String"},{"signature":"Sub ShowSnackBarError(Message As String) As VuetifyApp"},{"signature":"Sub ShowSnackBarSuccess(Message As String) As VuetifyApp"},{"signature":"Sub ShowSnackBarPrimary(Message As String) As VuetifyApp"},{"signature":"Sub ShowSnackBarSecondary(Message As String) As VuetifyApp"},{"signature":"Sub ShowSnackBarInfo(Message As String) As VuetifyApp"},{"signature":"Sub ShowSnackBarWarning(Message As String) As VuetifyApp"},{"signature":"Sub ShowSnackBar(Message As String) As VuetifyApp"},{"signature":"Sub HideSnackBar As VuetifyApp"},{"signature":"Sub BindVueElement(elx As VueElement)"},{"signature":"Sub BindState(elx As VueElement)"},{"signature":"Sub GetBreakPointName As String"},{"signature":"Sub getAppNode As BANanoElement"},{"signature":"Sub SetTemplate(str As String)"},{"signature":"Sub getTemplateNode As BANanoElement"},{"signature":"Sub getPlaceHolderNode As BANanoElement"},{"signature":"Sub getAppendHolderNode As BANanoElement"},{"signature":"Sub getMainNode As BANanoElement"},{"signature":"Sub UseVueApexCharts"},{"signature":"Sub UseJsPDF"},{"signature":"Sub Initialize(Module As Object, myapp As String)"},{"signature":"Sub AddDateTranslation(partOf As String, myTerm As String)"},{"signature":"Sub UnregisterBeforeUnload"},{"signature":"Sub RegisterBeforeUnload"},{"signature":"Sub SetMethod2(Module As Object, methodName As String)"},{"signature":"Sub Truncate(txt As String, size As Int) As String"},{"signature":"Sub OnBeforeEach(MethodName As String)"},{"signature":"Sub OnAfterEach(MethodName As String)"},{"signature":"Sub join(x As List) As String"},{"signature":"Sub strparse(v As String) As List"},{"signature":"Sub strparseover(content As String) As Int"},{"signature":"Sub setVersion(verName As String)"},{"signature":"Sub getVersion As String"},{"signature":"Sub StoratePersistedWait As Boolean"},{"signature":"Sub StoragePersistWait As Boolean"},{"signature":"Sub StorageEstimateWait As StorageQuota"},{"signature":"Sub StartHeartBeat(persist As Boolean, seconds As Long)"},{"signature":"Sub SaveSession"},{"signature":"Sub ReadSession"},{"signature":"Sub DeleteSession"},{"signature":"Sub StopHeartBeat"},{"signature":"Public Sub UpDown(variance As String) As String\t\t'ignore"},{"signature":"Sub RagSmiley(item As String) As String    'ignore"},{"signature":"Sub Reactions(item As String) As String    'ignore"},{"signature":"Public Sub RagCircles(dVariance As Int) As String   'ignore"},{"signature":"Public Sub GenderAvatar(gender As String) As String   'ignore"},{"signature":"Sub UseVueTippy"},{"signature":"Sub IsFullScreen As Boolean"},{"signature":"Sub json2list(content As String) As List"},{"signature":"Sub BuildTextColor(s As String, i As String) As String"},{"signature":"Sub AddTheme(themeName As String, ForeColor As String, ForeColorIntensity As String, BackColor As String, BackColorIntensity As String)"},{"signature":"Sub CreateOwnComponent(id As String, compName As String) As VueElement"},{"signature":"Sub CreateDynamicComponent(id As String, viewID As String, compID As String) As VueElement"},{"signature":"Sub GetHexColor(Color As String, Intensity As String) As String"},{"signature":"Sub GetColorHex(sColor As String) As String"},{"signature":"Sub ListOfColorsToHex(colors As List) As List"},{"signature":"Sub ModuleExist(tagName As String) As Boolean"},{"signature":"Sub AddModule(tagName As String)"},{"signature":"Sub ImportComponentBO(compName As String, comp As BANanoObject)"},{"signature":"Sub NewList As List"},{"signature":"Sub NewMap As Map"},{"signature":"Sub AddRealComponent(k As String)"},{"signature":"Sub AddRoute(comp As VueComponent)"},{"signature":"Sub RegisterComponent(compName As String, compOptions As Map)"},{"signature":"Sub Empty(elID As String)"},{"signature":"Sub OnMounted(methodName As String, args As List)"},{"signature":"Sub SetMounted(Module As Object, methodName As String, args As List)"},{"signature":"Sub OnDestroyed(methodName As String, args As List)"},{"signature":"Sub SetDestroyed(Module As Object, methodName As String, args As List)"},{"signature":"Sub Thousands(smoney As String) As String   'ignoreDeadCode"},{"signature":"Sub OnActivated(methodName As String, args As List)"},{"signature":"Sub SetActivated(Module As Object,methodName As String, args As List)"},{"signature":"Sub OnDeActivated(methodName As String, args As List)"},{"signature":"Sub SetDeActivated(Module As Object,methodName As String, args As List)"},{"signature":"Sub OnUpdated(methodName As String, args As List)"},{"signature":"Sub SetUpdated(Module As Object,methodName As String, args As List)"},{"signature":"Sub OnBeforeMount(methodName As String, args As List)"},{"signature":"Sub SetBeforeMount(Module As Object,methodName As String, args As List)"},{"signature":"Sub OnBeforeUpdate(methodName As String, args As List)"},{"signature":"Sub SetBeforeUpdate(Module As Object,methodName As String, args As List)"},{"signature":"Sub OnBeforeDestroy(methodName As String, args As List)"},{"signature":"Sub SetBeforeDestroy(Module As Object,methodName As String, args As List)"},{"signature":"Sub OnBeforeCreate(methodName As String, args As List)"},{"signature":"Sub SetBeforeCreate(Module As Object,methodName As String, args As List)"},{"signature":"Sub OnCreated(methodName As String, args As List)"},{"signature":"Sub SetCreated(Module As Object,methodName As String, args As List)"},{"signature":"Sub State2Another(source As String, target As String, defaultValue As Object)"},{"signature":"Sub SetFocus(refID As String)"},{"signature":"Sub NullifyFileSelect(refID As String)"},{"signature":"Sub RefNull(refID As String)"},{"signature":"Sub Click(refID As String)"},{"signature":"Sub ShowFileSelect(fsName As String)"},{"signature":"Sub RefreshKey(keyName As String)"},{"signature":"Sub SetStore(prop As String, value As Object)"},{"signature":"Sub SetStorePop(lstname As String)"},{"signature":"Sub GetStoreFirst(lstName As String) As Object"},{"signature":"Sub SetStorePush(listName As String, item As Object)"},{"signature":"Sub SetDataPush(listName As String, item As Object)"},{"signature":"Sub SetStoreUnshift(lstname As String, obj As Object)"},{"signature":"Sub SetDataUnshift(lstname As String, obj As Object)"},{"signature":"Sub SetStoreShift(lstname As String)"},{"signature":"Sub SetDataShift(lstname As String)"},{"signature":"Sub SetDataPop(lstname As String)"},{"signature":"Sub GetDataFirst(lstName As String) As Object"},{"signature":"Sub SetDataSplice(lstname As String, pos As Int, removeHowMany As Int, obj As Object)"},{"signature":"Sub SetDataSpliceRemove(lstname As String, pos As Int, removeHowMany As Int)"},{"signature":"Sub GetDataSlice(lstname As String, startPos As Int) As List"},{"signature":"Sub GetDataToString(lstname As String) As String"},{"signature":"Sub GetStore(prop As String) As Object    'IgnoreDeadCode"},{"signature":"Sub Increment(prop As String, addVal As Int)"},{"signature":"Sub Decrement(prop As String, addVal As Int)"},{"signature":"Sub SetFilter(methodName As String, args As List)"},{"signature":"Sub SetLocale(slang As String)"},{"signature":"Sub OnComputed(k As String, methodName As String, args As List)"},{"signature":"Sub SetComputed(k As String, methodName As String, args As List)"},{"signature":"Sub OnWatch(k As String, bImmediate As Boolean, bDeep As Boolean, methodName As String)"},{"signature":"Sub SetWatch(k As String, bImmediate As Boolean, bDeep As Boolean, methodName As String, args As List)"},{"signature":"Sub RunMethod(methodName As String, args As Object) As BANanoObject"},{"signature":"Sub CallMethod(methodName As String)"},{"signature":"Sub AddMethod(methodName As String, args As List)"},{"signature":"Sub SetMethod(Module As Object, methodName As String, args As List)"},{"signature":"Sub SetCallBack(methodName As String, cb As BANanoObject)"},{"signature":"Sub SetState(m As Map)"},{"signature":"Sub HasState(k As String) As Boolean"},{"signature":"Sub ToggleItem(elID As String)"},{"signature":"Sub ToggleDrawer(elID As String)"},{"signature":"Sub OpenDrawer(elID As String)"},{"signature":"Sub CloseDrawer(elID As String)"},{"signature":"Sub Toggle(stateName As String)"},{"signature":"Sub StateExists(stateName As String) As Boolean"},{"signature":"Sub SetStateMap(mapKey As String, mapValues As Map)"},{"signature":"Sub SetStateList(mapKey As String, mapValues As List)"},{"signature":"Sub SetStateListValues(mapValues As List)"},{"signature":"Sub GetStates(lst As List) As Map"},{"signature":"Sub SetStateTrue(k As String)"},{"signature":"Sub SetStateFalse(k As String)"},{"signature":"Sub SetStateSingle(k As String, v As Object)"},{"signature":"Sub getElementById(elID As String) As BANanoElement"},{"signature":"Sub Serve"},{"signature":"Sub ActivePage As BANanoObject"},{"signature":"Sub AddTranslation(sourceLang As String, targetLang As String, sourceKey As String, sourceContent As String, targetContent As String)"},{"signature":"Sub AddTranslation1(sourceLang As String, sourceKey As String, sourceContent As String)"},{"signature":"Sub Destroy"},{"signature":"Sub SetRTL(b As Boolean)"},{"signature":"Sub SetDarkTheme(b As Boolean)"},{"signature":"Sub FormReset(formName As String)"},{"signature":"Sub FormResetValidation(formName As String)"},{"signature":"Sub FormValidate(formName As String) As Boolean"},{"signature":"Sub FormValidate1(formName As String) As Boolean"},{"signature":"Sub RunMethodOnActive(compName As String)"},{"signature":"Sub ActivePageOkResponse"},{"signature":"Sub ActivePageCancelResponse"},{"signature":"Sub RunMethodOnApp(compName As String)"},{"signature":"Sub GetRefs As BANanoObject"},{"signature":"Sub FormValidateOnComponentOnApp(componentName As String, formName As String) As Boolean"},{"signature":"Sub FormResetOnComponentOnApp(componentName As String, formName As String)"},{"signature":"Sub FormResetValidationOnComponentOnApp(componentName As String, formName As String)"},{"signature":"Sub RunMethodOnComponentOnApp(componentName As String, methodName As String)"},{"signature":"Sub RunMethodOnComponent(componentName As String, methodName As String)"},{"signature":"Sub GetSlots As BANanoObject"},{"signature":"Sub getCurrentPath As String"},{"signature":"Sub GetParamValue(qry As String) As Object"},{"signature":"Sub GetQueryValue(qry As String) As String"},{"signature":"Sub RouteRefresh"},{"signature":"Sub GetQuery As Map"},{"signature":"Sub GetParams As Map"},{"signature":"Sub RouteGetQuery As Map"},{"signature":"Sub RouteGetParams As Map"},{"signature":"Sub NavigateToRedirect(orPath As String)"},{"signature":"Sub Loading(b As Boolean)"},{"signature":"Sub SaveRoute(toRoute As Map, bCheckRedirect As Boolean)"},{"signature":"Sub NavigateToNext(boNext As BANanoObject, nPath As String)"},{"signature":"Sub NavigateAbort(boNext As BANanoObject)"},{"signature":"Sub NavigateTo(sPath As String)"},{"signature":"Sub NavigateReplace(sPath As String)"},{"signature":"Sub NavigateToVersion(sPath As String)"},{"signature":"Sub NavigateToWithParamsVersion(sPath As String, params As Map)"},{"signature":"Sub NavigateToWithQueryVersion(sPath As String, params As Map)"},{"signature":"Sub NavigateToWithParams(sPath As String, params As Map)"},{"signature":"Sub NavigateToWithQuery(sPath As String, params As Map)"},{"signature":"Sub NavigateReplaceWithQuery(sPath As String, params As Map)"},{"signature":"Sub RouterReplace(sPath As String)"},{"signature":"Sub GoBack()"},{"signature":"Sub GoForward()"},{"signature":"Sub Use(bo As BANanoObject)"},{"signature":"Sub Use1(bo As BANanoObject, uopt As Map)"},{"signature":"Sub NotState(stateName As String) As Boolean"},{"signature":"Sub SetRequired(elID As String, b As Boolean)"},{"signature":"Sub Enable(elID As String)"},{"signature":"Sub Disable(elID As String)"},{"signature":"Sub SetEnabled(elID As String, b As Boolean)"},{"signature":"Sub Hide(elID As String)"},{"signature":"Sub Show(elID As String)"},{"signature":"Sub GetPlaceholderHTML As String"},{"signature":"Sub GetPlaceholder As String"},{"signature":"Sub SetClick(methodName As String)"},{"signature":"Sub ScrollTo(elID As String, duration As Int, offset As Int, easing As String)"},{"signature":"Sub GoTo(elID As String)"},{"signature":"Sub AddRule(ruleName As String, MethodName As String)"},{"signature":"Sub GetReadyState As String"},{"signature":"Sub SetReadyChange()"},{"signature":"Sub DateDiff(currentDate As String, otherDate As String) As Int"},{"signature":"Sub MinuteDiff(currentDate As String, otherDate As String) As Int"},{"signature":"Sub RemoveDataItems(items As List)"},{"signature":"Sub RemoveData(key As String)"},{"signature":"Sub SetDataFreeze(prop As String, xvalue As Object)"},{"signature":"Sub CStr(o As Object) As String"},{"signature":"Sub SetData(prop As String, value As Object)"},{"signature":"Sub GetData(prop As String) As Object"},{"signature":"Sub FormatDisplayDate(item As String, sFormat As String) As String"},{"signature":"Sub FormatDisplayNumber(item As String, sFormat As String) As String"},{"signature":"Sub BindVueTable(el As VueTable)"},{"signature":"Sub ListToMap(lst As List) As Map"},{"signature":"Sub ListToDataSource(keyName As String, valueName As String, lst As List) As List"},{"signature":"Sub AddDataTable(Module As Object, parentID As String, elID As String) As VueTable"},{"signature":"Sub AddContainer(Module As Object, parentID As String, elID As String, bFluid As Boolean) As VueElement"},{"signature":"Sub AddSheet(Module As Object, parentID As String, elID As String, Height As String, Color As String, props As Map) As VueElement"},{"signature":"Sub AddDrawer(Module As Object, parentID As String, elID As String, vmodel As String, bVisible As Boolean, Color As String, bRight As Boolean, props As Map) As VueElement"},{"signature":"Sub AddAppDrawer(Module As Object, elID As String, vmodel As String, bVisible As Boolean, Color As String, bRight As Boolean, props As Map) As VueElement"},{"signature":"Sub AddBtn(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddSparkLine(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddBtnToggle(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddNavigationDrawer(Module As Object, parentID As String, elID As String, vmodel As String) As VueElement"},{"signature":"Sub AddOverlay(Module As Object, parentID As String, elID As String, vmodel As String, props As Map) As VueElement"},{"signature":"Sub AddNav(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddToolbarTitle(Module As Object, parentID As String, elID As String, Caption As String, Color As String, props As Map) As VueElement"},{"signature":"Sub AddApp As VueElement"},{"signature":"Sub AddMain As VueElement"},{"signature":"Sub AddStepper(Module As Object, parentID As String, elID As String, vmodel As String, altLabels As Boolean, nonLinear As Boolean, bVertical As Boolean, props As Map) As VueElement"},{"signature":"Sub AddStepperStep(Module As Object, parentID As String, elID As String, color As String, complete As String, editable As Boolean, iStep As String, props As Map) As VueElement"},{"signature":"Sub AddStepperContent(Module As Object, parentID As String, elID As String, iStep As String, Caption As String,props As Map) As VueElement"},{"signature":"Sub AddStepperHeader(Module As Object, parentID As String, elID As String, Caption As String, props As Map) As VueElement"},{"signature":"Sub AddStepperItems(Module As Object, parentID As String, elID As String, props As Map) As VueElement"},{"signature":"Sub AddForm(Module As Object, parentID As String, elID As String, vmodel As String, bLazyValidation As Boolean, props As Map) As VueElement"},{"signature":"Sub AddTemplate(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddListItemAction(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddListItemContent(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddListItemIcon(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddListItemAvatar(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddListItemTitle(Module As Object, parentID As String, elID As String, caption As String) As VueElement"},{"signature":"Sub AddListItemSubTitle(Module As Object, parentID As String, elID As String, caption As String) As VueElement"},{"signature":"Sub AddListItemGroup(Module As Object, parentID As String, elID As String, color As String) As VueElement"},{"signature":"Sub AddListItemActionText(Module As Object, parentID As String, elID As String, caption As String) As VueElement"},{"signature":"Sub AddHamburger(Module As Object, parentID As String, elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddAppBarNavIcon(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddToolbar(Module As Object, parentID As String, elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddAppBar(Module As Object, elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddSlotAppend(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddSlotExtension(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddSlideXReverseTransition(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddFabTransition(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddFadeTransition(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddExpandTransition(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddScaleTransition(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddScrollXTransition(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddScrollXReverseTransition(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddScrollYReverseTransition(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddScrollYTransition(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddSlideYTransition(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddSlideXTransition(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddSlideYReverseTransition(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddTimeLine(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddTimeLineItem(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddSnackBar(Module As Object, parentID As String, elID As String, vmodel As String, Caption As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddAppendSlot(Module As Object, parentID As String, elID As String, props As Map) As VueElement"},{"signature":"Sub AddProgressLinear(Module As Object, parentID As String, elID As String, vmodel As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddProgressCircular(Module As Object, parentID As String, elID As String, vmodel As String, caption As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddSlot(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddAnchor(Module As Object, parentID As String, elID As String, href As String, caption As String, target As String) As VueElement"},{"signature":"Sub AddComponent(Module As Object, parentID As String, eTag As String, elID As String) As VueElement"},{"signature":"Sub AddCard(Module As Object, parentID As String, elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddWindow(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddWindowItem(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddCardTitle(Module As Object, parentID As String, elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddCardSubTitle(Module As Object, parentID As String, elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddCardText(Module As Object, parentID As String, elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddCardActions(Module As Object, parentID As String, elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddVueElement(Module As Object, parentID As String, elID As String, tag As String, vModel As String, Caption As String, color As String, props As Map) As VueElement"},{"signature":"Sub UpdateVueElement(Module As Object, elID As String, vModel As String, Caption As String, props As Map) As VueElement"},{"signature":"Sub CleanID(v As String) As String"},{"signature":"Sub AddStepperHorizontal(Module As Object, parentID As String, elID As String, vmodel As String, altLabels As Boolean, nonLinear As Boolean, props As Map) As VueElement"},{"signature":"Sub AddChipGroup(Module As Object, parentID As String, elID As String, vModel As String,  activeClass As String, bMultiple As Boolean, bShowArrows As Boolean, bFilter As Boolean, DataSource As String, Key As String, Value As String, chipgroupprops As Map, chipprops As Map) As VueElement"},{"signature":"Sub AddComboBox1(Module As Object, parentID As String, fldName As String, vmodel As String, Title As String, DataSource As String, Key As String, Value As String, bMultiple As Boolean, ReturnObject As Boolean) As VueElement"},{"signature":"Sub AddSelect1(Module As Object, parentID As String, fldName As String, vmodel As String, Title As String, DataSource As String, Key As String, Value As String, bMultiple As Boolean, ReturnObject As Boolean) As VueElement"},{"signature":"Sub AddAutoComplete1(Module As Object, parentID As String, fldName As String, vmodel As String, Title As String, DataSource As String, Key As String, Value As String, bMultiple As Boolean , ReturnObject As Boolean) As VueElement"},{"signature":"Sub AddAutoComplete(Module As Object, parentID As String, elID As String, vmodel As String, sLabel As String, bRequired As Boolean, bMultiple As Boolean, sPlaceHolder As String, sourceTable As String, sourceField As String, displayField As String, returnObject As Boolean, sHelperText As String, props As Map) As VueElement"},{"signature":"Sub AddComboBox(Module As Object, parentID As String, elID As String, vmodel As String, sLabel As String, bRequired As Boolean, bMultiple As Boolean, sPlaceHolder As String, sourceTable As String, sourceField As String, displayField As String, returnObject As Boolean, sHelperText As String, props As Map) As VueElement"},{"signature":"Sub AddButtonWithRightIcon(Module As Object, parentID As String, elID As String, eLabel As String, eIcon As String, eColor As String, bOutlined As Boolean, btnprops As Map, iconprops As Map) As VueElement"},{"signature":"Sub AddButtonWithLeftIcon(Module As Object, parentID As String, elID As String, eLabel As String, eIcon As String, eColor As String, bOutlined As Boolean, btnprops As Map, iconprops As Map) As VueElement"},{"signature":"Sub AddAvatarWithBadge(Module As Object, parentID As String, elID As String, imgURL As String, avatarSize As Int, vmodel As String, badgeColor As String, avatarprops As Map, badgeprops As Map) As VueElement"},{"signature":"Sub AddAvatar1(Module As Object, parentID As String, elID As String, vmodel As String, avatarSize As Int, avatarprops As Map) As VueElement"},{"signature":"Sub AddUnorderedList(Module As Object, parentID As String, id As String) As VueElement"},{"signature":"Sub AddOrderedList(Module As Object, parentID As String, id As String) As VueElement"},{"signature":"Sub AddLI(Module As Object, parentID As String, id As String, text As String) As VueElement"},{"signature":"Sub AddLink(Module As Object, parentID As String, id As String, href As String, text As String) As VueElement"},{"signature":"Sub AddAvatar(Module As Object, parentID As String, elID As String, imgURL As String, avatarSize As Int, avatarprops As Map) As VueElement"},{"signature":"Sub AddAvatarWithText(Module As Object, parentID As String, elID As String, Caption As String, Color As String, avatarSize As Int, TextColor As String, TextColorIntensity As String, avatarprops As Map, textProps As Map) As VueElement"},{"signature":"Sub AddSelect(Module As Object, parentID As String, elID As String, vmodel As String, sLabel As String, bRequired As Boolean, bMultiple As Boolean, sPlaceHolder As String, sourceTable As String, sourceField As String, displayField As String, returnObject As Boolean, sHelperText As String, props As Map) As VueElement"},{"signature":"Sub AddRouterView(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddSpan(Module As Object, parentID As String, elID As String, Caption As String,  TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddH6(Module As Object, parentID As String, elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddH5(Module As Object, parentID As String, elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddH4(Module As Object, parentID As String, elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddH3(Module As Object, parentID As String, elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddH2(Module As Object, parentID As String, elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddParagraph(Module As Object, parentID As String, elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddH1(Module As Object, parentID As String, elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddLoremIpsum(Module As Object, parentID As String, elID As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddLabel(Module As Object, parentID As String, elID As String, Size As String, Caption As String, bLoremIpsum As Boolean, TextColor As String, TextColorIntensity As String, props As Map) As VueElement"},{"signature":"Sub AddDiv(module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddAlert(Module As Object, parentID As String, elID As String, vmodel As String, bVisible As Boolean, Caption As String, bLoremIpsum As Boolean, bDismissible As Boolean, aType As String,  BorderPosition As String, props As Map) As VueElement"},{"signature":"Sub AddButton1(Module As Object, parentID As String, elID As String, sLabel As String, props As Map) As VueElement 'ignore"},{"signature":"Sub AddButton(Module As Object, parentID As String, elID As String, sLabel As String, eColor As String, bOutlined As Boolean,  props As Map) As VueElement   'ignore"},{"signature":"Sub AddSubHeader(Module As Object, parentID As String, elID As String, Caption As String) As VueElement"},{"signature":"Sub AddCarousel(Module As Object, parentID As String, elID As String, vmodel As String) As VueElement"},{"signature":"Sub AddCarouselItem(Module As Object, parentID As String, elID As String, cContent As String) As VueElement"},{"signature":"Sub AddExpansionPanels(Module As Object, parentID As String, elID As String, vModel As String) As VueElement"},{"signature":"Sub AddRow(Module As Object, parentID As String, rowpos As Int) As VueElement"},{"signature":"Sub AddCol(Module As Object, parentID As String, colpos As Int, xs As String, sm As String, md As String, lg As String, xl As String) As VueElement"},{"signature":"Sub getMatrixID(prefix As String, r As Int, c As Int) As String"},{"signature":"Sub AddButtonWithBadge(Module As Object, parentID As String, elID As String, elLabel As String, btnColor As String, vmodel As String, badgeIcon As String, badgeColor As String, btnproperties As Map, badgeproperties As Map) As VueElement"},{"signature":"Sub AddExpansionPanel(Module As Object, parentID As String, elID As String, HeaderCaption As String) As VueElement"},{"signature":"Sub AddButtonWithIconWithBadge(Module As Object, parentID As String, elID As String, eIcon As String, btnColor As String, vmodel As String, badgeIcon As String, badgeColor As String, btnprops As Map, iconprops As Map, badgeProperties As Map) As VueElement"},{"signature":"Sub AddIconWithBadge(Module As Object, parentID As String, elID As String, eIcon As String, eColor As String, vmodel As String, badgeIcon As String, badgeColor As String, btnproperties As Map, badgeproperties As Map) As VueElement"},{"signature":"Sub AddButtonWithIcon(Module As Object, parentID As String, elID As String, eIcon As String, btnColor As String, btnprops As Map, iconprops As Map) As VueElement"},{"signature":"Sub AddMsgBox(Module As Object, bPersistent As Boolean, width As Int, okColor As String, cancelColor As String) As VueElement"},{"signature":"Sub AddDialogAlertPrompt(Module As Object, parentID As String, elID As String, bPersistent As Boolean, dWidth As String, OkColor As String, CancelColor As String) As VueElement"},{"signature":"Sub DialogCancelShowHide(eliD As String, b As Boolean)"},{"signature":"Sub DialogOkShowHide(elID As String, b As Boolean)"},{"signature":"Sub DialogTitle(Module As Object, dlgID As String) As VueElement"},{"signature":"Sub DialogForm(Module As Object, dlgID As String) As VueElement"},{"signature":"Sub DialogValidate(dlgID As String) As Boolean"},{"signature":"Sub DialogContainer(Module As Object, dlgID As String) As VueElement"},{"signature":"Sub DialogUpdateTitle(dlgID As String, title As String)"},{"signature":"Sub OpenDialog(dldID As String)"},{"signature":"Sub CloseDialog(dldID As String)"},{"signature":"Sub AddDialogInput(Module As Object, parentID As String, elID As String, bPersistent As Boolean, dWidth As String, Title As String, OkTitle As String, OkColor As String, CancelTitle As String, CancelColor As String) As VueElement"},{"signature":"Sub GetDatePickerText(Module As Object, dpID As String) As VueElement"},{"signature":"Sub GetToolBar(Module As Object, elID As String) As VueElement"},{"signature":"Sub GetDateTimePicker(Module As Object, dpID As String) As VueElement"},{"signature":"Sub AddDatePickerInput1(Module As Object, parentID As String, elID As String, vModel As String, sLabel As String, txtprops As Map, dateprops As Map) As VueElement"},{"signature":"Sub AddDatePickerInput(Module As Object, parentID As String, elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, sHint As String, txtprops As Map, dateprops As Map) As VueElement"},{"signature":"Sub AddTimePickerInput1(Module As Object, parentID As String, elID As String, vModel As String, sLabel As String, txtprops As Map, tpprops As Map) As VueElement"},{"signature":"Sub AddTimePickerInput(Module As Object, parentID As String, elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, sHint As String, txtprops As Map, dateprops As Map) As VueElement"},{"signature":"Sub AddIcon(Module As Object, parentID As String, elID As String, eIcon As String, color As String, bDark As Boolean, iconprops As Map) As VueElement"},{"signature":"Sub AddBadge(Module As Object, parentID As String, elID As String, vmodel As String, content As String, color As String, bDot As Boolean, bOverLap As Boolean, bDark As Boolean, badgeProps As Map) As VueElement"},{"signature":"Sub AddSearch(Module As Object, parentID As String, elID As String, vmodel As String, slabel As String, bSolo As Boolean, props As Map) As VueElement"},{"signature":"Sub AddParallax(Module As Object, parentID As String, elID As String, sheight As String, src As String, alt As String, props As Map) As VueElement"},{"signature":"Sub AddFileInput(Module As Object, parentID As String, elID As String, vmodel As String, slabel As String, splaceholder As String, bMultiple As Boolean, sHint As String, props As Map) As VueElement"},{"signature":"Sub AddFileInput1(Module As Object, parentID As String, fldName As String, vmodel As String, title As String, props As Map) As VueElement"},{"signature":"Sub AddFileInputImage(Module As Object, parentID As String, elID As String) As VueElement"},{"signature":"Sub AddSlider(Module As Object, parentID As String, elID As String, vmodel As String, slabel As String, iminvalue As Object, imaxvalue As Object, iStep As Int,  bShowThumb As Boolean,  bVertical As Boolean, props As Map) As VueElement"},{"signature":"Sub AddTelephone1(Module As Object, parentID As String, elID As String, vmodel As String, slabel As String, props As Map) As VueElement"},{"signature":"Sub AddTelephone(Module As Object, parentID As String, elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, iMaxLen As Int, sHint As String, props As Map) As VueElement"},{"signature":"Sub AddEmail1(Module As Object, parentID As String, elID As String, vmodel As String, slabel As String, props As Map) As VueElement"},{"signature":"Sub AddEmail(Module As Object, parentID As String, elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, iMaxLen As Int, sHint As String, props As Map) As VueElement"},{"signature":"Sub AddTextField1(Module As Object, parentID As String, elID As String, vModel As String, sLabel As String, props As Map) As VueElement"},{"signature":"Sub AddTextField(Module As Object, parentID As String, elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, iMaxLen As Int, sHint As String, props As Map) As VueElement"},{"signature":"Sub AddTextArea1(Module As Object, parentID As String, elID As String, vmodel As String, slabel As String, props As Map) As VueElement"},{"signature":"Sub AddTextArea(Module As Object, parentID As String, elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, iMaxLen As Int, sHint As String, props As Map) As VueElement"},{"signature":"Sub AddPassword1(Module As Object, parentID As String, fldName As String, vmodel As String, title As String, maxLen As Int, props As Map) As VueElement"},{"signature":"Sub AddPassword(Module As Object, parentID As String, elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, iMaxLen As Int, sHint As String, props As Map) As VueElement"},{"signature":"Sub AddSwitch(Module As Object, parentID As String, sid As String, vmodel As String, slabel As String, truevalue As Object, falsevalue As Object, color As String, bInset As Boolean, props As Map) As VueElement"},{"signature":"Sub AddRating(Module As Object, parentID As String, sid As String, vmodel As String, slength As Int, ssize As Int, bHover As Boolean, color As String, props As Map) As VueElement"},{"signature":"Sub AddCheckBox(Module As Object, parentID As String, sid As String, vmodel As String, slabel As String, truevalue As Object, falsevalue As Object, color As String, props As Map) As VueElement"},{"signature":"Sub AddImage1(Module As Object, parentID As String, elID As String, vmodel As String, alt As String, sheight As String, swidth As String, props As Map) As VueElement"},{"signature":"Sub AddImage(Module As Object, parentID As String, elID As String, src As String, lazysrc As String, alt As String, sheight As String, swidth As String, props As Map) As VueElement"},{"signature":"Sub AddSpacer(Module As Object, parentID As String, elid As String, props As Map) As VueElement"},{"signature":"Sub AddDivider(Module As Object, parentID As String, elid As String, props As Map) As VueElement"},{"signature":"Sub AddList(Module As Object, parentID As String, elid As String, bDense As Boolean, bFlat As Boolean, bRounded As Boolean, props As Map) As VueElement"},{"signature":"Sub AddListItem(Module As Object, parentID As String, elid As String, props As Map) As VueElement"},{"signature":"Sub AddFooter(Module As Object, parentID As String, elid As String, bPadless As Boolean, bFlat As Boolean, props As Map) As VueElement"},{"signature":"Sub AddHover(Module As Object, parentID As String, elid As String, props As Map) As VueElement"},{"signature":"Sub AddChip(Module As Object, parentID As String, elid As String) As VueElement"},{"signature":"Sub AddTimePicker(Module As Object, parentID As String, elid As String, vmodel As String, defaultValue As String, props As Map) As VueElement"},{"signature":"Sub AddDatePicker(Module As Object, parentID As String, elid As String, vmodel As String, defaultValue As String, props As Map) As VueElement"},{"signature":"Sub AddMenu(Module As Object, parentID As String, elid As String, returnValue As String, bCloseOnContentClick As Boolean, bCloseOnClick As Boolean, props As Map) As VueElement"},{"signature":"Sub AddDialog(Module As Object, parentID As String, elid As String, vmodel As String, bPersistent As Boolean, width As String, props As Map) As VueElement"},{"signature":"Sub AddChipWithAvatar(Module As Object, parentID As String, elID As String, src As String, label As String, bPill As Boolean, bClose As Boolean, color As String, chipprops As Map, avatarprops As Map, imgprops As Map) As VueElement"},{"signature":"Sub AddChipWithIcon(Module As Object, parentID As String, elID As String, sicon As String, label As String, bPill As Boolean, bClose As Boolean, color As String, chipprops As Map, iconprops As Map) As VueElement"},{"signature":"Sub AddRadioGroup(Module As Object, parentID As String, elID As String, vmodel As String, sLabel As String, bRow As Boolean, bMultiple As Boolean, sourceTable As String, key As String, value As String, colorField As String, radiogroupprops As Map, radioprops As Map) As VueElement"},{"signature":"Sub AddFab(Module As Object, parentID As String, elID As String, eIcon As String, eColor As String, bOutlined As Boolean, btnprops As Map, iconprops As Map) As VueElement"},{"signature":"Sub AddFab1(Module As Object, parentID As String, elID As String, eIcon As String, eColor As String) As VueElement"},{"signature":"Sub GetSelectedFiles(e As BANanoEvent) As List"},{"signature":"Sub GetSelectedFile(e As BANanoEvent) As Map"},{"signature":"Sub IsVisible(ve As VueElement, bShow As Boolean)"},{"signature":"Sub UseGoogleCharts"},{"signature":"Sub ImportBO(compName As String, comp As BANanoObject)"},{"signature":"Sub ComponentExists(compName As String) As Boolean"},{"signature":"Sub UseLeafLet"},{"signature":"Sub GetDataAtPosition(lstName As String, pos As Int) As Map"},{"signature":"Sub GetDataPositionWhere(lstName As String, props As Map) As Int"},{"signature":"Sub UseVBlur"},{"signature":"Sub setAuthenticated(b As Boolean)"},{"signature":"Sub getAuthenticated As Boolean"},{"signature":"Sub OnAuthenticated As String"},{"signature":"Sub nextTick"},{"signature":"Sub UseVueClipBoard"},{"signature":"Sub UseVJSF"},{"signature":"Sub UseVAnimateCss"},{"signature":"Sub UseBeautifulChat"},{"signature":"Sub UseColumnsResizable"},{"signature":"Sub UsePrism"},{"signature":"Sub UseDynamic"},{"signature":"Sub GetDataWhere(lstName As String, whereMap As Map) As Map"},{"signature":"Sub TreeViewRefresh(tv As VueElement)"},{"signature":"Sub SetActiveItems(elID As String, lst As List)"},{"signature":"Sub SetOpenItems(elID As String, lst As List)"},{"signature":"Sub SetLoading(elID As String, b As Boolean)"},{"signature":"Sub VueRefs"},{"signature":"Sub ClickFile(refID As String)"},{"signature":"Sub ClearFile(refID As String)"},{"signature":"Sub OnNextTick(Module As Object, methodName As String)"},{"signature":"Sub SetNextTick(Module As Object, methodName As String)"},{"signature":"Sub GetThemeColor(color As String, intensity As String) As String"},{"signature":"Sub ColorList As List"},{"signature":"Sub ShowSwal(s As String)"},{"signature":"Sub ShowSwalError(message As String)"},{"signature":"Sub ShowSwalSuccess(message As String)"},{"signature":"Sub ShowSwalInfo(message As String)"},{"signature":"Sub ShowSwalWarning(message As String)"},{"signature":"Sub ShowSwalToastSuccess(message As String, time As Int)"},{"signature":"Sub ShowSwalToastError(message As String, time As Int)"},{"signature":"Sub ShowSwalToastWarning(message As String, time As Int)"},{"signature":"Sub ShowSwalToastInfo(message As String, time As Int)"},{"signature":"Sub ShowSwalNotification(message As String)"},{"signature":"Sub ShowSwalNotificationSuccess(message As String, time As Int)"},{"signature":"Sub ShowSwalNotificationError(message As String, time As Int)"},{"signature":"Sub ShowSwalNotificationInfo(message As String, time As Int)"},{"signature":"Sub ShowSwalNotificationWarning(message As String, time As Int)"},{"signature":"Sub ShowSwalInputWait(title As String, message As String, okText As String, cancelText As String) As String"},{"signature":"Sub ShowSwalConfirmWait(title As String, message As String, okText As String, cancelText As String) As Boolean"},{"signature":"Sub ShowSwalAlertWait(title As String, message As String, okText As String) As Boolean"},{"signature":"Sub ShowSwalSuccessWait(title As String, message As String, okText As String) As Boolean"},{"signature":"Sub ShowSwalErrorWait(title As String, message As String, okText As String) As Boolean"},{"signature":"Sub ShowSwalWarningWait(title As String, message As String, okText As String) As Boolean"},{"signature":"Sub OnTimeOut(MethodName As String, ms As Int)"},{"signature":"Sub SetTimeOut(Module As Object, MethodName As String, ms As Int)"},{"signature":"Sub OnInterval(MethodName As String, ms As Int) As Int"},{"signature":"Sub SetInterval(Module As Object, MethodName As String, ms As Int) As Int"},{"signature":"Sub UpdateColor(elID As String, colName As String)"},{"signature":"Sub UpdateVisibility(elID As String, colName As Boolean)"},{"signature":"Sub UpdateVisible(elID As String, colName As Boolean)"},{"signature":"Sub UpdateDisabled(elID As String, colName As Boolean)"},{"signature":"Sub UpdateLoading(elID As String, vLoading As Boolean)"},{"signature":"Sub TrimMapItems(m As Map) As Map"},{"signature":"Sub TrimListItems(m As List) As List"},{"signature":"Sub Md5Hash(value As String, key As String, raw As Boolean) As String"},{"signature":"Sub UpdateItems(elIDName As String, items As List)"},{"signature":"Sub UpdateBadge(elIDName As String, items As Int)"},{"signature":"Sub IncrementBadge(elIDName As String)"},{"signature":"Sub DecrementBadge(elIDName As String)"},{"signature":"Sub UpdateBadgeColor(bID As String, color As String)"},{"signature":"Sub LineThroughIfTrue(b As Boolean) As String"},{"signature":"Sub isNaN(obj As Object) As Boolean"},{"signature":"Sub FindItemAtPosition(lstName As String, pos As Int) As Map"},{"signature":"Sub RealTimeListDelete(lstName As String, prop As String, value As String)"},{"signature":"Sub RealTimeListUpdateVisible(lstName As String, prop As String, value As String, b As Boolean)"},{"signature":"Sub RealTimeListUpdate(lstName As String, prop As String, value As String, item As Map)"},{"signature":"Sub RealTimeListAdd(lstName As String, rowdata As Map)"},{"signature":"Sub RealTimeListRead(lstName As String, prop As String, value As String) As Map"},{"signature":"Sub RealTimeListUpdateItemAtPosition(lstName As String, pos As Int, item As Map)"},{"signature":"Sub RealTimeListFindItem(lstName As String, whereMap As Map) As Map"},{"signature":"Sub RealTimeListFindItemAtPosition(lstName As String, pos As Int) As Map"},{"signature":"Sub RealTimeListFindItemPosition(lstName As String, whereMap As Map) As Int"},{"signature":"Sub RealTimeListRemoveItem(lstName As String, prop As String, value As String)"},{"signature":"Sub RealTimeListUpdateItem(lstName As String, prop As String, value As String, item As Map)"},{"signature":"Sub RealTimeListRemoveItemAtPosition(lstName As String, pos As Int)"},{"signature":"Sub RealTimeListGetDataPositionWhere(lstName As String, props As Map) As Int"},{"signature":"Sub RealTimeReadItem(lstName As String, prop As String, value As String) As Map"},{"signature":"Sub RealTimeListSetDataSpliceRemove(lstname As String, pos As Int, removeHowMany As Int)"},{"signature":"Sub RealTimeListSetDataSplice(lstname As String, pos As Int, removeHowMany As Int, obj As Object)"},{"signature":"Sub RealTimeListSetDataPush(listName As String, item As Object)"},{"signature":"Sub RealTimeUpdateItemAtPosition(lstName As String, pos As Int, item As Map)"},{"signature":"Sub RealTimeRemoveItemAtPosition(lstName As String, pos As Int)"},{"signature":"Sub RealTimeFindItemPosition(lstName As String, whereMap As Map) As Int"},{"signature":"Sub RealTimeAddItem(lstName As String, rowData As Map)"},{"signature":"Sub RealTimeRemoveItem(lstName As String, prop As String, value As String)"},{"signature":"Sub RealTimeRemoveItemWhere(lstName As String, wm As Map)"},{"signature":"Sub RealTimeUpdateItem(lstName As String, prop As String, value As String, item As Map)"},{"signature":"Sub RealTimeFindItem(lstName As String, whereMap As Map) As Map"},{"signature":"Sub RealTimeFindItemAtPosition(lstName As String, pos As Int) As Map"},{"signature":"Sub TogglePassword(elID As String)"},{"signature":"Sub UpdateFieldVisibile(cName As String, b As Boolean)"},{"signature":"Sub UpdateFieldReadOnly(cName As String, b As Boolean)"},{"signature":"Sub UpdateFieldRequired(cName As String, b As Boolean)"},{"signature":"Sub UpdateFieldDisabled(cName As String, b As Boolean)"},{"signature":"Sub UpdateFieldLoading(cName As String, b As Boolean)"},{"signature":"Sub UpdateFieldCaption(cName As String, s As String)"},{"signature":"Sub UpdateFieldItems(cName As String, items As List)"},{"signature":"Sub UpdateFieldClearItems(cName As String)"},{"signature":"Sub UpdateFieldAddItems(cName As String, items As Map)"},{"signature":"Sub UpdateFieldAddColors(cName As String, items As Map)"},{"signature":"Sub UpdateFieldAddPerson(cName As String, value As String, text As String, avatar As String)"},{"signature":"Sub UpdateFieldColor(cName As String, cColor As String, cColorIntensity As String)"},{"signature":"Sub UpdateFieldTextColor(cName As String, cColor As String, cColorIntensity As String)"},{"signature":"Sub UpdateFieldImage(cName As String, src As String)"},{"signature":"Sub UpdateFieldLazyImage(cName As String, src As String)"},{"signature":"Sub UpdateFieldTogglePassword(elID As String)"},{"signature":"Sub UpdateFieldRemoveClass(sitem As String, sClass As String)"},{"signature":"Sub UpdateFieldTextAlign(sitem As String, ta As String)"},{"signature":"Sub UpdateFieldTextDecoration(sItem As String, s As String)"},{"signature":"Sub UpdateFieldTruncate(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldLineThrough(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldFontThin(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldFontLight(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldUnderLine(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldOverline(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldBold(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldFontWeightBlack(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldItalic(sitem As String, b As Boolean)"},{"signature":"Sub FieldBindDefault(sitem As String, prop As String, varName As String, def As Object)"},{"signature":"Sub FieldBind(sitem As String, prop As String, varName As String)"},{"signature":"Sub FieldHiddenXSOnly(sitem As String)"},{"signature":"Sub FieldHiddenSMOnly(sitem As String)"},{"signature":"Sub FieldHiddenMDOnly(sitem As String)"},{"signature":"Sub FieldHiddenLGOnly(sitem As String)"},{"signature":"Sub FieldHiddenXLOnly(sitem As String)"},{"signature":"Sub FieldHiddenSMAndDown(sitem As String)"},{"signature":"Sub FieldHiddenMDAndDown(sitem As String)"},{"signature":"Sub FieldHiddenLGAndDown(sitem As String)"},{"signature":"Sub FieldHiddenSMAndUp(sitem As String)"},{"signature":"Sub FieldHiddenMDAndUp(sitem As String)"},{"signature":"Sub FieldHiddenLGAndUp(sitem As String)"},{"signature":"Sub FieldHiddenOnAll(sitem As String)"},{"signature":"Sub FieldHideOnlyOnXS(sitem As String)"},{"signature":"Sub FieldHideOnlyOnSM(sitem As String)"},{"signature":"Sub FieldHideOnlyOnMD(sitem As String)"},{"signature":"Sub FieldHideOnlyOnLG(sitem As String)"},{"signature":"Sub FieldHideOnlyOnXL(sitem As String)"},{"signature":"Sub FieldVisibleOnAll(sitem As String)"},{"signature":"Sub FieldVisibleOnlyOnXS(sitem As String)"},{"signature":"Sub FieldVisibleOnlyOnSM(sitem As String)"},{"signature":"Sub FieldVisibleOnlyOnMD(sitem As String)"},{"signature":"Sub FieldVisibleOnlyOnLG(sitem As String)"},{"signature":"Sub FieldVisibleOnlyOnXL(sitem As String)"},{"signature":"Sub UpdateFieldToggleClass(sitem As String, sClass As String)"},{"signature":"Sub UpdateFieldAddClass(sItem As String, sClass As String)"},{"signature":"Sub UpdateFieldAddStyle(sitem As String, prop As String, value As String)"},{"signature":"Sub UpdateFieldRemoveStyle(sitem As String, prop As String)"},{"signature":"Sub UpdateFieldLabel(sitem As String, s As String)"},{"signature":"Sub UpdateFieldElevation(sitem As String, iElev As Int)"},{"signature":"Sub UpdateFieldRounded(sitem As String, sround As String)"},{"signature":"Sub UpdateFieldSize(sitem As String, s As String)"},{"signature":"Sub UpdateFieldBadge(elIDName As String, items As Int)"},{"signature":"Sub UpdateFieldIncrementBadge(elIDName As String)"},{"signature":"Sub UpdateFieldDecrementBadge(elIDName As String)"},{"signature":"Sub UpdateFieldBadgeColor(bID As String, color As String)"},{"signature":"Sub UpdateFieldBadgeIconColor(bID As String, color As String)"},{"signature":"Sub UpdateFieldPercentage(bID As String, currentx As Long, totalx As Long)"},{"signature":"Sub UpdateFieldVModel(xVModel As String, s As Object)"},{"signature":"Sub GetFieldVModel(xVModel As String) As Object"},{"signature":"Sub GetFieldBadgeColor(bID As String) As String"},{"signature":"Sub GetFieldBadgeIconColor(bID As String) As String"},{"signature":"Sub GetFieldBadge(elIDName As String) As Int"},{"signature":"Sub GetFieldSize(sitem As String) As Int"},{"signature":"Sub GetFieldVisibile(cName As String) As Boolean"},{"signature":"Sub GetFieldReadOnly(cName As String) As Boolean"},{"signature":"Sub GetFieldRequired(cName As String) As Boolean"},{"signature":"Sub GetFieldDisabled(cName As String) As Boolean"},{"signature":"Sub GetFieldLoading(cName As String) As Boolean"},{"signature":"Sub GetFieldCaption(cName As String) As String"},{"signature":"Sub GetFieldItems(cName As String) As List"},{"signature":"Sub GetFieldImage(cName As String) As String"},{"signature":"Sub GetFieldLazyImage(cName As String) As String"},{"signature":"Sub GetFieldTogglePassword(elID As String) As Boolean"},{"signature":"Sub GetFieldLabel(sitem As String) As String"},{"signature":"Sub UploadFileWait(fileO As Map) As FileObject"},{"signature":"Sub UpdateFieldPercent(xVModel As String, num As Int)"},{"signature":"Sub UpdateFieldProgress(xVModel As String, currentx As Long, totalx As Long)"},{"signature":"Sub ClearVModel(xVModel As String)"},{"signature":"Sub UpdateFieldIndeterminate(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldCaptionVisible(sitem As String, b As Boolean)"},{"signature":"Sub PercentageOf(currentCount As Long, totalCount As Long) As Int"},{"signature":"Sub CreateNewList(lstName As String)"},{"signature":"Sub CreateNewObject(mapName As String)"},{"signature":"Sub SetColorAnimated1(elID As String, duration As Int, FromColor As String, ToColor As String) As BANanoAnimeJS"},{"signature":"Sub SetColorAnimated(elID As String, duration As Int, ToColor As String) As BANanoAnimeJS"},{"signature":"Sub SetVisibleAnimated(elID As String, duration As Int, visibleState As Boolean) As BANanoAnimeJS"},{"signature":"Sub SetLayoutAnimated(elID As String, duration As Int, left As String, top As String, width As String, height As String) As BANanoAnimeJS"},{"signature":"Sub SetLayoutAnimatedRadius(elID As String, duration As Int, left As String, top As String, width As String, height As String, radius As String) As BANanoAnimeJS"},{"signature":"Sub SetWidthAnimated(elID As String, duration As Int, width As String) As BANanoAnimeJS"},{"signature":"Sub SetHeightAnimated(elID As String, duration As Int, height As String) As BANanoAnimeJS"},{"signature":"Sub SetRadiusAnimated(elID As String, duration As Int, radius As String) As BANanoAnimeJS"},{"signature":"Sub SetLeftAnimated(elID As String, duration As Int, left As String) As BANanoAnimeJS"},{"signature":"Sub SetTopAnimated(elID As String, duration As Int, top As String) As BANanoAnimeJS"},{"signature":"Sub SetRotationAnimated(elID As String, duration As Int, degrees As Int) As BANanoAnimeJS"},{"signature":"Sub SetTextSizeAnimated(elID As String, duration As Int, txtSize As Int)"},{"signature":"Sub SetDataAnimated(elID As String, duration As Int, endValue As Object) As BANanoAnimeJS"},{"signature":"Sub NewListViewItemOptions As ListViewItemOptions"},{"signature":"Sub BindStateAll"},{"signature":"Sub getAppRefs As BANanoObject"},{"signature":"Sub getAppRoot As BANanoObject"},{"signature":"Sub BindRouterView(rv As VRouterView)"},{"signature":"Sub BindProgressLoaderOn(appBar As VAppBar)"},{"signature":"Sub ListAdd(listName As String, obj As Object)"},{"signature":"Sub ListClear(listName As String)"},{"signature":"Sub SetComputedBind(methodName As String, cb As BANanoObject)"},{"signature":"Sub SetWatchBind(methodName As String, cb As BANanoObject)"},{"signature":"Sub PrintHTML(elID As String, showModal As Boolean, modalMessage As String, ignoreElements As List)"},{"signature":"Sub GetBackEnd(ds As BananoDataSource)"},{"signature":"Sub SetBackEndMySQLE(targetx As BANanoMySQLE)"},{"signature":"Sub SetBackEnd(ds As BananoDataSource)"},{"signature":"Sub MapRemoveIfBlank(m As Map, items As List)"},{"signature":"Sub CryptoJSAESEncrypt(secret As String, msg As String) As String"},{"signature":"Sub CryptoJSAESDecrypt(secret As String, msg As String) As String"},{"signature":"Sub AddWatch(k As String, bImmediate As Boolean, bDeep As Boolean, methodName As String)"},{"signature":"Sub ReloadCurrentPage(bforce As Boolean)"},{"signature":"Sub GetAppVersion As String"},{"signature":"Sub Append(txt As String)"},{"signature":"Sub PapaParse(Module As Object, event As String, content As String, delimiter As String, hasHeader As Boolean, dynamicTyping As Boolean)"},{"signature":"Sub PapaParse1(Module As Object, event As String, content As String, delimiter As String, hasHeader As Boolean, dynamicTyping As Boolean, encoding As String)"},{"signature":"Sub ParseCSV(Module As Object, event As String, content As String, delimiter As String, hasHeader As Boolean,  dynamicTyping As Boolean)"},{"signature":"Sub ParseCSV1(Module As Object, event As String, content As String, delimiter As String, hasHeader As Boolean,  dynamicTyping As Boolean, encoding As String)"},{"signature":"Sub ListToCSV(content As List, quotes As Boolean, delimiter As String, hasHeader As Boolean) As String"},{"signature":"Sub PapaUnParse(content As List, quotes As Boolean, delimiter As String, hasHeader As Boolean) As String"},{"signature":"Sub AddHTML(shtml As String)"},{"signature":"Sub Download(content As String, fn As String)"},{"signature":"Sub DownloadDataURL(dataURL As String, fn As String)"},{"signature":"Public Sub RagUpDownName(variance As String) As String\t\t'ignore"},{"signature":"Sub RagSmileyName(item As String) As String  'ignore"},{"signature":"Sub ReactionsName(item As String) As String  'ignore"},{"signature":"Public Sub RagCirclesName(dVariance As Int) As String   'ignore"},{"signature":"Public Sub GenderName(gender As String) As String\t\t'ignore"},{"signature":"Sub ListSumProperty(lst As List, prop As String) As Double"},{"signature":"Sub ListAverageProperty(lst As List, prop As String) As Double"},{"signature":"Sub ListSumOfColumn(recs As List, prop As String) As Double"},{"signature":"Sub ListAverageOfColumn(recs As List,prop As String) As Double"},{"signature":"Sub ListMinOfColumn(recs As List, prop As String) As Double"},{"signature":"Sub ListMaxOfColumn(recs As List, prop As String) As Double"},{"signature":"Sub ListMedianOfColumn(recs As List, prop As String) As Double"},{"signature":"Sub ListViewClear(elID As String)"},{"signature":"Sub ListViewAddItem1(elID As String, item As BVAD3ListItem)"},{"signature":"Sub ListViewUpdateItem(elID As String, key As String, item As BVAD3ListItem)"},{"signature":"Sub ListViewShowItem(elID As String, key As String)"},{"signature":"Sub ListViewHideItem(elID As String, key As String)"},{"signature":"Sub ListViewDeleteItem(elID As String, key As String)"},{"signature":"Sub ListViewAddHeader(elID As String, txt As String)"},{"signature":"Sub ListViewAddDivider(elID As String, binset As Boolean)"},{"signature":"Sub ListViewAddItem(elID As String, parent As String, key As String, iconName As String, iconColor As String, sTitle As String, url As String)"},{"signature":"Sub ListViewRefresh(elID As String)"},{"signature":"Sub GetDataAsIs(prop As String) As Object"},{"signature":"Sub SetDataAsIs(prop As String, value As Object)"},{"signature":"Sub createElement(arguements As String) As BANanoElement"},{"signature":"Sub createTextNode(value As String) As BANanoObject"},{"signature":"Sub getElementsByTagName(arguements As String) As List"},{"signature":"Sub getElementsByName(arguments As String) As List"},{"signature":"Sub getElementsByClassName(arguements As BANanoElement) As List"},{"signature":"Sub querySelector(arguments As String) As Object"},{"signature":"Sub querySelectorAll(arguments As String) As List"},{"signature":"Sub createElement1(nodeType As String, attrs As Map, styles As Map, class As List, children As List) As BANanoElement"},{"signature":"Sub images() As List"},{"signature":"Sub forms() As List"},{"signature":"Sub execCommand(command As String)"},{"signature":"Sub applets() As List"},{"signature":"Sub setDocumentTitle(tt As String)"},{"signature":"Sub scripts() As List"},{"signature":"Sub lastModified As String"},{"signature":"Sub links As List"},{"signature":"Sub embeds() As List"},{"signature":"Sub styleSheets() As List"},{"signature":"Sub anchors() As List"},{"signature":"Sub GetBase64ImageFromURLWait(url As String) As String"},{"signature":"Sub Flatten(m As Map, target As String, source As String)"},{"signature":"Sub CallMounted"},{"signature":"Sub CallCreated"},{"signature":"Sub CallDestroyed"},{"signature":"Sub CallActivated"},{"signature":"Sub CallBeforeUpdate"},{"signature":"Sub CallBeforeMount"},{"signature":"Sub CallBeforeDestroy"},{"signature":"Sub CallBeforeCreate"},{"signature":"Sub CallUpdated"},{"signature":"Sub CallDeActivated"},{"signature":"Sub RedirectToHTTPS"},{"signature":"Sub NavigatetoURL(url As String)"},{"signature":"Sub SetBrowserTitle(toPage As Map)"},{"signature":"Sub GetHostName As String"},{"signature":"Sub GetURL As String"},{"signature":"Sub GetProtocol As String"},{"signature":"Sub OpenURL(url As String)"},{"signature":"Sub OpenURLTab(url As String)"},{"signature":"Sub GetQueryString As String"},{"signature":"Sub URLQueryStringFromMap(baseURL As String, params As Map) As String"},{"signature":"Sub ListContains(listname As String, prop As String, value As String) As Boolean"},{"signature":"Sub ListFind(listname As String, prop As String, value As String) As Map"},{"signature":"Sub ListFindKeys(listName As String, prop As String, lstKeys As List) As List"},{"signature":"Sub ListIndexOf(listname As String, prop As String, value As String) As Long"},{"signature":"Sub ListChange(listname As String, prop As String, value As String, item As Map) As Boolean"},{"signature":"Sub ListUpdate(listname As String, prop As String, value As String, item As Map) As Boolean"},{"signature":"Sub ListDelete(listname As String, prop As String, value As String) As Boolean"},{"signature":"Sub SendEmailWait(fromEmail As String, toEmail As String, ccEmail As String, subject As String, message As String) As String"},{"signature":"Sub SetDataReverse(lstname As String)"},{"signature":"Sub SetDataSort(lstname As String)"},{"signature":"Sub GetUsedComponents"},{"signature":"Sub SetCookie(key As String, value As String, expires As Int, spath As String, domain As String, secure As Boolean)"},{"signature":"Sub ShowBrowserNotification(Title As String, Desc As String, Url As String, Icon As String, Vibrate As Boolean, Seconds As Int)\t\t'ignoreDeadCode"},{"signature":"Sub OpenURLWhatsApp(tel As String)"},{"signature":"Sub OpenURLTel(tel As String)"},{"signature":"Sub DoNotDestroy(e As BANanoEvent)"},{"signature":"Sub Text2Speech(langx As String, text As String)"},{"signature":"Sub BreaCrumbClear(elID As String)"},{"signature":"Sub BreadCrumbAddItem(parentID As String, sID As String, sText As String, sTo As String, sHref As String, bExact As Boolean, bLink As Boolean,  aDisabled As Boolean)"},{"signature":"Sub ActivePageItemToggleVisibility(drID As String)"},{"signature":"Sub Token36 As String"},{"signature":"Sub CopyToClipboard1(sContent As String)"},{"signature":"Sub CopyToClipBoard(sContent As String)"},{"signature":"Sub WindowGetSelection As String"},{"signature":"Sub PurifyDOM(shtml As String) As String"},{"signature":"Sub UpdateActivatorColor(elID As String, color As String)"},{"signature":"Sub UpdateActivatorImage(elID As String, img As String)"},{"signature":"Sub UpdateFieldOutlined(elID As String,  b As Boolean)"},{"signature":"Sub ToggleOutlined(elID As String)"},{"signature":"Sub UpdateIconColor(elID As String, color As String)"},{"signature":"Sub ToggleColor(elID As String, color1 As String, color2 As String)"},{"signature":"Sub ScrollToTop"},{"signature":"Sub AddCssFile(url As String)"},{"signature":"Sub getElementByIDRT(V As VuetifyApp, elID As String) As BANanoObject"},{"signature":"Sub SetDataCreateList(lstName As String, lst As List)"},{"signature":"Sub SetDataCreateMap(mapName As String, m As Map)"},{"signature":"Sub CreateList As List"},{"signature":"Sub MasterDialogInitialize"},{"signature":"Sub Prompt(sProcess As String, Title As String, Label As String, Placeholder As String, Hint As String, DefaultValue As String, OkText As String, CancelText As String)"},{"signature":"Sub Confirm(sProcess As String, Title As String, Message As String, ConfirmText As String, CancelText As String)"},{"signature":"Sub Alert(sProcess As String, Title As String, Message As String, ConfirmText As String)"},{"signature":"Sub Process As String"},{"signature":"Sub setCancelLabel(s As String)"},{"signature":"Sub setOkVisible(b As Boolean)"},{"signature":"Sub setOkLabel(s As String)"},{"signature":"Sub setOkLoading(b As Boolean)"},{"signature":"Sub setCancelLoading(b As Boolean)"},{"signature":"Sub setCancelVisible(b As Boolean)"},{"signature":"Sub setTitle(vToolbarCaption As String)"},{"signature":"Sub setScrollable(b As Boolean)"},{"signature":"Sub setMessage(vCardTextx As String)"},{"signature":"Sub setBlurry(b As Boolean)"},{"signature":"Sub GetResponseValue As String"},{"signature":"Sub ForceUpdateRouter"},{"signature":"Sub GetFileAsText(fileObj As Map) As String"},{"signature":"Sub GetFileAsJSON(fileObj As Map) As Object"},{"signature":"Sub GetFileAsBinaryString(fileObj As Map) As Object"},{"signature":"Sub GetFileAsDataURL(fileObj As Map) As Object"},{"signature":"Sub GetFileAsArrayBuffer(fileObj As Map) As Object"},{"signature":"Sub PlayAudio(url As String, volume As Double)"}],"properties":[]}