{"filename":"VTreeView","events":[{"event":"Checked (items As List)"},{"event":"Clicked (items As List)"},{"event":"Opened (items As List)"},{"event":"Input (items As List)"},{"event":"UpdateActive (items As List)"},{"event":"UpdateOpen (items As List)"},{"event":"Delete (item As Map)"},{"event":"Add (item As Map)"},{"event":"Edit (item As Map)"},{"event":"MenuKey (item As Map)"}],"subroutines":[{"signature":"Sub Class_Globals"},{"signature":"Sub Initialize (CallBack As Object, Name As String, EventName As String)"},{"signature":"Sub AddToParent(targetID As String, Props As Map)"},{"signature":"Sub Remove()"},{"signature":"Sub AddClass(s As String) As VTreeView"},{"signature":"Sub AddAttr(p As String, v As Object) As VTreeView"},{"signature":"Sub AddStyle(p As String, v As String) As VTreeView"},{"signature":"Sub RemoveAttr(p As String) As VTreeView"},{"signature":"Sub Hide"},{"signature":"Sub Show"},{"signature":"Sub UpdateVisible(C As VueComponent, b As Boolean) As VTreeView"},{"signature":"Sub UpdateVisibleOnApp(C As VuetifyApp, b As Boolean) As VTreeView"},{"signature":"Sub UpdateActive(C As VueComponent, lactive As List)"},{"signature":"Sub ActiveItem(C As VueComponent, sitem As String)"},{"signature":"Sub UnActiveItem(C As VueComponent, sitem As String)"},{"signature":"Sub UpdateActiveOnApp(C As VuetifyApp, lactive As List)"},{"signature":"Sub UpdateOpen(C As VueComponent, lopen As List)"},{"signature":"Sub OpenAll"},{"signature":"Sub OpenAllBut(exclude As List)"},{"signature":"Sub ClearAllOpen"},{"signature":"Sub UpdateOpenOnApp(C As VuetifyApp, lopen As List)"},{"signature":"Sub OpenItem(C As VueComponent, sitem As String)"},{"signature":"Sub UnOpenItem(C As VueComponent, sitem As String)"},{"signature":"Sub UpdateSelected(C As VueComponent, lvalue As List)"},{"signature":"Sub UpdateSelectedOnApp(C As VuetifyApp, lvalue As List)"},{"signature":"Sub SelectItem(C As VueComponent, sitem As String)"},{"signature":"Sub UnSelectItem(C As VueComponent, sitem As String)"},{"signature":"Sub CheckItem(C As VueComponent, sitem As String)"},{"signature":"Sub UnCheckItem(C As VueComponent, sitem As String)"},{"signature":"Sub UpdateAll(b As Boolean)"},{"signature":"Sub SetChecked(C As VueComponent, lvalue As List)"},{"signature":"Sub UpdateChecked(C As VueComponent, vItems As List)"},{"signature":"Sub UpdateCheckedOnApp(C As VuetifyApp, vItems As List)"},{"signature":"Sub SetCheckedOnApp(C As VuetifyApp, lvalue As List)"},{"signature":"Sub GetChecked(C As VueComponent) As List"},{"signature":"Sub GetCheckedOnApp(C As VuetifyApp) As List"},{"signature":"Sub SetClicked(C As VueComponent, lvalue As List)"},{"signature":"Sub SetClickedOnApp(C As VuetifyApp, lvalue As List)"},{"signature":"Sub GetClicked(C As VueComponent) As List"},{"signature":"Sub GetClickedOnApp(C As VuetifyApp) As List"},{"signature":"Sub SetOpened(C As VueComponent, lvalue As List)"},{"signature":"Sub SetOpenedOnApp(C As VuetifyApp, lvalue As List)"},{"signature":"Sub GetOpened(C As VueComponent) As List"},{"signature":"Sub GetOpenedOnApp(C As VuetifyApp) As List"},{"signature":"Sub UpdateItems(C As VueComponent, litems As List)"},{"signature":"Sub UpdateItemsOnApp(C As VuetifyApp, litems As List)"},{"signature":"Sub Reload(C As VueComponent, vItems As List)"},{"signature":"Sub ReloadOnApp(C As VuetifyApp, vItems As List)"},{"signature":"Sub Clear(C As VueComponent)"},{"signature":"Sub ClearOnApp(C As VuetifyApp)"},{"signature":"Sub AddItem(parentID As String, key As String, text As String, mhref As String, mIcon As String, mDisabled As Boolean)"},{"signature":"Sub FindItem(Parent As Map, s As String) As Map"},{"signature":"Sub SetItemMenuVisible(iID As String, b As Boolean, iMenus As List)"},{"signature":"Sub AddChild(parent As Map, key As String, text As String, mhref As String, mIcon As String, mDisabled As Boolean)"},{"signature":"Sub AddItems(parentID As String, lkeys As List)"},{"signature":"Sub Refresh(C As VueComponent)"},{"signature":"Sub RefreshWait(C As VueComponent) As Boolean"},{"signature":"Sub RefreshOnApp(C As VuetifyApp)"},{"signature":"Sub GetIDs As List"},{"signature":"Sub GetData(C As VueComponent) As List"},{"signature":"Sub RootNode As Map"},{"signature":"Sub GetDataOnApp(C As VuetifyApp) As List"},{"signature":"Sub getID As String"},{"signature":"Sub getHere As String"},{"signature":"Sub BindState(C As VueComponent)"},{"signature":"Sub BindStateOnApp(c As VuetifyApp)"},{"signature":"Sub HiddenXSOnly"},{"signature":"Sub HiddenSMOnly"},{"signature":"Sub HiddenMDOnly"},{"signature":"Sub HiddenLGOnly"},{"signature":"Sub HiddenXLOnly"},{"signature":"Sub HiddenSMAndDown"},{"signature":"Sub HiddenMDAndDown"},{"signature":"Sub HiddenLGAndDown"},{"signature":"Sub HiddenSMAndUp"},{"signature":"Sub HiddenMDAndUp"},{"signature":"Sub HiddenLGAndUp"},{"signature":"Sub HiddenOnAll"},{"signature":"Sub HideOnlyOnXS"},{"signature":"Sub HideOnlyOnSM"},{"signature":"Sub HideOnlyOnMD"},{"signature":"Sub HideOnlyOnLG"},{"signature":"Sub HideOnlyOnXL"},{"signature":"Sub VisibleOnAll"},{"signature":"Sub VisibleOnlyOnXS"},{"signature":"Sub VisibleOnlyOnSM"},{"signature":"Sub VisibleOnlyOnMD"},{"signature":"Sub VisibleOnlyOnLG"},{"signature":"Sub VisibleOnlyOnXL"},{"signature":"Sub UpdateTextColor(xColor As String, xIntensity As String)"},{"signature":"Sub UpdateTextColorOnApp(C As VuetifyApp, xColor As String, xIntensity As String)"},{"signature":"Sub UpdateColor(xColor As String, xIntensity As String)"},{"signature":"Sub UpdateColorOnApp(C As VuetifyApp, xColor As String, xIntensity As String)"},{"signature":"Sub UpdateTextAlign(talign As String)"},{"signature":"Sub UpdateTextAlignOnApp(C As VuetifyApp, talign As String)"},{"signature":"Sub ToggleClass(sClass As String)"},{"signature":"Sub ToggleClassOnApp(A As VuetifyApp, sClass As String)"},{"signature":"Sub AddClassRT(sClass As String)"},{"signature":"Sub AddClassOnApp(A As VuetifyApp, sClass As String)"},{"signature":"Sub RemoveClassRT(sClass As String)"},{"signature":"Sub RemoveClass(sClass As String)"},{"signature":"Sub RemoveClassOnApp(A As VuetifyApp, sClass As String)"},{"signature":"Sub AddStyleRT(prop As String, value As String)"},{"signature":"Sub RemoveStyleRT(prop As String)"},{"signature":"Sub AddStyleOnApp(A As VuetifyApp, prop As String, value As String)"},{"signature":"Sub RemoveStyleOnApp(A As VuetifyApp, prop As String)"},{"signature":"Sub BindDefault(prop As String, varName As String, def As Object)"},{"signature":"Sub Bind(prop As String, varName As String)"},{"signature":"Sub getHTML As String"},{"signature":"Sub ListAdd(obj As Object)"},{"signature":"Sub ListClear()"},{"signature":"Sub ListChange(prop As String, value As String, item As Map) As Boolean"},{"signature":"Sub ListContains(prop As String, value As String) As Boolean"},{"signature":"Sub ListDelete(prop As String, value As String) As Boolean"},{"signature":"Sub ListFind(prop As String, value As String) As Map"},{"signature":"Sub ListFindKeys(prop As String, lstKeys As List) As List"},{"signature":"Sub ListIndexOf(prop As String, value As String) As Long"},{"signature":"Sub ListUpdate(prop As String, value As String, item As Map) As Boolean"},{"signature":"Sub AddDesignWait(designName As String) As Boolean"},{"signature":"Sub DesignerCreateView (Target As BANanoElement, Props As Map)"},{"signature":"Sub Freeze"},{"signature":"Sub FreezeOnApp(C As VuetifyApp)"},{"signature":"Sub Defrost"},{"signature":"Sub DefrostOnApp(c As VuetifyApp)"}],"properties":[{"key":"ParentID","displayname":"ParentID","fieldtype":"String","defaultvalue":"","description":"The id of the element to place this into"},{"key":"Hidden","displayname":"Hidden","fieldtype":"Boolean","defaultvalue":"False","description":"Hidden"},{"key":"Selectable","displayname":"CheckBox / Selectable","fieldtype":"Boolean","defaultvalue":"false","description":"Will render a checkbox next to each node allowing them to be selected"},{"key":"SelectedColor","displayname":"Checkbox / Selected Color","fieldtype":"String","defaultvalue":"accent","description":"The color of the selection checkbox","list":"accent|amber|black|blue|blue-grey|brown|cyan|deep-orange|deep-purple|error|green|grey|indigo|info|light-blue|light-green|lime|none|orange|pink|primary|purple|red|secondary|success|teal|transparent|warning|white|yellow"},{"key":"SelectionType","displayname":"SelectionType","fieldtype":"String","defaultvalue":"leaf","description":"Controls how the treeview selects nodes","list":"independent|leaf"},{"key":"Activatable","displayname":"Clickable / Activatable","fieldtype":"Boolean","defaultvalue":"True","description":"Allows user to mark a node as active by clicking on it"},{"key":"MultipleActive","displayname":"Multiple","fieldtype":"Boolean","defaultvalue":"false","description":"When true. allows user to have multiple active nodes at the same time"},{"key":"ActiveClass","displayname":"Active Class","fieldtype":"String","defaultvalue":"","description":"The class applied to the node when active"},{"key":"ItemKeys","displayname":"Menu Keys (;)","fieldtype":"String","defaultvalue":"add; edit; delete","description":"Menu Keys"},{"key":"ItemSize","displayname":"Menu Item Size","fieldtype":"String","defaultvalue":"x-small","description":"Menu Item Size","list":"large|normal|small|x-large|x-small"},{"key":"HiddenItemKeys","displayname":"Hidden Menu Keys (;)","fieldtype":"String","defaultvalue":"","description":"Hidden Menu Keys on all items. Can be used to show a single menu item for a node."},{"key":"ItemIcons","displayname":"Menu Icons (;)","fieldtype":"String","defaultvalue":"mdi-plus; mdi-pencil; mdi-trash-can-outline","description":"Menu Icons"},{"key":"ItemColors","displayname":"Menu Colors (;)","fieldtype":"String","defaultvalue":"green; amber; red","description":"Menu Colors"},{"key":"ItemTexts","displayname":"Menu Texts (;)","fieldtype":"String","defaultvalue":"Add; Edit; Delete","description":"Menu Texts"},{"key":"ToolTipPosition","displayname":"Tooltip Position","fieldtype":"String","defaultvalue":"left","description":"Tool Tip Position","list":"bottom|left|right|top"},{"key":"Color","displayname":"Color","fieldtype":"String","defaultvalue":"primary","description":"Sets the color of the active node","list":"accent|amber|black|blue|blue-grey|brown|cyan|deep-orange|deep-purple|error|green|grey|indigo|info|light-blue|light-green|lime|none|orange|pink|primary|purple|red|secondary|success|teal|transparent|warning|white|yellow"},{"key":"ColorIntensity","displayname":"ColorIntensity","fieldtype":"String","defaultvalue":"","description":"ColorIntensity","list":"accent-1|accent-2|accent-3|accent-4|darken-1|darken-2|darken-3|darken-4|lighten-1|lighten-2|lighten-3|lighten-4|lighten-5|normal"},{"key":"Dark","displayname":"Dark","fieldtype":"Boolean","defaultvalue":"false","description":"Applies the dark theme variant to the component"},{"key":"Dense","displayname":"Dense","fieldtype":"Boolean","defaultvalue":"false","description":"Decreases the height of the items"},{"key":"ExpandIcon","displayname":"ExpandIcon","fieldtype":"String","defaultvalue":"mdi-chevron-down","description":"Icon used to indicate that a node can be expanded"},{"key":"Hoverable","displayname":"Hoverable","fieldtype":"Boolean","defaultvalue":"True","description":"Applies a hover class when mousing over nodes"},{"key":"IndeterminateIcon","displayname":"IndeterminateIcon","fieldtype":"String","defaultvalue":"","description":"Icon used when node is in an indeterminate state"},{"key":"Light","displayname":"Light","fieldtype":"Boolean","defaultvalue":"false","description":"Applies the light theme variant to the component"},{"key":"LoadingIcon","displayname":"LoadingIcon","fieldtype":"String","defaultvalue":"","description":"Icon used when node is in a loading state"},{"key":"OffIcon","displayname":"OffIcon","fieldtype":"String","defaultvalue":"","description":"Icon used when node is not selected"},{"key":"OnIcon","displayname":"OnIcon","fieldtype":"String","defaultvalue":"","description":"Icon used when leaf node is selected or when a branch node is fully selected"},{"key":"OpenAll","displayname":"OpenAll","fieldtype":"Boolean","defaultvalue":"false","description":"When true will cause all branch nodes to be opened when component is mounted"},{"key":"OpenOnClick","displayname":"OpenOnClick","fieldtype":"Boolean","defaultvalue":"False","description":"When true will cause nodes to be opened by clicking anywhere on it. instead of only opening by clicking on expand icon"},{"key":"ReturnObject","displayname":"ReturnObject","fieldtype":"Boolean","defaultvalue":"false","description":"When true will make v-model. active"},{"key":"Rounded","displayname":"Rounded","fieldtype":"Boolean","defaultvalue":"false","description":"Provides an alternative active style for v-treeview node"},{"key":"Shaped","displayname":"Shaped","fieldtype":"Boolean","defaultvalue":"false","description":"Provides an alternative active style for v-treeview node"},{"key":"Transition","displayname":"Transition","fieldtype":"Boolean","defaultvalue":"false","description":"Applies a transition when nodes are opened and closed"},{"key":"VIf","displayname":"VIf","fieldtype":"String","defaultvalue":"","description":"VIf"},{"key":"Classes","displayname":"Classes","fieldtype":"String","defaultvalue":"","description":"Classes added to the HTML tag."},{"key":"Styles","displayname":"Styles","fieldtype":"String","defaultvalue":"","description":"Styles added to the HTML tag. Must be a json String- use ="},{"key":"Attributes","displayname":"Attributes","fieldtype":"String","defaultvalue":"","description":"Attributes added to the HTML tag. Must be a json String- use ="},{"key":"VOn","displayname":"V-On","fieldtype":"String","defaultvalue":"","description":"V-On"},{"key":"GradientActive","displayname":"GradientActive","fieldtype":"Boolean","defaultvalue":"false","description":"Gradient should be set"},{"key":"Gradient","displayname":"Gradient","fieldtype":"String","defaultvalue":"","description":"Gradient","list":"bl_tr|bottom_top|br_tl|left_right|right_left|tl_br|top_bottom|tr_bl"},{"key":"GradientColor1","displayname":"GradientColor1","fieldtype":"Color","defaultvalue":"0xFFCFDCDC","gradient color 1.":"Gradient Color 1."},{"key":"GradientColor2","displayname":"GradientColor2","fieldtype":"Color","defaultvalue":"0xFFCFDCDC","gradient color 2.":"Gradient Color 2."},{"key":"States","displayname":"States","fieldtype":"String","defaultvalue":"","description":"Initial Binding States. Must be a json String."},{"key":"Disabled","displayname":"Disabled","fieldtype":"Boolean","defaultvalue":"False","description":"Disables selection for all nodes"},{"key":"Absolute","displayname":"Absolute","fieldtype":"Boolean","defaultvalue":"False","description":"Absolute"},{"key":"Hover","displayname":"Hover","fieldtype":"Boolean","defaultvalue":"false","description":"Hover"},{"key":"MarginAXYTBLR","displayname":"Margins AXYTBLR","fieldtype":"String","defaultvalue":"a=?; x=?; y=?; t=?; b=?; l=?; r=?","description":"Margins A-X-Y-S-M-L-X"},{"key":"PaddingAXYTBLR","displayname":"Paddings AXYTBLR","fieldtype":"String","defaultvalue":"a=?; x=?; y=?; t=?; b=?; l=?; r=?","description":"Padding A-X-Y-S-M-L-X"},{"key":"Elevation","displayname":"Elevation","fieldtype":"String","defaultvalue":"","description":"Elevation"},{"key":"Height","displayname":"Height","fieldtype":"String","defaultvalue":"","description":"Height"},{"key":"MinHeight","displayname":"MinHeight","fieldtype":"String","defaultvalue":"","description":"MinHeight"},{"key":"MaxHeight","displayname":"MaxHeight","fieldtype":"String","defaultvalue":"","description":"MaxHeight"},{"key":"Width","displayname":"Width","fieldtype":"String","defaultvalue":"","description":"Width"},{"key":"MinWidth","displayname":"MinWidth","fieldtype":"String","defaultvalue":"","description":"MinWidth"},{"key":"MaxWidth","displayname":"MaxWidth","fieldtype":"String","defaultvalue":"","description":"MaxWidth"},{"key":"Tile","displayname":"Tile","fieldtype":"Boolean","defaultvalue":"False","description":"Tile"},{"key":"Shrink","displayname":"Shrink","fieldtype":"Boolean","defaultvalue":"False","description":"Shrink"},{"key":"Grow","displayname":"Grow","fieldtype":"Boolean","defaultvalue":"false","description":"Grow"},{"key":"Flat","displayname":"Flat","fieldtype":"Boolean","defaultvalue":"False","description":"Flat"}]}