{"filename":"VItemGroup","events":[{"event":"Change (item As String)"}],"subroutines":[{"signature":"Sub Class_Globals"},{"signature":"Sub Initialize (CallBack As Object, Name As String, EventName As String)"},{"signature":"public Sub AddToParent(targetID As String, Props As Map)"},{"signature":"Sub Hide"},{"signature":"Sub Show"},{"signature":"public Sub Remove()"},{"signature":"Sub UpdateVisibleOnApp(C As VuetifyApp, b As Boolean)"},{"signature":"Sub BindStateOnApp(c As VuetifyApp)"},{"signature":"Sub AddClass(s As String) As VItemGroup"},{"signature":"Sub BindState(c As VueComponent)"},{"signature":"Sub AddAttr(p As String, v As Object)"},{"signature":"Sub AddStyle(p As String, v As String)"},{"signature":"Sub RemoveAttr(p As String)"},{"signature":"Sub UpdateVisible(b As Boolean)"},{"signature":"Sub getID As String"},{"signature":"Sub getHere As String"},{"signature":"Sub UpdateValue(vValue As String)"},{"signature":"Sub UpdateValueOnApp(A As VuetifyApp, vValue As String)"},{"signature":"Sub ToggleClass(sClass As String)"},{"signature":"Sub ToggleClassOnApp(A As VuetifyApp, sClass As String)"},{"signature":"Sub AddClassRT(sClass As String)"},{"signature":"Sub AddClassOnApp(A As VuetifyApp, sClass As String)"},{"signature":"Sub RemoveClassRT(sClass As String)"},{"signature":"Sub RemoveClass(sClass As String)"},{"signature":"Sub RemoveClassOnApp(A As VuetifyApp, sClass As String)"},{"signature":"Sub AddStyleRT(prop As String, value As String)"},{"signature":"Sub RemoveStyleRT(prop As String)"},{"signature":"Sub AddStyleOnApp(A As VuetifyApp, prop As String, value As String)"},{"signature":"Sub RemoveStyleOnApp(A As VuetifyApp, prop As String)"},{"signature":"Sub BindDefault(prop As String, varName As String, def As Object)"},{"signature":"Sub Bind(prop As String, varName As String)"},{"signature":"Sub UpdateTextColor(xColor As String, xIntensity As String)"},{"signature":"Sub UpdateTextColorOnApp(C As VuetifyApp, xColor As String, xIntensity As String)"},{"signature":"Sub UpdateColor(xColor As String, xIntensity As String)"},{"signature":"Sub UpdateColorOnApp(C As VuetifyApp, xColor As String, xIntensity As String)"},{"signature":"Sub HiddenXSOnly"},{"signature":"Sub HiddenSMOnly"},{"signature":"Sub HiddenMDOnly"},{"signature":"Sub HiddenLGOnly"},{"signature":"Sub HiddenXLOnly"},{"signature":"Sub HiddenSMAndDown"},{"signature":"Sub HiddenMDAndDown"},{"signature":"Sub HiddenLGAndDown"},{"signature":"Sub HiddenSMAndUp"},{"signature":"Sub HiddenMDAndUp"},{"signature":"Sub HiddenLGAndUp"},{"signature":"Sub HiddenOnAll"},{"signature":"Sub HideOnlyOnXS"},{"signature":"Sub HideOnlyOnSM"},{"signature":"Sub HideOnlyOnMD"},{"signature":"Sub HideOnlyOnLG"},{"signature":"Sub HideOnlyOnXL"},{"signature":"Sub VisibleOnAll"},{"signature":"Sub VisibleOnlyOnXS"},{"signature":"Sub VisibleOnlyOnSM"},{"signature":"Sub VisibleOnlyOnMD"},{"signature":"Sub VisibleOnlyOnLG"},{"signature":"Sub VisibleOnlyOnXL"},{"signature":"Sub setMA(sma As String)"},{"signature":"Sub setMX(sma As String)"},{"signature":"Sub setMY(sma As String)"},{"signature":"Sub setMT(sma As String)"},{"signature":"Sub setMB(sma As String)"},{"signature":"Sub setML(sma As String)"},{"signature":"Sub setMR(sma As String)"},{"signature":"Sub setPA(sma As String)"},{"signature":"Sub setPX(sma As String)"},{"signature":"Sub setPY(sma As String)"},{"signature":"Sub setPT(sma As String)"},{"signature":"Sub setPB(sma As String)"},{"signature":"Sub setPL(sma As String)"},{"signature":"Sub setPR(sma As String)"},{"signature":"Sub Item(iStep As String) As String"},{"signature":"Sub AddItem(id As String)"},{"signature":"Sub Content(iStep As Int) As String"},{"signature":"Sub SetValue(C As VueComponent, vValue As Object)"},{"signature":"Sub GetValue(C As VueComponent) As Object"},{"signature":"Sub GetValueOnApp(C As VuetifyApp) As Object"},{"signature":"Sub getVModel As String"},{"signature":"Sub GetSelectedItems(C As VueComponent) As String"},{"signature":"Sub SetSelectedItems(C As VueComponent, StrItems As String)"},{"signature":"Sub AddDesignWait(designName As String) As Boolean"},{"signature":"Sub DesignerCreateView (Target As BANanoElement, Props As Map)"},{"signature":"Sub setParentIDDT(detiParentID As String)"},{"signature":"Sub setHiddenDT(detiHidden As Boolean)"},{"signature":"Sub setValueDT(detiValue As String)"},{"signature":"Sub setItemKeysDT(detiItemKeys As String)"},{"signature":"Sub setActiveClassDT(detiActiveClass As String)"},{"signature":"Sub setDarkDT(detiDark As Boolean)"},{"signature":"Sub setElevationDT(detiElevation As String)"},{"signature":"Sub setLightDT(detiLight As Boolean)"},{"signature":"Sub setMandatoryDT(detiMandatory As Boolean)"},{"signature":"Sub setMaxValueDT(detiMaxValue As String)"},{"signature":"Sub setMultipleDT(detiMultiple As Boolean)"},{"signature":"Sub setRoundedDT(detiRounded As String)"},{"signature":"Sub setMarginAXYTBLRDT(detiMarginAXYTBLR As String)"},{"signature":"Sub setPaddingAXYTBLRDT(detiPaddingAXYTBLR As String)"},{"signature":"Sub setClassesDT(detiClasses As String)"},{"signature":"Sub setStylesDT(detiStyles As String)"},{"signature":"Sub setAttributesDT(detiAttributes As String)"},{"signature":"Sub AddToParentDT(xParentID As String)"}],"properties":[{"key":"ReadMe","displayname":"ReadMe*","fieldtype":"String","defaultvalue":"Item contents IDs are [componentname][key]content. You can add containers with these item IDS or use BANano.LoadLayout with the 'Content' call here passing it the step number. Description"},{"key":"ParentID","displayname":"ParentID","fieldtype":"String","defaultvalue":"","description":"The id of the element to place this into"},{"key":"Hidden","displayname":"Hidden","fieldtype":"Boolean","defaultvalue":"False","description":"Hidden"},{"key":"Value","displayname":"Value","fieldtype":"String","defaultvalue":"item1","description":"The designated model value for the component"},{"key":"ItemKeys","displayname":"Item Keys (;)*","fieldtype":"String","defaultvalue":"item1; item2; item3","description":"Item Keys"},{"key":"ActiveClass","displayname":"Active Class","fieldtype":"String","defaultvalue":"","description":"Configure the active CSS class applied when the link is active"},{"key":"Dark","displayname":"Dark","fieldtype":"Boolean","defaultvalue":"False","description":"Applies the dark theme variant to the component"},{"key":"Elevation","displayname":"Elevation","fieldtype":"String","defaultvalue":"","description":"Elevation"},{"key":"Light","displayname":"Light","fieldtype":"Boolean","defaultvalue":"False","description":"Applies the light theme variant to the component"},{"key":"Mandatory","displayname":"Mandatory","fieldtype":"Boolean","defaultvalue":"False","description":"Forces a value to always be selected if available"},{"key":"MaxValue","displayname":"Max Value","fieldtype":"String","defaultvalue":"","description":"Maxvalue"},{"key":"Multiple","displayname":"Multiple","fieldtype":"Boolean","defaultvalue":"False","description":"Allow multiple selections"},{"key":"Rounded","displayname":"Rounded","fieldtype":"String","defaultvalue":"none","description":"Rounded","list":"none|rounded|rounded-0|rounded-b-xl|rounded-bl-xl|rounded-br-xl|rounded-circle|rounded-l-xl|rounded-lg|rounded-pill|rounded-r-xl|rounded-sm|rounded-t-xl|rounded-tl-xl|rounded-tr-xl|rounded-xl"},{"key":"MarginAXYTBLR","displayname":"Margins AXYTBLR","fieldtype":"String","defaultvalue":"a=?; x=?; y=?; t=?; b=?; l=?; r=?","description":"Margins A-X-Y-S-M-L-X"},{"key":"PaddingAXYTBLR","displayname":"Paddings AXYTBLR","fieldtype":"String","defaultvalue":"a=?; x=?; y=?; t=?; b=?; l=?; r=?","description":"Padding A-X-Y-S-M-L-X"},{"key":"Classes","displayname":"Classes","fieldtype":"String","defaultvalue":"","description":"Classes added to the HTML tag."},{"key":"Styles","displayname":"Styles","fieldtype":"String","defaultvalue":"","description":"Styles added to the HTML tag. Must be a json String- use ="},{"key":"Attributes","displayname":"Attributes","fieldtype":"String","defaultvalue":"","description":"Attributes added to the HTML tag. Must be a json String- use ="}]}