{"filename":"VueElement","events":[{"event":"Blur (e As BANanoEvent)"},{"event":"Change (value As Object)"},{"event":"Click (e As BANanoEvent)"},{"event":"ClickAlt (e As BANanoEvent)"},{"event":"ClickAppend (e As BANanoEvent)"},{"event":"ClickAppendOuter (e As BANanoEvent)"},{"event":"ClickClear (e As BANanoEvent)"},{"event":"ClickClose (e As BANanoEvent)"},{"event":"ClickPrepend (e As BANanoEvent)"},{"event":"ClickPrependInner (e As BANanoEvent)"},{"event":"ClickPrevent (e As BANanoEvent)"},{"event":"ClickShift (e As BANanoEvent)"},{"event":"ClickStop (e As BANanoEvent)"},{"event":"DblClick (e As BANanoEvent)"},{"event":"DblClickPrevent (e As BANanoEvent)"},{"event":"DragEnter (e As BANanoEvent)"},{"event":"DragLeave (e As BANanoEvent)"},{"event":"DragOver (e As BANanoEvent)"},{"event":"Drop (e As BANanoEvent)"},{"event":"End (e As BANanoEvent)"},{"event":"Focus (e As BANanoEvent)"},{"event":"Input (e As BANanoEvent)"},{"event":"KeyDown (e As BANanoEvent)"},{"event":"KeyPress (e As BANanoEvent)"},{"event":"KeyUp (e As BANanoEvent)"},{"event":"KeydownEnterPrevent (e As BANanoEvent)"},{"event":"KeydownLeftPrevent (e As BANanoEvent)"},{"event":"KeydownRightPrevent (e As BANanoEvent)"},{"event":"KeydownSpacePrevent (e As BANanoEvent)"},{"event":"KeyupEnter (e As BANanoEvent)"},{"event":"LeftClick (item As Map)"},{"event":"MouseDown (e As BANanoEvent)"},{"event":"MouseDownStop (e As BANanoEvent)"},{"event":"MouseMove (e As BANanoEvent)"},{"event":"MouseOut (e As BANanoEvent)"},{"event":"MouseOver (event As BANanoEvent)"},{"event":"MouseUp (e As BANanoEvent)"},{"event":"RightClick (item As Map)"},{"event":"Start (e As BANanoEvent)"},{"event":"Submit (e As BANanoEvent)"},{"event":"TouchStartStop (e As BANanoEvent)"}],"subroutines":[{"signature":"Sub Class_Globals"},{"signature":"Sub Initialize (CallBack As Object, Name As String, EventName As String)"},{"signature":"Sub GetActualGradient(source As String) As String\t\t\t'ignore"},{"signature":"Sub ListRemoveItem(lst As List, itm As String) As List"},{"signature":"Sub ListAddDistinctItem(lst As List, itm As String) As List"},{"signature":"Sub AddStyleDynamic(prop As String, value As String)"},{"signature":"Sub AddClassDynamic(value As String)"},{"signature":"Sub AddStyleRunTime(VC As VueComponent, prop As String, value As String)"},{"signature":"Sub AddStyleRunTimeOnApp(VC As VuetifyApp, prop As String, value As String)"},{"signature":"Sub setTypeVB(v As String)"},{"signature":"Sub setIconVB(v As String)"},{"signature":"Sub setBorderVB(v As String)"},{"signature":"Sub setCloseIconVB(v As String)"},{"signature":"Sub setColorVB(v As String)"},{"signature":"Sub setColoredBorderVB(v As Boolean)"},{"signature":"Sub setDismissibleVB(v As Boolean)"},{"signature":"Sub setOutlinedVB(v As Boolean)"},{"signature":"Sub setDarkVB(v As Boolean)"},{"signature":"Sub setDenseVB(v As Boolean)"},{"signature":"Sub setDisabledVB(v As Boolean)"},{"signature":"Sub setProminentVB(v As Boolean)"},{"signature":"Sub setTileVB(v As Boolean)"},{"signature":"Sub setShapedVB(v As Boolean)"},{"signature":"Sub setElevationRT(C As VueComponent, s As String)"},{"signature":"Sub setElevationVB(s As String)"},{"signature":"Sub setHeightVB(s As String)"},{"signature":"Sub setMaxHeightVB(s As String)"},{"signature":"Sub setMinHeightVB(s As String)"},{"signature":"Sub setTextVB(s As Boolean)"},{"signature":"Sub setModeVB(s As Boolean)"},{"signature":"Sub setWidthVB(s As String)"},{"signature":"Sub setMaxWidthVB(s As String)"},{"signature":"Sub setMinWidthVB(s As String)"},{"signature":"Sub setElevation(s As String)"},{"signature":"Sub RemoveStyleDT(prop As String)"},{"signature":"Sub AddStyleOnApp(A As VuetifyApp, prop As String, value As String)"},{"signature":"Sub RemoveStyleRunTime(VC As VueComponent, prop As String)"},{"signature":"Sub RemoveStyleRunTimeOnApp(VC As VuetifyApp, prop As String)"},{"signature":"Sub RemoveStyleOnApp(A As VuetifyApp, prop As String)"},{"signature":"Sub AddClassRunTime(VC As VueComponent, sClass As String)"},{"signature":"Sub AddClassBound(sClass As String)"},{"signature":"Sub AddClassBoundOnConditionTrue(sClass As String, bCondition As Boolean)"},{"signature":"Sub ToggleClassRunTime(VC As VueComponent, sClass As String)"},{"signature":"Sub ToggleClassOnApp(A As VuetifyApp, sClass As String)"},{"signature":"Sub AddClassRunTimeOnApp(A As VuetifyApp, sClass As String)"},{"signature":"Sub RemoveClassRunTime(VC As VueComponent, sClass As String)"},{"signature":"Sub RemoveClassRunTimeOnApp(A As VuetifyApp, sClass As String)"},{"signature":"Sub UpdateTextAlign(VC As VueComponent, ta As String)"},{"signature":"Sub UpdateTextAlignOnApp(A As VuetifyApp, ta As String)"},{"signature":"Sub UpdateTextDecoration(VC As VueComponent, tc As String)"},{"signature":"Sub UpdateTextDecorationOnApp(A As VuetifyApp, tc As String)"},{"signature":"Sub UpdateTextColor(VC As VueComponent, sColor As String, sIntensity As String)"},{"signature":"Sub UpdateTextColorDT(sColor As String, sIntensity As String)"},{"signature":"Sub UpdateColor(VC As VueComponent, sColor As String, sIntensity As String)"},{"signature":"Sub UpdateColorDT(sColor As String, sIntensity As String)"},{"signature":"Sub UpdateColorOnApp(A As VuetifyApp, sColor As String, sIntensity As String)"},{"signature":"Sub UpdateTextColorOnApp(A As VuetifyApp, sColor As String, sIntensity As String)"},{"signature":"Sub NormalizeColor(s As String) As String"},{"signature":"Sub NormalizeIntensity(s As String) As String"},{"signature":"Sub NormalizeTextColor(s As String) As String"},{"signature":"Sub NormalizeTextIntensity(i As String) As String"},{"signature":"Sub SetTemplate(str As String) As VueElement"},{"signature":"Sub AddGradient(lst As List) As VueElement"},{"signature":"Sub ClearGradients As VueElement"},{"signature":"Sub NextRow As Int"},{"signature":"Sub ThisRow As Int"},{"signature":"Sub setRouterReplace(b As Boolean)"},{"signature":"Sub setRouterAppend(b As Boolean)"},{"signature":"Sub AddItemParentChild(parent As String, key As String, iconName As String, iconColor As String, title As String, url As String)"},{"signature":"Sub ListViewSetReplace(itemID As String) As VueElement"},{"signature":"Sub ListViewSetAppend(itemID As String) As VueElement"},{"signature":"Sub UseAuthentication"},{"signature":"Sub ListViewSetIcon(itemID As String, sIcon As String) As VueElement"},{"signature":"Sub ListViewSetIconColor(itemID As String, sIcon As String) As VueElement"},{"signature":"Sub GetMenu1 As VueElement"},{"signature":"Sub GetContainer As VueElement"},{"signature":"Sub GetR(r As Int) As VueElement"},{"signature":"Sub GetRC(r As Int, c As Int) As VueElement"},{"signature":"Sub GetPicker As VueElement"},{"signature":"Sub GetStepperHeader As VueElement"},{"signature":"Sub GetStep(stepN As Int) As VueElement"},{"signature":"Sub GetPanel(stepN As Int) As VueElement"},{"signature":"Sub GetPanelHeader(stepN As Int) As VueElement"},{"signature":"Sub GetPanelContent(stepN As Int) As VueElement"},{"signature":"Sub GetStepperItems As VueElement"},{"signature":"Sub AddStepHorizontal(stepID As String, stepLabel As String, stepComplete As String, stepEditable As String, bHasDivider As Boolean) As VueElement"},{"signature":"Sub GetVueElement(elID As String) As VueElement"},{"signature":"Sub AddStep(stepID As String, stepLabel As String, stepComplete As String, stepEditable As String) As VueElement"},{"signature":"Sub AddTab(tabID As String, Caption As String, Icon As String, IconOnLeft As Boolean) As VueElement"},{"signature":"Sub AddTabButtonIcon(tabID As String, Icon As String) As VueElement"},{"signature":"Sub AddTabButtonIconWithBadge(tabID As String, vModel As String, Icon As String, Value As String) As VueElement"},{"signature":"Sub GetTabItem() As VueElement"},{"signature":"Sub GetTabIcon() As VueElement"},{"signature":"Sub GetSheet() As VueElement"},{"signature":"Sub AddExpansionPanel(elID As String, HeaderCaption As String) As VueElement"},{"signature":"Sub GetExpansionPanel As VueElement"},{"signature":"Sub GetExpansionPanelHeader As VueElement"},{"signature":"Sub GetExpansionPanelContent As VueElement"},{"signature":"Sub setTextCenterClass(b As Boolean)  'ignore"},{"signature":"Sub setTextCenter(b As Boolean)  'ignore"},{"signature":"Sub AddClassTextCenter"},{"signature":"Sub setDisplay2Class(b As Boolean)   'ignore"},{"signature":"Sub setDisplay2(b As Boolean)   'ignore"},{"signature":"Sub AddClassDisplay2"},{"signature":"Sub setDisplay1(b As Boolean)   'ignore"},{"signature":"Sub setDisplay1Class(b As Boolean)  'ignore"},{"signature":"Sub AddClassDisplay1"},{"signature":"Sub setDisplay3(b As Boolean)   'ignore"},{"signature":"Sub setDisplay3Class(b As Boolean)   'ignore"},{"signature":"Sub AddClassDisplay3"},{"signature":"Sub setDisplay4(b As Boolean)  'ignore"},{"signature":"Sub setDisplay4Class(b As Boolean)  'ignore"},{"signature":"Sub AddClassDisplay4 As VueElement"},{"signature":"Sub setHeading(b As Boolean)  'ignore"},{"signature":"Sub setHeadingClass(b As Boolean)  'ignore"},{"signature":"Sub AddClassHeading As VueElement"},{"signature":"Sub setSubHeadingClass(b As Boolean)  'ignore"},{"signature":"Sub setSubHeading(b As Boolean)   'ignore"},{"signature":"Sub AddClassSubHeading"},{"signature":"Sub AddClassHeadLine As VueElement"},{"signature":"Sub setHeadLine(b As Boolean)  'ignore"},{"signature":"Sub setHeadLineClass(b As Boolean)   'ignore"},{"signature":"Sub AddClassTitle As VueElement"},{"signature":"Sub setTitle(b As Boolean)  'ignore"},{"signature":"Sub setTitleClass(b As Boolean)   'ignore"},{"signature":"Sub AddClassBody1 As VueElement"},{"signature":"Sub setBody1Class(b As Boolean) 'ignore"},{"signature":"Sub setBody1(b As Boolean) 'ignore"},{"signature":"Sub AddClassBody2 As VueElement"},{"signature":"Sub setBody2(b As Boolean) 'ignore"},{"signature":"Sub setBody2Class(b As Boolean) 'ignore"},{"signature":"Sub AddClassSubTitle1 As VueElement"},{"signature":"Sub setSubTitle1(b As Boolean) 'ignore"},{"signature":"Sub setSubTitle1Class(b As Boolean) 'ignore"},{"signature":"Sub AddClassSubTitle2 As VueElement"},{"signature":"Sub setSubTitle2(b As Boolean) 'ignore"},{"signature":"Sub setSubTitle2Class(b As Boolean) 'ignore"},{"signature":"Sub AddClassCaption As VueElement"},{"signature":"Sub setCaptionClass(b As Boolean)  'ignore"},{"signature":"Sub setGrow(b As Boolean)"},{"signature":"Sub setHideSlider(b As Object)"},{"signature":"Sub setCentered(b As Boolean)"},{"signature":"Sub setAlignWithTitle(b As Boolean)"},{"signature":"Sub setIconsAndText(b As Boolean)"},{"signature":"Sub setAccordion(b As Boolean)"},{"signature":"Sub setButtonIcon(b As Boolean)"},{"signature":"Sub setFocusable(b As Boolean)"},{"signature":"Sub setHover(b As Boolean)"},{"signature":"Sub setInset(b As Boolean)"},{"signature":"Sub setPopOut(b As Boolean)"},{"signature":"Sub setNoClickAnimation(b As Boolean)"},{"signature":"Sub setTile(b As Boolean)"},{"signature":"Sub setShowArrows(b As Boolean)"},{"signature":"Sub setSliderColor(s As String)"},{"signature":"Sub setSliderSize(s As String)"},{"signature":"Sub setFixedTabs(b As Boolean)"},{"signature":"Sub setItalic(b As Boolean)"},{"signature":"Sub getItalic As Boolean"},{"signature":"Sub setBold(b As Boolean)"},{"signature":"Sub getBold As Boolean"},{"signature":"Sub setFloat(varValue As String)"},{"signature":"Sub getFloat As String"},{"signature":"Sub setCircle(b As Boolean)"},{"signature":"Sub getCircle As Boolean"},{"signature":"Sub setCenter(b As Boolean)"},{"signature":"Sub getCenter As Boolean"},{"signature":"Sub Shrink As VueElement"},{"signature":"Sub Shrink1(b As Boolean) As VueElement"},{"signature":"Sub AddClassShrink As VueElement"},{"signature":"Sub AddStyleOnCondition(varClass As String, varCondition As Boolean, varShouldBe As Object)"},{"signature":"Sub AddStyleOnConditionTrue(varClass As String, varCondition As Boolean, varShouldBe As Boolean)"},{"signature":"Sub setMA(sma As String)"},{"signature":"Sub setMX(sma As String)"},{"signature":"Sub setMY(sma As String)"},{"signature":"Sub setMT(sma As String)"},{"signature":"Sub setMB(sma As String)"},{"signature":"Sub setML(sma As String)"},{"signature":"Sub setMR(sma As String)"},{"signature":"Sub setPA(sma As String)"},{"signature":"Sub setPX(sma As String)"},{"signature":"Sub setPY(sma As String)"},{"signature":"Sub setPT(sma As String)"},{"signature":"Sub setPB(sma As String)"},{"signature":"Sub setPL(sma As String)"},{"signature":"Sub setPR(sma As String)"},{"signature":"Sub SetAttrOnTrue(varClass As String, varCondition As Boolean, varShouldBe As Boolean)"},{"signature":"Sub AddAttrOnConditionTrue(varClass As String, varCondition As Boolean, varShouldBe As Boolean)"},{"signature":"Sub setColorIntensity(varIntensity As String)"},{"signature":"Sub getColorIntensity As String"},{"signature":"Sub setTextColorIntensity(varIntensity As String)"},{"signature":"Sub getTextColorIntensity As String"},{"signature":"Sub setTextColor(varColor As String)"},{"signature":"Sub getTextColor As String"},{"signature":"Sub SetBackgroundColorVB(C As VueComponent, cColor As String, cColorIntensity As String)"},{"signature":"Sub ClearRounded(C As VueComponent)"},{"signature":"Sub SetTextColorVB(C As VueComponent, cColor As String, cColorIntensity As String)"},{"signature":"Sub AppendHolder"},{"signature":"Sub GetElementByData(dataattr As String, value As String) As BANanoElement"},{"signature":"Sub AppendHolderTo(target As String)"},{"signature":"Sub AppendPlaceHolderTo(target As String)"},{"signature":"Sub Empty"},{"signature":"Sub AppendPlaceHolder"},{"signature":"Sub AppendMyPlaceHolder(elid As String)"},{"signature":"Sub BANanoGetHTML(id As String) As String"},{"signature":"Sub setLoremIpsum(b As Boolean)"},{"signature":"Sub getLoremIpsum As Boolean"},{"signature":"Sub getinnerHTML As String"},{"signature":"Sub getouterHTML As String"},{"signature":"Sub getHTML As String"},{"signature":"Sub ToString As String"},{"signature":"Sub SetVBindAttribute(prop As String, value As String)"},{"signature":"Sub SetData(prop As String, value As Object)"},{"signature":"Sub GetData(prop As String) As Object"},{"signature":"Sub SetDataAsIs(prop As String, value As Object)"},{"signature":"Sub GetDataAsIs(prop As String) As Object"},{"signature":"Sub AddRule(MethodName As String)"},{"signature":"Sub NewList As List"},{"signature":"Sub setStates(varBindings As String)"},{"signature":"Sub AddBR As VueElement"},{"signature":"Sub AddHR As VueElement"},{"signature":"Sub AddLoose(attr As String) As VueElement"},{"signature":"Sub AddElement(elID As String, tag As String, props As Map, styleProps As Map, classNames As List, loosex As List, Text As String)"},{"signature":"Sub getElement() As BANanoElement"},{"signature":"Sub setElement(varElement As BANanoElement)"},{"signature":"Sub getID() As String"},{"signature":"Sub setID(varID As String)"},{"signature":"Sub SetAttr1(varID As String, varValue As Boolean)"},{"signature":"Sub AddToParent(targetID As String, Props As Map)"},{"signature":"Sub Remove()"},{"signature":"Sub AddClass(varClass As String) As VueElement"},{"signature":"Sub AddClasses(listOfClasses As List)"},{"signature":"Sub AddClassOnCondition(varClass As String, varCondition As Boolean, varShouldBe As Boolean)"},{"signature":"Sub AddAttrOnCondition(varClass As String, varCondition As Boolean, varShouldBe As Boolean)"},{"signature":"Sub AddStyle(varProp As String, varStyle As String)"},{"signature":"Sub SetAttr(varProp As String, varValue As String)"},{"signature":"Sub BindDynamicComponent(viewID As String, compID As String)"},{"signature":"Sub SetVBindIs(t As String) As VueElement"},{"signature":"Sub setVSlotHover(b As Boolean)   'ignore"},{"signature":"Sub setVSlotNoData(b As Boolean)  'ignore"},{"signature":"Sub setVSlotAppend(b As Boolean)  'ignore"},{"signature":"Sub setVSlotExtension(b As Boolean)  'ignore"},{"signature":"Sub Append(varText As String)"},{"signature":"Sub BindValue(value As String)"},{"signature":"Sub setValidateOnBlur(b As Boolean)"},{"signature":"Sub setGroup(b As Boolean)"},{"signature":"Sub setHideOnLeave(b As Boolean)"},{"signature":"Sub setMode(s As Object)"},{"signature":"Sub setOrigin(s As Object)"},{"signature":"Sub setLeaveAbsolute(b As Boolean)"},{"signature":"Sub Bind(attr As String, xvalue As String)"},{"signature":"Sub Bind2Dynamic(attr As String, value As String)"},{"signature":"Sub BindKey(value As String)"},{"signature":"Sub BindSrc(value As String)"},{"signature":"Sub BindLazySrc(value As String)"},{"signature":"Sub BindTo(value As String)"},{"signature":"Sub BindVueElement(el As VueElement)"},{"signature":"Sub SetComputedBind(methodName As String, cb As BANanoObject)"},{"signature":"Sub SetWatchBind(methodName As String, cb As BANanoObject)"},{"signature":"Sub RemoveAttr(attrName As String)"},{"signature":"Sub RemoveClass(clsName As String)"},{"signature":"Sub AddAttr(varProp As String, varValue As String)"},{"signature":"Sub RemoveCodeBindings(b As List)"},{"signature":"Sub setClasses(varClasses As String)"},{"signature":"Sub setStyle(varStyle As String)"},{"signature":"Sub setAttributes(varAttributes As String)"},{"signature":"Sub setStyles(varStyles As String)"},{"signature":"Sub setCaption(varCaption As String)"},{"signature":"Sub getCaption() As String"},{"signature":"Sub setKey(varKey As String)"},{"signature":"Sub getKey() As String"},{"signature":"Sub setLazySrc(varSrc As String)"},{"signature":"Sub setSrc(varSrc As String)"},{"signature":"Sub setAltLabels(b As Boolean)"},{"signature":"Sub AddBreadCrumbItem(bcText As String, bcTo As String, bcLink As Boolean, bcHref As String, bcExact As Boolean, bcDisabled As Boolean)"},{"signature":"Sub SetDataPush(listName As String, item As Object)"},{"signature":"Sub setNonLinear(b As Boolean)"},{"signature":"Sub setVertical(b As Boolean)"},{"signature":"Sub getSrc() As String"},{"signature":"Sub setAlt(varAlt As String)"},{"signature":"Sub setHref(varAlt As String)"},{"signature":"Sub setTarget(varAlt As String)"},{"signature":"Sub getAlt() As String"},{"signature":"Sub setVOn(varVOn As String)"},{"signature":"Sub setNoTitle(b As Boolean)"},{"signature":"Sub setSelectableColor(sc As String)"},{"signature":"Sub setSelectionType(st As String)"},{"signature":"Sub setSelectable(b As Boolean)"},{"signature":"Sub setOpenOnClick(b As Boolean)"},{"signature":"Sub setOpenOnFocus(b As Boolean)"},{"signature":"Sub setOpenOnHover(b As Boolean)"},{"signature":"Sub getVOn() As String"},{"signature":"Sub setRaised(b As Boolean)"},{"signature":"Sub setVSlotItem(items As List)"},{"signature":"Sub setVSlotSelection(items As List)"},{"signature":"Sub setVSlotActivator(varSlotActivator As String)"},{"signature":"Sub getVSlotActivator() As String"},{"signature":"Sub setVSlotDefault(varSlotDefault As String)"},{"signature":"Sub getVSlotDefault() As String"},{"signature":"Sub setChipLabel(varLabel As Boolean)"},{"signature":"Sub setLabel(varLabel As String)"},{"signature":"Sub getLabel() As String"},{"signature":"Sub setSlot(varSlot As String)"},{"signature":"Sub setComplete(c As String)"},{"signature":"Sub setEditable(b As Boolean)"},{"signature":"Sub getSlot() As String"},{"signature":"Sub setVBind(varVBind As String)"},{"signature":"Sub getVBind() As String"},{"signature":"Sub setVElse(varVElse As String)"},{"signature":"Sub getVElse() As String"},{"signature":"Sub setVElseIf(varVElseIf As String)"},{"signature":"Sub getVElseIf() As String"},{"signature":"Sub setVFor(varVFor As String)"},{"signature":"Sub getVFor() As String"},{"signature":"Sub setDataSource(varVFor As String)"},{"signature":"Sub getDataSource() As String"},{"signature":"Sub setVHtml(varVHtml As String)"},{"signature":"Sub setBlock(b As Boolean)"},{"signature":"Sub getVHtml() As String"},{"signature":"Sub setVIf(varVIf As String)"},{"signature":"Sub getVIf() As String"},{"signature":"Sub setVModel(varVModel As String)"},{"signature":"Sub getVModel() As String"},{"signature":"Sub setRowHeight(rh As String)"},{"signature":"Sub setValue(varValue As String)"},{"signature":"Sub getValue() As String"},{"signature":"Sub setInputValue(varValue As String)"},{"signature":"Sub setInputValueSync(varValue As Boolean)"},{"signature":"Sub setShift(varValue As Boolean)"},{"signature":"Sub setVShow(varVShow As String)"},{"signature":"Sub getVShow() As String"},{"signature":"Sub setVText(varVText As String)"},{"signature":"Sub getVText() As String"},{"signature":"Sub GetThemeColor(color As String, intensity As String) As String"},{"signature":"Sub AddAttrBackgroundColor(varBackgroundColor As String)"},{"signature":"Sub setBackgroundColorAttr(varBackgroundColor As String)"},{"signature":"Sub setBackgroundColor(varBackgroundColor As String)"},{"signature":"Sub getBackgroundColor() As String"},{"signature":"Sub setBackgroundSize(varBackgroundRepeat As String)"},{"signature":"Sub setBackgroundRepeat(varBackgroundRepeat As String)"},{"signature":"Sub setBackgroundClip(varBackgroundRepeat As String)"},{"signature":"Sub setBackgroundOrigin(varBackgroundRepeat As String)"},{"signature":"Sub setBackgroundPosition(varBackgroundPosition As String)"},{"signature":"Sub setBackgroundAttachment(varBackgroundRepeat As String)"},{"signature":"Sub setBorderImageSource(s As String)"},{"signature":"Sub setBorderImageRepeat(s As String)"},{"signature":"Sub setBorderImageSlice(s As String)"},{"signature":"Sub setBorderImageWidth(s As String)"},{"signature":"Sub setBorderTopLeftRadius(varBorderRadius As String)"},{"signature":"Sub setBorderTopRightRadius(varBorderRadius As String)"},{"signature":"Sub setBorderBottomLeftRadius(varBorderRadius As String)"},{"signature":"Sub setBorderBottomRightRadius(varBorderRadius As String)"},{"signature":"Sub setFontSizeAdjust(varFontSize As String)"},{"signature":"Sub setFontVariant(varFontVariant As String)"},{"signature":"Sub setFontStretch(varFontVariant As String)"},{"signature":"Sub setBackgroundImage(varBackgroundImage As String)"},{"signature":"Sub getBackgroundImage() As String"},{"signature":"Sub getBackgroundRepeat() As String"},{"signature":"Sub setBorder(varBorder As String)"},{"signature":"Sub SetBorder1(bSize As String, bType As String, bColor As String)"},{"signature":"Sub getBorder() As String"},{"signature":"Sub setBorderColor(varBorderColor As String)"},{"signature":"Sub getBorderColor() As String"},{"signature":"Sub setBorderRadius(varBorderRadius As String)"},{"signature":"Sub getBorderRadius() As String"},{"signature":"Sub setBorderStyle(varBorderStyle As String)"},{"signature":"Sub getBorderStyle() As String"},{"signature":"Sub setBorderWidth(varBorderWidth As String)"},{"signature":"Sub setApp(b As Boolean)"},{"signature":"Sub getBorderWidth() As String"},{"signature":"Sub setColor(varColor As String)"},{"signature":"Sub setColorClass(varColor As String)"},{"signature":"Sub setColorAttr(varColor As String)"},{"signature":"Sub setHeaderColor(varColor As String)"},{"signature":"Sub getColor() As String"},{"signature":"Sub setFontFamily(varFontFamily As String)"},{"signature":"Sub getFontFamily() As String"},{"signature":"Sub setDismissible(b As Boolean)"},{"signature":"Sub setFontWeightLight(b As Boolean)  'ignore"},{"signature":"Sub setFontSize(varFontSize As String)"},{"signature":"Sub setColoredBorder(b As Boolean)"},{"signature":"Sub setProminent(b As Boolean)"},{"signature":"Sub getFontSize() As String"},{"signature":"Sub setFontStyle(varFontStyle As String)"},{"signature":"Sub getFontStyle() As String"},{"signature":"Sub setFontWeight(varFontWeight As String)"},{"signature":"Sub getFontWeight() As String"},{"signature":"Sub setHeight(varHeight As String)"},{"signature":"Sub getHeight() As String"},{"signature":"Sub setStyleHeight(varHeight As String)"},{"signature":"Sub getStyleHeight() As String"},{"signature":"Sub setMaxHeight(varMargin As String)"},{"signature":"Sub getMaxHeight() As String"},{"signature":"Sub setStyleMaxHeight(varMargin As String)"},{"signature":"Sub getStyleMaxHeight() As String"},{"signature":"Sub setMaxWidth(varMarginBottom As String)"},{"signature":"Sub getMaxWidth() As String"},{"signature":"Sub setStyleMaxWidth(varMarginBottom As String)"},{"signature":"Sub getStyleMaxWidth() As String"},{"signature":"Sub setOverwriteTag(varTag As String)"},{"signature":"Sub getOverwriteTag As String"},{"signature":"Sub setTagName(varTagName As String)"},{"signature":"Sub getTagName() As String"},{"signature":"Sub setTextAlign(varTextAlign As String)"},{"signature":"Sub getTextAlign() As String"},{"signature":"Sub setDark(varDark As Boolean)"},{"signature":"Sub setDisableResizeWatcher(b As Boolean)"},{"signature":"Sub setAutoGrow(b As Boolean)"},{"signature":"Sub setAutoComplete(s As Object)"},{"signature":"Sub setTransition(s As String)"},{"signature":"Sub setOffsetY(b As Object)"},{"signature":"Sub setClipped(b As Object)"},{"signature":"Sub setClippedRight(b As Object)"},{"signature":"Sub setClippedLeft(b As Object)"},{"signature":"Sub setOffsetX(b As Object)"},{"signature":"Sub setReactive(b As Boolean)"},{"signature":"Sub setRotate(s As String)"},{"signature":"Sub SetStyleTop(s As String)"},{"signature":"Sub SetStyleBottom(s As String)"},{"signature":"Sub SetStyleLeft(s As String)"},{"signature":"Sub SetStyleRight(s As String)"},{"signature":"Sub setTimeOut(tout As Int)"},{"signature":"Sub setTop(b As Boolean)"},{"signature":"Sub setBottom(b As Boolean)"},{"signature":"Sub setRight(b As Boolean)"},{"signature":"Sub setLeft(b As Boolean)"},{"signature":"Sub setXLarge(b As Boolean)"},{"signature":"Sub setFixed(b As Boolean)"},{"signature":"Sub setDirection(s As String)"},{"signature":"Sub setLoading(s As String)"},{"signature":"Sub setLoaderHeight(s As String)"},{"signature":"Sub setXSmall(b As Boolean)"},{"signature":"Sub setLarge(b As Boolean)"},{"signature":"Sub setSmall(b As Boolean)"},{"signature":"Sub setChips(b As Boolean)"},{"signature":"Sub setSmallChips(b As Boolean)"},{"signature":"Sub setTruncateLength(s As Int)"},{"signature":"Sub setSuffix(b As Boolean)"},{"signature":"Sub setMin(s As String)"},{"signature":"Sub setMinWidth(s As String)"},{"signature":"Sub setMinHeight(s As String)"},{"signature":"Sub setStyleMinWidth(s As String)"},{"signature":"Sub setStyleMinHeight(s As String)"},{"signature":"Sub setMax(s As String)"},{"signature":"Sub setColumn(b As Boolean)"},{"signature":"Sub setUseSeconds(b As Boolean)"},{"signature":"Sub setScrollable(b As Boolean)"},{"signature":"Sub setLandScape(s As Boolean)"},{"signature":"Sub setFullWidth(b As Boolean)"},{"signature":"Sub setFormat(s As String)"},{"signature":"Sub setPosition(s As String)"},{"signature":"Sub PositionAbsolute As VueElement"},{"signature":"Sub setStylePosition(s As String)"},{"signature":"Sub setDepressed(b As Boolean)"},{"signature":"Sub setFab(b As Boolean)"},{"signature":"Sub setExtended(b As Boolean)"},{"signature":"Sub setLight(b As Boolean)"},{"signature":"Sub setHideInput(b As Boolean)"},{"signature":"Sub setShowSize(b As Boolean)"},{"signature":"Sub setStriped(b As Boolean)"},{"signature":"Sub setAccept(s As String)"},{"signature":"Sub setTabs(b As Boolean)"},{"signature":"Sub setIndeterminate(b As Boolean)"},{"signature":"Sub setFalseValue(fv As Object)"},{"signature":"Sub setTrueValue(tv As Object)"},{"signature":"Sub setAbsolute(tv As Object)"},{"signature":"Sub setAutoDraw(tv As Object)"},{"signature":"Sub setAutoDrawDuration(tv As Object)"},{"signature":"Sub setAutoLineWidth(tv As Object)"},{"signature":"Sub setStrokeLineCap(tv As Object)"},{"signature":"Sub setFill(tv As Object)"},{"signature":"Sub setSparkType(tv As Object)"},{"signature":"Sub setGradient(tv As Object)"},{"signature":"Sub setLabels(tv As Object)"},{"signature":"Sub setPadding(tv As Object)"},{"signature":"Sub setLabelSize(tv As Object)"},{"signature":"Sub setLineWidth(tv As Object)"},{"signature":"Sub setGradientDirection(tv As Object)"},{"signature":"Sub setSmooth(tv As Object)"},{"signature":"Sub setShowLabels(tv As Object)"},{"signature":"Sub setLength(s As String)"},{"signature":"Sub setSize(s As String)"},{"signature":"Sub getDark() As Boolean"},{"signature":"Sub setHiddenMDAndUp(varHiddenMDAndUp As Boolean)"},{"signature":"Sub getHiddenMDAndUp() As Boolean"},{"signature":"Sub setHiddenSMAndDown(varHiddenSMAndDown As Boolean)"},{"signature":"Sub getHiddenSMAndDown() As Boolean"},{"signature":"Sub setJustifyCenter(varJustifyCenter As Boolean)"},{"signature":"Sub setJustifyEnd(varJustifyEnd As Boolean)"},{"signature":"Sub setJustifyEndClass(varJustifyEnd As Boolean)\t\t\t'ignore"},{"signature":"Sub getJustifyCenter() As Boolean"},{"signature":"Sub setAlignCenter(varAlignCenter As Boolean)"},{"signature":"Sub setAlignSelf(varAlignCenter As Boolean)"},{"signature":"Sub getAlignCenter() As Boolean"},{"signature":"Sub setFillHeight(varFillHeight As Boolean)"},{"signature":"Sub getFillHeight() As Boolean"},{"signature":"Sub setTextDecoration(varTextDecoration As String)"},{"signature":"Sub getTextDecoration() As String"},{"signature":"Sub setWidth(varWidth As String)"},{"signature":"Sub getWidth() As String"},{"signature":"Sub setStyleWidth(varWidth As String)"},{"signature":"Sub getStyleWidth() As String"},{"signature":"Sub setRules(varRules As String)"},{"signature":"Sub getRules() As String"},{"signature":"Sub setTo(varTo As String)"},{"signature":"Sub getTo() As String"},{"signature":"Sub SetCallBack(methodName As String, cb As BANanoObject)"},{"signature":"Sub RemoveEvent(event As String)"},{"signature":"Sub SetOnEvent(eventHandler As Object, event As String, args As String)"},{"signature":"Sub SetOnEventCallBack(eventHandler As Object, event As String, args As List)"},{"signature":"Sub AddPointerOnClick"},{"signature":"Sub SetOnEventOwn(eventHandler As Object, methodName As String, event As String, args As String)"},{"signature":"Sub SetMethod(Module As Object, methodName As String, args As List)"},{"signature":"Sub SetMethod2(Module As Object, methodName As String)"},{"signature":"Sub SetMethod3(Module As Object, methodName As String)"},{"signature":"Sub SetOwnMethod(Module As Object, methodName As String, CallBackName As String, args As List)"},{"signature":"Sub setCoverImage(url As String)"},{"signature":"Sub getCoverImage() As String"},{"signature":"Sub setOffsets(varOffSets As String)"},{"signature":"Sub getOffSets() As String"},{"signature":"Sub setSizes(varSizes As String)"},{"signature":"Sub getSizes() As String"},{"signature":"Sub ReSize(cols As String, sm As String, md As String, lg As String, xl As String)"},{"signature":"Sub ReOffset(cols As String, sm As String, md As String, lg As String, xl As String)"},{"signature":"Sub setPaddingAXYTBLR(varsetPaddingTBLR As String)"},{"signature":"Sub getPaddingAXYTBLR() As String"},{"signature":"Sub setMarginAXYTBLR(varMarginAXYTBLR As String)"},{"signature":"Sub AssignProps(props As Map)"},{"signature":"Sub AddPadding(pa As String, px As String, py As String, pt As String, pb As String, pl As String, pr As String)"},{"signature":"Sub AddMargin(ma As String, mx As String, my As String, mt As String, mb As String, ml As String, mr As String)"},{"signature":"Sub getMarginAXYTBLR() As String"},{"signature":"Sub SetFitPage"},{"signature":"Sub setFitScreen(varFitScreen As Boolean)"},{"signature":"Sub getFitScreen() As Boolean"},{"signature":"Sub setFullScreenOnMobile(varFullScreen As Boolean)"},{"signature":"Sub setFullScreen(varFullScreen As Boolean)"},{"signature":"Sub getFullScreen() As Boolean"},{"signature":"Sub DialogForm As VueElement"},{"signature":"Sub DialogContainer As VueElement"},{"signature":"Sub DialogTitle As VueElement"},{"signature":"Sub DialogActions As VueElement"},{"signature":"Sub DialogOK As VueElement"},{"signature":"Sub DialogCancel As VueElement"},{"signature":"Sub setClearIcon(varClearIcon As String)"},{"signature":"Sub setAppendIcon(varAppendIcon As String)"},{"signature":"Sub setBindAppendIcon(varAppendIcon As String)"},{"signature":"Sub getAppendIcon() As String"},{"signature":"Sub setAppendOuterIcon(varAppendIcon As String)"},{"signature":"Sub setBindAppendOuterIcon(varAppendIcon As String)"},{"signature":"Sub getAppendOuterIcon() As String"},{"signature":"Sub setAutofocus(varAutofocus As Boolean)"},{"signature":"Sub getAutofocus() As Boolean"},{"signature":"Sub setClearable(varClearable As Boolean)"},{"signature":"Sub getClearable() As Boolean"},{"signature":"Sub setNoGutters(b As Boolean)"},{"signature":"Sub getNoGutters() As Boolean"},{"signature":"Sub setNoResize(b As Boolean)"},{"signature":"Sub setRows(r As Int)"},{"signature":"Sub setCounter(varCounter As String)"},{"signature":"Sub getCounter() As String"},{"signature":"Sub setDense(varDense As Boolean)"},{"signature":"Sub getDense() As Boolean"},{"signature":"Sub setDisabled(varDisabled As String)"},{"signature":"Sub getDisabled() As String"},{"signature":"Sub setFilled(varFilled As Boolean)"},{"signature":"Sub getFilled() As Boolean"},{"signature":"Sub setFlat(varFlat As Boolean)"},{"signature":"Sub getFlat() As Boolean"},{"signature":"Sub setHideSelected(b As Boolean)"},{"signature":"Sub setHideDetails(varHideDetails As Boolean)"},{"signature":"Sub getHideDetails() As Boolean"},{"signature":"Sub setHint(varHint As String)"},{"signature":"Sub getHint() As String"},{"signature":"Sub setOutlined(varOutlined As Boolean)"},{"signature":"Sub setPersistent(b As Boolean)"},{"signature":"Sub setHideOverlay(b As Boolean)"},{"signature":"Sub setOverlayColor(s As String)"},{"signature":"Sub setOverlayOpacity(d As Double)"},{"signature":"Sub setReturnValue(rv As Object)"},{"signature":"Sub setRetainFocus(rv As Object)"},{"signature":"Sub getOutlined() As Boolean"},{"signature":"Sub setPersistentHint(varPersistentHint As Boolean)"},{"signature":"Sub getPersistentHint() As Boolean"},{"signature":"Sub setPlaceholder(varPlaceholder As String)"},{"signature":"Sub getPlaceholder() As String"},{"signature":"Sub setPrependIcon(varPrependIcon As String)"},{"signature":"Sub setBindPrependIcon(varPrependIcon As String)"},{"signature":"Sub getPrependIcon() As String"},{"signature":"Sub setPrependInnerIcon(varPrependIcon As String)"},{"signature":"Sub setBindPrependInnerIcon(varPrependIcon As String)"},{"signature":"Sub getPrependInnerIcon() As String"},{"signature":"Sub setReadOnly(varReadonly As String)"},{"signature":"Sub getReadOnly() As String"},{"signature":"Sub setRequired(varRequired As String)"},{"signature":"Sub getRequired() As String"},{"signature":"Sub setActiveClass(varActiveClass As String)"},{"signature":"Sub getActiveClass() As String"},{"signature":"Sub setRounded(varRounded As Boolean)"},{"signature":"Sub getRounded() As Boolean"},{"signature":"Sub setShowGridDesign(varRounded As Boolean)"},{"signature":"Sub getShowGridDesign() As Boolean"},{"signature":"Sub setShaped(varShaped As Boolean)"},{"signature":"Sub getShaped() As Boolean"},{"signature":"Sub setSingleLine(varSingleLine As Boolean)"},{"signature":"Sub getSingleLine() As Boolean"},{"signature":"Sub setAlign(varAlign As String)"},{"signature":"Sub getAlign() As Boolean"},{"signature":"Sub setJustify(varJustify As String)"},{"signature":"Sub getJustify() As Boolean"},{"signature":"Sub setSolo(varSolo As Boolean)"},{"signature":"Sub getSolo() As Boolean"},{"signature":"Sub BuildGrid"},{"signature":"Sub setCols(cols As String)"},{"signature":"Sub setSM(sm As String)"},{"signature":"Sub setMD(md As String)"},{"signature":"Sub setLG(lg As String)"},{"signature":"Sub setXL(xl As String)"},{"signature":"Sub setXS(xs As String)"},{"signature":"Sub setSizeSmall(sm As String)"},{"signature":"Sub setSizeMedium(md As String)"},{"signature":"Sub setSizeLarge(lg As String)"},{"signature":"Sub setSizeXLarge(xl As String)"},{"signature":"Sub RemoveCols"},{"signature":"Sub Cell(rowPos As Int, colPos As Int) As VueElement"},{"signature":"Sub MatrixElement(RowPos As Int, ColPos As Int) As VueElement"},{"signature":"Sub Row(RowPos As Int) As BANanoElement"},{"signature":"Sub RC(xRow As Int, column As Int) As BANanoElement"},{"signature":"Sub Matrix(xRow As Int, column As Int) As BANanoElement"},{"signature":"Sub MatrixID(xRow As Int, col As Int) As String"},{"signature":"Sub CellID(xRow As Int, col As Int) As String"},{"signature":"Sub AddRows1 As VueElement"},{"signature":"Sub AddRows2 As VueElement"},{"signature":"Sub AddRows3 As VueElement"},{"signature":"Sub AddRows4 As VueElement"},{"signature":"Sub AddRows5 As VueElement"},{"signature":"Sub AddRows6 As VueElement"},{"signature":"Sub AddRows7 As VueElement"},{"signature":"Sub AddRows8 As VueElement"},{"signature":"Sub AddRows9 As VueElement"},{"signature":"Sub AddRows10 As VueElement"},{"signature":"Sub AddRows11 As VueElement"},{"signature":"Sub AddRows12 As VueElement"},{"signature":"Sub AddRows(iRows As Int) As VueElement"},{"signature":"Sub MicroTipBottom(content As String)"},{"signature":"Sub MicroTipRight(content As String)"},{"signature":"Sub MicroTipTop(content As String)"},{"signature":"Sub MicroTipLeft(content As String)"},{"signature":"Sub AddColumns(iColumns As Int, xs As Int, sm As Int, md As Int, lg As Int, xl As Int) As VueElement"},{"signature":"Sub AddColumnsOS(iColumns As Int, osxs As Int, osm As Int, omd As Int, olg As Int, oxl As Int, xs As Int, sm As Int, md As Int, lg As Int, xl As Int) As VueElement"},{"signature":"Sub AddColumnsOSMP(iColumns As Int, osm As Int, omd As Int, olg As Int, oxl As Int, sm As Int, md As Int, lg As Int, xl As Int, pa As Int, px As Int, py As Int, pt As Int, pb As Int, pl As Int, pr As Int, _"},{"signature":"Sub AddColumns3x4 As VueElement"},{"signature":"Sub AddColumns4x3 As VueElement"},{"signature":"Sub AddColumns2x6 As VueElement"},{"signature":"Sub AddColumns6x2 As VueElement"},{"signature":"Sub AddColumns5x2 As VueElement"},{"signature":"Sub AddColumns3x2 As VueElement"},{"signature":"Sub AddColumns11x1 As VueElement"},{"signature":"Sub AddColumns10x1 As VueElement"},{"signature":"Sub AddColumns9x1 As VueElement"},{"signature":"Sub AddColumns8x1 As VueElement"},{"signature":"Sub AddColumns7x1 As VueElement"},{"signature":"Sub AddColumns12x1 As VueElement"},{"signature":"Sub AddColumns8p4 As VueElement"},{"signature":"Sub AddColumns4p8 As VueElement"},{"signature":"Sub AddColumns1p11 As VueElement"},{"signature":"Sub AddColumns11p1 As VueElement"},{"signature":"Sub AddColumns2p10 As VueElement"},{"signature":"Sub AddColumns10p2 As VueElement"},{"signature":"Sub AddColumns3p9 As VueElement"},{"signature":"Sub AddColumns9p3 As VueElement"},{"signature":"Sub AddColumns3p6p3 As VueElement"},{"signature":"Sub AddColumns6p3p3 As VueElement"},{"signature":"Sub AddColumns7p5 As VueElement"},{"signature":"Sub AddColumns5p7 As VueElement"},{"signature":"Sub AddColumns12 As VueElement"},{"signature":"Sub AddColumns6 As VueElement"},{"signature":"Sub AddColumns2 As VueElement"},{"signature":"Sub AddColumns1 As VueElement"},{"signature":"Sub AddColumns3 As VueElement"},{"signature":"Sub AddColumns4 As VueElement"},{"signature":"Sub AddColumns5 As VueElement"},{"signature":"Sub AddColumns7 As VueElement"},{"signature":"Sub AddColumns8 As VueElement"},{"signature":"Sub AddColumns9 As VueElement"},{"signature":"Sub AddColumns10 As VueElement"},{"signature":"Sub AddColumns11 As VueElement"},{"signature":"Sub IsValidID(idName As String) As Boolean"},{"signature":"Sub SetText(txt As String)"},{"signature":"Sub AddSizes(sSizeXS As String, sSizeSmall As String, sSizeMedium As String, sSizeLarge As String, sSizeXLarge As String) As VueElement"},{"signature":"Sub setOffset(o As String)"},{"signature":"Sub setOffsetSmall(o As String)"},{"signature":"Sub setOffsetMedium(o As String)"},{"signature":"Sub setOffsetLarge(o As String)"},{"signature":"Sub setOffsetXLarge(o As String)"},{"signature":"Sub AddOffsets(sOffSetXS As String, sOffsetSmall As String, sOffsetMedium As String,sOffsetLarge As String,sOffsetXLarge As String) As VueElement"},{"signature":"Sub AppendElement(parent As String, tag As String, id As String, text As String) As BANanoElement"},{"signature":"Sub AppendElement1(parentID As String, tag As String, id As String, text As String, props As Map, styles As Map, classes As String) As BANanoElement"},{"signature":"Sub CStr(o As Object) As String"},{"signature":"Sub Map2List(moptions As Map, sourcefield As String, displayfield As String) As List"},{"signature":"Sub FileIcon(ext As String) As String"},{"signature":"Sub setOverlap(b As Boolean)"},{"signature":"Sub setDot(b As Boolean)"},{"signature":"Sub setItems(s As String)"},{"signature":"Sub getItems As String"},{"signature":"Sub setItemText(s As String)"},{"signature":"Sub setOpacity(d As Double)"},{"signature":"Sub setZIndex(d As Int)"},{"signature":"Sub getItemText As String"},{"signature":"Sub setItemValue(s As String)"},{"signature":"Sub getItemValue As String"},{"signature":"Sub setReturnObject(b As Boolean)"},{"signature":"Sub getReturnObject As Boolean"},{"signature":"Sub setReverse(b As Boolean)"},{"signature":"Sub setMultiple(b As Boolean)"},{"signature":"Sub OnClick(args As String)"},{"signature":"Sub OnChange(args As String)"},{"signature":"Sub OnClickAppend(args As String)"},{"signature":"Sub OnClickPrepend(args As String)"},{"signature":"Sub OnClickAppendOuter(args As String)"},{"signature":"Sub OnClickPrependInner(args As String)"},{"signature":"Sub OnClickClear(args As String)"},{"signature":"Sub OnClickStop(args As String)"},{"signature":"Sub OnClickPrevent(args As String)"},{"signature":"Sub OnDblClick(args As String)"},{"signature":"Sub OnMouseEnter(args As String)"},{"signature":"Sub OnMouseOver(args As String)"},{"signature":"Sub OnMouseLeave(args As String)"},{"signature":"Sub OnMouseMove(args As String)"},{"signature":"Sub OnMouseOut(args As String)"},{"signature":"Sub OnKeyUp(args As String)"},{"signature":"Sub OnKeyPress(args As String)"},{"signature":"Sub OnClickAlt(args As String)"},{"signature":"Sub OnShift(args As String)"},{"signature":"Sub OnStart(args As String)"},{"signature":"Sub OnEnd(args As String)"},{"signature":"Sub OnClickClose(args As String)"},{"signature":"Sub setAlertBorder(mytype As String)"},{"signature":"Sub setAlertType(mytype As String)"},{"signature":"Sub SetTypeButton As VueElement"},{"signature":"Sub SetTypeText As VueElement"},{"signature":"Sub SetTypePassword As VueElement"},{"signature":"Sub SetTypeNumber As VueElement"},{"signature":"Sub SetTypeTelephone As VueElement"},{"signature":"Sub SetTypeEmail As VueElement"},{"signature":"Sub SetTypeURL As VueElement"},{"signature":"Sub SetTypeFile As VueElement"},{"signature":"Sub BindType(s As String) As VueElement"},{"signature":"Sub SetTypeInfo As VueElement"},{"signature":"Sub SetTypeWarning As VueElement"},{"signature":"Sub SetTypeError As VueElement"},{"signature":"Sub SetTypeSuccess As VueElement"},{"signature":"Sub setSuccess(b As Boolean)"},{"signature":"Sub setIsTex(b As Boolean)"},{"signature":"Sub FormatDisplayDate(item As String, sFormat As String) As String\t\t\t'ignoredeadcode"},{"signature":"Sub FormatDisplayNumber(item As String, sFormat As String) As String\t\t\t'ignoredeadcode"},{"signature":"Sub FormatFileSize(Bytes As Float) As String\t\t\t\t\t'ignoredeadcode"},{"signature":"Sub NewTextField(elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, iMaxLen As Int, sHint As String, props As Map)"},{"signature":"Sub GetBindName(valuex As String, other As String) As String"},{"signature":"Sub GetBindValue(valuex As String, other As String) As String"},{"signature":"Sub InMoustache(valuex As String) As String"},{"signature":"Sub InMoustache1(valuex As String, other As String) As String"},{"signature":"Sub ItemInMoustache(valuex As String) As String"},{"signature":"Sub ListToDataSource(keyName As String, valueName As String, lst As List) As List"},{"signature":"Sub MapToDataSource(m As Map) As List"},{"signature":"Sub ListViewToTree As List"},{"signature":"Sub SetOnEventAttr(eventHandler As Object, event As String, args As String)"},{"signature":"Sub SetOnOwnEventAttr(eventHandler As Object, methodName As String, event As String, args As String)"},{"signature":"Sub ClickNativeToggle"},{"signature":"Sub ClickToggle"},{"signature":"Sub ClearItems()"},{"signature":"Sub RefreshItems(C As VueComponent)"},{"signature":"Sub ListViewClear"},{"signature":"Sub ListViewRefresh"},{"signature":"Sub ListViewAddHeader(txt As String)"},{"signature":"Sub ListViewAddDivider(binset As Boolean)"},{"signature":"Sub AddItemHeader(txt As String)"},{"signature":"Sub AddItemDivider(binset As Boolean)"},{"signature":"Sub AddItemAvatar(id As String, avatar As String, title As String, subtitle As String, _"},{"signature":"Sub ListViewSetRightChip(itemID As String, sValue As String) As VueElement"},{"signature":"Sub ListViewSetRightChipColor(itemID As String, sColor As String) As VueElement"},{"signature":"Sub ListViewSetAvatar(itemID As String, sIcon As String)  As VueElement"},{"signature":"Sub ListViewSetTitle(itemID As String, sIcon As String)  As VueElement"},{"signature":"Sub ListViewSetSubTitle(itemID As String, sIcon As String)  As VueElement"},{"signature":"Sub ListViewSetSubTitle1(itemID As String, sIcon As String)  As VueElement"},{"signature":"Sub ListViewSetRightIcon(itemID As String, sIcon As String)  As VueElement"},{"signature":"Sub ListViewSetRightText(itemID As String, sIcon As String)  As VueElement"},{"signature":"Sub ListViewSetRightIconColor(itemID As String, sIcon As String)  As VueElement"},{"signature":"Sub ListViewSetRightRating(itemID As String, sIcon As String)  As VueElement"},{"signature":"Sub ListViewSetTo(itemID As String, sTo As String)  As VueElement"},{"signature":"Sub ListViewSetLeftIcon(itemID As String, sIcon As String)  As VueElement"},{"signature":"Sub ListViewSetLeftIconColor(itemID As String, sIcon As String)  As VueElement"},{"signature":"Sub AddItemAction(id As String, lefticon As String, lefticoncolor As String, title As String, subtitle As String, _"},{"signature":"Sub ListViewSetLeftCheckBox(itemID As String, bChecked As Boolean)  As VueElement"},{"signature":"Sub ListViewSetLeftSwitch(itemID As String, bChecked As Boolean)  As VueElement"},{"signature":"Sub ListViewSetRightSwitch(itemID As String, bChecked As Boolean)  As VueElement"},{"signature":"Sub ListViewSetRightCheckBox(itemID As String, bChecked As Boolean)  As VueElement"},{"signature":"Sub AddItemLeftCheckBox(id As String, bChecked As Boolean, title As String, subtitle As String, _"},{"signature":"Sub AddItemLeftSwitch(id As String, bChecked As Boolean, title As String, subtitle As String, _"},{"signature":"Sub AddItemRightSwitch(id As String, bChecked As Boolean, title As String, subtitle As String, subtitle1 As String, url As String)"},{"signature":"Sub AddItemRightCheckBox(id As String, bChecked As Boolean, title As String, subtitle As String, subtitle1 As String, url As String)"},{"signature":"Sub GetPreferencesChecked(C As VueComponent, bShouldBe As Boolean) As List"},{"signature":"Sub SetPreferencesChecked(C As VueComponent, bShouldBe As Boolean)"},{"signature":"Sub GetPreferences(C As VueComponent) As Map"},{"signature":"Sub SetPreferences(C As VueComponent, prefM As Map)"},{"signature":"Sub AddItemIcon(id As String, icon As String, iconcolor As String, title As String, subtitle As String, _"},{"signature":"Sub ListViewSetAvatarIcon(itemID As String, bChecked As Boolean)  As VueElement"},{"signature":"Sub ListViewSetAvatarIconColor(itemID As String, bChecked As Boolean)  As VueElement"},{"signature":"Sub AddItemAvatarIcon(id As String, avataricon As String, avatariconcolor As String, title As String, subtitle As String, _"},{"signature":"Sub CreateListItem(id As String) As BVAD3ListItem"},{"signature":"Sub ListViewAddItem(id As String, title As String) As VueElement"},{"signature":"Sub ListViewAddItem1(item As BVAD3ListItem) As VueElement"},{"signature":"Sub ListViewAddItem2(rec As Map) As VueElement"},{"signature":"Sub AddItem(id As String, lefticon As String, lefticoncolor As String, _"},{"signature":"Sub AddListViewTemplate1(numLines As Int) As VueElement"},{"signature":"Sub ListItemTitle As VueElement"},{"signature":"Sub ListItemSubTitle As VueElement"},{"signature":"Sub ListItemSubTitle1 As VueElement"},{"signature":"Sub ListItemRightChip As VueElement"},{"signature":"Sub ListItemRightRating As VueElement"},{"signature":"Sub ListItemRightText As VueElement"},{"signature":"Sub ListItemLeftIcon As VueElement"},{"signature":"Sub ListItemLeftCheckBox As VueElement"},{"signature":"Sub ListItemRightCheckBox As VueElement"},{"signature":"Sub ListItemIcon As VueElement"},{"signature":"Sub ListItemRightIcon As VueElement"},{"signature":"Sub ListItemLeftSwitch As VueElement"},{"signature":"Sub ListItemRightSwitch As VueElement"},{"signature":"Sub ListItem As VueElement"},{"signature":"Sub ListItemLeftAction As VueElement"},{"signature":"Sub ListItemRightAction As VueElement"},{"signature":"Sub ListItemAvatar As VueElement"},{"signature":"Sub ListItemAvatarImage As VueElement"},{"signature":"Sub ListItemAvatarIcon As VueElement"},{"signature":"Sub ListItemIcon1 As VueElement"},{"signature":"Sub ListItemContent As VueElement"},{"signature":"Sub ListItemRightAvatar As VueElement"},{"signature":"Sub ListItemRightAvatarImage As VueElement"},{"signature":"Sub ListItemRightAvatarIcon As VueElement"},{"signature":"Sub ListItemAvatarText As VueElement"},{"signature":"Sub ListItemRightAvatarText As VueElement"},{"signature":"Sub ListItemLeftButton As VueElement"},{"signature":"Sub ListItemRightButton As VueElement"},{"signature":"Sub AddListViewTemplate(numLines As Int, props As ListViewItemOptions) As VueElement"},{"signature":"Sub GetObject As VueElement"},{"signature":"Sub GetListItem As VueElement"},{"signature":"Sub GetListItemAvatar As VueElement"},{"signature":"Sub GetListItemContent As VueElement"},{"signature":"Sub GetTitle As VueElement"},{"signature":"Sub GetActions As VueElement"},{"signature":"Sub GetDivider As VueElement"},{"signature":"Sub GetSubTitle As VueElement"},{"signature":"Sub GetItem As VueElement"},{"signature":"Sub GetListItemTitle As VueElement"},{"signature":"Sub GetCardActions As VueElement"},{"signature":"Sub GetCardTitle As VueElement"},{"signature":"Sub GetCardSubTitle As VueElement"},{"signature":"Sub GetCard As VueElement"},{"signature":"Sub GetTabItems As VueElement"},{"signature":"Sub GetCardText As VueElement"},{"signature":"Sub AddMaterialCard(elID As String, sheetColor As String, elIcon As String, elTitle As String, elValue As String) As VueElement"},{"signature":"Sub AddMaterialCard3(elID As String, sheetColor As String, elIcon As String, elTitle As String, elValue As String, elTitle1 As String, elValue1 As String, elTitle2 As String, elValue2 As String) As VueElement"},{"signature":"Sub AddListItemGroupTemplate(numLines As Int) As VueElement"},{"signature":"Sub AddListViewGroupTemplate1(numLines As Int) As VueElement"},{"signature":"Sub AddListViewGroupTemplate(numLines As Int, props As ListViewItemOptions) As VueElement"},{"signature":"Sub ToAttributes(m As Map) As String"},{"signature":"Sub AddSpacer"},{"signature":"Sub AddVerticalDivider"},{"signature":"Sub AddDivider"},{"signature":"Sub AddInsetDivider"},{"signature":"Sub VueElementExists(elID As String) As Boolean"},{"signature":"Sub AddVueElement(elID As String, tag As String, props As Map) As VueElement"},{"signature":"Sub AddVueElement2(parentID As String, elID As String, tag As String, props As Map) As VueElement"},{"signature":"Sub HiddenXSOnly"},{"signature":"Sub HiddenSMOnly"},{"signature":"Sub HiddenMDOnly"},{"signature":"Sub HiddenLGOnly"},{"signature":"Sub HiddenXLOnly"},{"signature":"Sub HiddenSMAndDown"},{"signature":"Sub HiddenMDAndDown"},{"signature":"Sub HiddenLGAndDown"},{"signature":"Sub HiddenSMAndUp"},{"signature":"Sub HiddenMDAndUp"},{"signature":"Sub HiddenLGAndUp"},{"signature":"Sub HiddenOnAll"},{"signature":"Sub HideOnlyOnXS"},{"signature":"Sub HideOnlyOnSM"},{"signature":"Sub HideOnlyOnMD"},{"signature":"Sub HideOnlyOnLG"},{"signature":"Sub HideOnlyOnXL"},{"signature":"Sub VisibleOnAll"},{"signature":"Sub VisibleOnlyOnXS"},{"signature":"Sub VisibleOnlyOnSM"},{"signature":"Sub VisibleOnlyOnMD"},{"signature":"Sub VisibleOnlyOnLG"},{"signature":"Sub VisibleOnlyOnXL"},{"signature":"Sub AddStyleOnMouseOver(prop As String, value As String)"},{"signature":"Sub AddStyleOnMouseOut(prop As String, value As String)"},{"signature":"Sub RoundedLG As VueElement"},{"signature":"Sub Rounded0 As VueElement"},{"signature":"Sub RoundedSM  As VueElement"},{"signature":"Sub RoundedMD As VueElement"},{"signature":"Sub RoundedXL As VueElement"},{"signature":"Sub RoundedPill As VueElement"},{"signature":"Sub RoundedCircle As VueElement"},{"signature":"Sub TransitionSwing As VueElement"},{"signature":"Sub DisplayBlock() As VueElement"},{"signature":"Sub ResizeNone()  As VueElement"},{"signature":"Sub CursorPointer() As VueElement"},{"signature":"Sub CursorGrab() As VueElement"},{"signature":"Sub DisplayInlineBlock() As VueElement"},{"signature":"Sub BorderNone() As VueElement"},{"signature":"Sub FitBlock()"},{"signature":"Sub setListStyleType(t As String)"},{"signature":"Sub setLineHeight(t As String)"},{"signature":"Sub setListStylePosition(t As String)"},{"signature":"Sub setOutlineOffset(t As String)"},{"signature":"Sub setTextAlignLast(t As String)"},{"signature":"Sub setTextEmphasis(t As String)"},{"signature":"Sub setTextOverflow(t As String)"},{"signature":"Sub setWordBreak(t As String)"},{"signature":"Sub setWordWrap(t As String)"},{"signature":"Sub setListStyleImage(t As String)"},{"signature":"Sub setOverflow(t As String)"},{"signature":"Sub setListStyle(t As String)"},{"signature":"Sub setOutlineColorStyle(varBorder As String)"},{"signature":"Sub setOutlineWidth(varBorder As String)"},{"signature":"Sub setOutlineStyle(varBorder As String)"},{"signature":"Sub setOutlineColor(varBorder As String)"},{"signature":"Sub setOutline(varBorder As String)"},{"signature":"Sub setBorderBottomWidth(varBorder As String)"},{"signature":"Sub setBorderTopWidth(varBorder As String)"},{"signature":"Sub setBorderLeftWidth(varBorder As String)"},{"signature":"Sub setBorderRightWidth(varBorder As String)"},{"signature":"Sub setBorderBottomStyle(varBorder As String)"},{"signature":"Sub setBorderTopStyle(varBorder As String)"},{"signature":"Sub setBorderleftStyle(varBorder As String)"},{"signature":"Sub setResponsiveImage"},{"signature":"Sub setBorderRightStyle(varBorder As String)"},{"signature":"Sub setBorderBottomColor(varBorder As String)"},{"signature":"Sub setBorderTopColor(varBorder As String)"},{"signature":"Sub setBorderLeftColor(varBorder As String)"},{"signature":"Sub setBorderRightColor(varBorder As String)"},{"signature":"Sub setBorderBottom(varBorder As String)"},{"signature":"Sub setBorderTop(varBorder As String)"},{"signature":"Sub setBorderLeft(varBorder As String)"},{"signature":"Sub setBorderRight(varBorder As String)"},{"signature":"Sub setOutlineNone()"},{"signature":"Sub setControls"},{"signature":"Sub setAutoPlay()"},{"signature":"Sub setRepeat()"},{"signature":"Sub setWhiteSpaceNoWrap()"},{"signature":"Sub setCenterText"},{"signature":"Sub setAlpha(a As Int)"},{"signature":"Sub setTextAlignCenter()"},{"signature":"Sub setTextDecorationNone()"},{"signature":"Sub setVerticalAlignMiddle()"},{"signature":"Sub setVerticalAlign(s As String)"},{"signature":"Sub setVisibility(s As String)"},{"signature":"Sub setRelative"},{"signature":"Sub appendValue(s As String)"},{"signature":"Sub appendText(s As String)"},{"signature":"Sub setSmallCaps()"},{"signature":"Sub setTextTransform(s As String)"},{"signature":"Sub setResize(l As String)"},{"signature":"Sub setTranslate(x As String, y As String)   'ignore"},{"signature":"Sub setTranslateX(a As String)"},{"signature":"Sub setTranslateY(a As String)"},{"signature":"Sub setScale(x As String, y As String)  'ignore"},{"signature":"Sub setScaleX(a As String)"},{"signature":"Sub setScaleY(a As String)"},{"signature":"Sub setRotateZ(a As String)"},{"signature":"Sub setSkewX(a As String)"},{"signature":"Sub setSkewY(a As String)"},{"signature":"Sub setLinearGradient(orientation As String, firstColor As String, secondColor As String)"},{"signature":"Sub setLinearGradient1(orientation As String, colors As List)"},{"signature":"Sub setHorizontalAlignment(v As String)"},{"signature":"Sub setVerticalAlignment(v As String)"},{"signature":"Sub setLetterSpacing(d As String)"},{"signature":"Sub setWordSpacing(d As String)"},{"signature":"Sub setTextIndent(d As String)"},{"signature":"Sub AddStyleOnHover(prop As String, onOver As String, onOut As String)"},{"signature":"Sub setCapitalize(b As Boolean)"},{"signature":"Sub setUpperCase(b As Boolean)"},{"signature":"Sub setLowerCase(b As Boolean)"},{"signature":"Sub setUnderLine(b As Object)"},{"signature":"Sub setLineThrough(b As Object)"},{"signature":"Sub setOverline(b As Boolean)"},{"signature":"Sub setBlink(b As Boolean)"},{"signature":"Sub setNoneTextDecoration(b As Boolean)"},{"signature":"Sub setBoxSizingBorderBox()"},{"signature":"Sub setVBindAttrs(b As Boolean)"},{"signature":"Sub setVOnListerners(b As Boolean)"},{"signature":"Sub setName(s As String)"},{"signature":"Sub setTextXSCenter(b As Boolean)"},{"signature":"Sub setFontWeightBold(b As Boolean)"},{"signature":"Sub setFontWeightMedium(b As Boolean)"},{"signature":"Sub setTextWrap(b As Boolean)"},{"signature":"Sub AddForm(elID As String, vmodel As String, bLazyValidation As Boolean, props As Map) As VueElement"},{"signature":"Sub AddListItemAction(elID As String) As VueElement"},{"signature":"Sub AddListItemContent(elID As String) As VueElement"},{"signature":"Sub AddListItemIcon(elID As String) As VueElement"},{"signature":"Sub AddListItemAvatar(elID As String) As VueElement"},{"signature":"Sub AddListItemTitle(elID As String, caption As String) As VueElement"},{"signature":"Sub AddListItemSubTitle(elID As String, caption As String) As VueElement"},{"signature":"Sub AddListItemGroup(elID As String, color As String) As VueElement"},{"signature":"Sub AddListItemActionText(elID As String, caption As String) As VueElement"},{"signature":"Sub AddToolbar(elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddToolbar1(elID As String, Color As String) As VueElement"},{"signature":"Sub AddProgressLinear(elID As String, vmodel As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddToolbarProgressBar(elID As String, vmodel As String, color As String) As VueElement"},{"signature":"Sub AddProgressCircular(elID As String, vmodel As String, caption As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddProgressCircular1(elID As String, vmodel As String, value As String, caption As String, width As String, size As String, color As String, colorintensity As String) As VueElement"},{"signature":"Sub AddCard(elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddCard1(elID As String) As VueElement"},{"signature":"Sub AddWindow(elID As String) As VueElement"},{"signature":"Sub AddWindowItem(elID As String) As VueElement"},{"signature":"Sub AddCardTitle(elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddCardTitle1(elID As String) As VueElement"},{"signature":"Sub AddCardSubTitle(elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddCardSubTitle1(elID As String) As VueElement"},{"signature":"Sub AddSkeletonLoader(elID As String, loadtypes As List) As VueElement"},{"signature":"Sub AddCardText(elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddCardText1(elID As String) As VueElement"},{"signature":"Sub AddCardActions(elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddCardActions1(elID As String) As VueElement"},{"signature":"Sub AddVueElement1(elID As String, tag As String, vModel As String, Caption As String, color As String, props As Map) As VueElement"},{"signature":"Sub BindAllEvents"},{"signature":"Sub GetCaptionName(aCaption As String, orName As String) As String"},{"signature":"Sub SetCaptionValue(dBinding As String, aCaption As String, defValue As String)"},{"signature":"Sub GetChip As VueElement"},{"signature":"Sub AddChipGroupWithIcon(elID As String, DataSource As String, Key As String, Value As String, Icon As String) As VueElement"},{"signature":"Sub AddChipGroup(elID As String, vModel As String,  activeClass As String, bMultiple As Boolean, bShowArrows As Boolean, bFilter As Boolean, DataSource As String, Key As String, Value As String, chipgroupprops As Map, chipprops As Map) As VueElement"},{"signature":"Sub AddComboBox1(fldName As String, vmodel As String, Title As String, DataSource As String, Key As String, Value As String, bMultiple As Boolean, ReturnObject As Boolean) As VueElement"},{"signature":"Sub AddSelect1(fldName As String, vmodel As String, Title As String, DataSource As String, Key As String, Value As String, bMultiple As Boolean, ReturnObject As Boolean) As VueElement"},{"signature":"Sub AddAutoComplete1(fldName As String, vmodel As String, Title As String, DataSource As String, Key As String, Value As String, bMultiple As Boolean , ReturnObject As Boolean) As VueElement"},{"signature":"Sub AddAutoComplete(elID As String, vmodel As String, sLabel As String, bRequired As Boolean, bMultiple As Boolean, sPlaceHolder As String, sourceTable As String, sourceField As String, displayField As String, returnObject As Boolean, sHelperText As String, props As Map) As VueElement"},{"signature":"Sub AddRouterView(elID As String) As VueElement"},{"signature":"Sub AddSlot(elID As String) As VueElement"},{"signature":"Sub AddMain As VueElement"},{"signature":"Sub GetImage As VueElement"},{"signature":"Sub AddAvatar(elID As String, imgURL As String, avatarSize As Int, avatarprops As Map) As VueElement"},{"signature":"Sub AddAvatar2(elID As String, imgURL As String, avatarSize As Int) As VueElement"},{"signature":"Sub GetSpan As VueElement"},{"signature":"Sub AddAvatarGroup(elID As String, avatarSize As Int, DataSource As String, Key As String, Src As String, Alt As String, Text As String) As VueElement"},{"signature":"Sub AddAvatarWithText(elID As String, Caption As String, Color As String, avatarSize As Int, TextColor As String, TextColorIntensity As String, avatarprops As Map, textProps As Map) As VueElement"},{"signature":"Sub AddAvatarWithIcon(elID As String, Icon As String, AvatarColor As String, AvatarSize As Int, IconColor As String) As VueElement"},{"signature":"Sub AddSelect(elID As String, vmodel As String, sLabel As String, bRequired As Boolean, bMultiple As Boolean, sPlaceHolder As String, sourceTable As String, sourceField As String, displayField As String, returnObject As Boolean, sHelperText As String, props As Map) As VueElement"},{"signature":"Sub setSlideXTransition(b As Boolean)"},{"signature":"Sub AddSlideXTransition(elID As String, Mode As String) As VueElement"},{"signature":"Sub AddSpan(elID As String, Caption As String,  TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddStrong(elID As String, Caption As String,  TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddH6(elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddH5(elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddH4(elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddH3(elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddH2(elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddParagraph(elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddH1(elID As String, Caption As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddLoremIpsum(elID As String, TextColor As String, TextColorIntensity As String) As VueElement"},{"signature":"Sub AddLabel(elID As String, Size As String, Caption As String, iLoremIpsum As Boolean, TextColor As String, TextColorIntensity As String, props As Map) As VueElement"},{"signature":"Sub AddDraggable(elID As String) As VueElement"},{"signature":"Sub AddDiv(elID As String) As VueElement"},{"signature":"Sub AddAlert(elID As String, vmodel As String, bVisible As Boolean, Caption As String, iLoremIpsum As Boolean, bDismissible As Boolean, aType As String,  BorderPosition As String, props As Map) As VueElement"},{"signature":"Sub AddButton1(elID As String, sLabel As String, props As Map) As VueElement"},{"signature":"Sub AddButton(elID As String, sLabel As String, eColor As String, bOutlined As Boolean,  props As Map) As VueElement"},{"signature":"Sub AddVirtualScroller(elID As String) As VueElement"},{"signature":"Sub AddSubHeader(elID As String, Caption As String) As VueElement"},{"signature":"Sub AddCarousel(elID As String, vmodel As String) As VueElement"},{"signature":"Sub AddCarouselItem(elID As String, cContent As String) As VueElement"},{"signature":"Sub AddExpansionPanels(elID As String, vModel As String) As VueElement"},{"signature":"Sub GetBadge As VueElement"},{"signature":"Sub AddButtonWithBadge(elID As String, elLabel As String, btnColor As String, vmodel As String, badgeIcon As String, badgeColor As String, btnproperties As Map, badgeproperties As Map) As VueElement"},{"signature":"Sub GetIcon As VueElement"},{"signature":"Sub GetIcon1 As VueElement"},{"signature":"Sub GetTemplate As VueElement"},{"signature":"Sub GetTHead As VueElement"},{"signature":"Sub GetTBody As VueElement"},{"signature":"Sub GetTH As VueElement"},{"signature":"Sub GetTR As VueElement"},{"signature":"Sub AddButtonWithIconWithBadge(elID As String, eIcon As String, btnColor As String, vmodel As String, badgeIcon As String, badgeColor As String, btnprops As Map, iconprops As Map, badgeProperties As Map) As VueElement"},{"signature":"Sub AddButtonWithBadgeWithIcon(elID As String, eIcon As String, btnColor As String, vmodel As String, badgeIcon As String, badgeColor As String) As VueElement"},{"signature":"Sub AddIconWithBadge(elID As String, eIcon As String, eColor As String, vmodel As String, badgeIcon As String, badgeColor As String, btnproperties As Map, badgeproperties As Map) As VueElement"},{"signature":"Sub AddButtonWithIcon(elID As String, eIcon As String, btnColor As String, btnprops As Map, iconprops As Map) As VueElement"},{"signature":"Sub AddButtonWithIcon1(elID As String, eIcon As String, btnColor As String, btnColorIntensity As String) As VueElement"},{"signature":"Sub AddComponent(eTag As String, elID As String) As VueElement"},{"signature":"Sub AddBtn(elID As String) As VueElement"},{"signature":"Sub AddBtnToggle(elID As String) As VueElement"},{"signature":"Sub AddComboBox(elID As String, vmodel As String, sLabel As String, bRequired As Boolean, bMultiple As Boolean, sPlaceHolder As String, sourceTable As String, sourceField As String, displayField As String, returnObject As Boolean, sHelperText As String, props As Map) As VueElement"},{"signature":"Sub AddButtonWithRightIcon(elID As String, eLabel As String, eIcon As String, eColor As String, bOutlined As Boolean, btnprops As Map, iconprops As Map) As VueElement"},{"signature":"Sub AddButtonWithRightIcon1(elID As String, eLabel As String, eIcon As String, eColor As String, IconColor As String) As VueElement"},{"signature":"Sub AddButtonWithLeftIcon(elID As String, eLabel As String, eIcon As String, eColor As String, bOutlined As Boolean, btnprops As Map, iconprops As Map) As VueElement"},{"signature":"Sub AddButtonWithLeftIcon1(elID As String, eLabel As String, eIcon As String, eColor As String, IconColor As String) As VueElement"},{"signature":"Sub AddAvatarWithBadge(elID As String, imgURL As String, avatarSize As Int, vmodel As String, badgeColor As String, avatarprops As Map, badgeprops As Map) As VueElement"},{"signature":"Sub GetToolBar(elID As String) As VueElement"},{"signature":"Sub GetToolBar1 As VueElement"},{"signature":"Sub GetAvatar As VueElement"},{"signature":"Sub GetProgress As VueElement"},{"signature":"Sub GetButton As VueElement"},{"signature":"Sub GetButton1 As VueElement"},{"signature":"Sub GeObject As VueElement"},{"signature":"Sub GetIFrame As VueElement"},{"signature":"Sub GetChild As VueElement"},{"signature":"Sub AddAvatar1(elID As String, vmodel As String, avatarSize As Int, avatarprops As Map) As VueElement"},{"signature":"Sub AddDatePickerInput1(elID As String, vModel As String, sLabel As String, txtprops As Map, dateprops As Map) As VueElement"},{"signature":"Sub GetText As VueElement"},{"signature":"Sub AddDatePickerInput(elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, sHint As String, txtprops As Map, dateprops As Map) As VueElement"},{"signature":"Sub GetClear(elID As String) As VueElement"},{"signature":"Sub GetMenu(elID As String) As VueElement"},{"signature":"Sub GetDateTimePicker(elID As String) As VueElement"},{"signature":"Sub GetOK(elID As String) As VueElement"},{"signature":"Sub GetCancel(elID As String) As VueElement"},{"signature":"Sub GetOK1 As VueElement"},{"signature":"Sub GetCancel1 As VueElement"},{"signature":"Sub GetRadio As VueElement"},{"signature":"Sub AddTimePickerInput1(elID As String, vModel As String, sLabel As String, txtprops As Map, tpprops As Map) As VueElement"},{"signature":"Sub GetDateTimePickerText As VueElement"},{"signature":"Sub AddTimePickerInput(elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, sHint As String, txtprops As Map, dateprops As Map) As VueElement"},{"signature":"Sub SetComputed(k As String, Module As Object, methodName As String, args As List)"},{"signature":"Sub AddIcon(elID As String, eIcon As String, color As String, iDark As Boolean, iconprops As Map) As VueElement"},{"signature":"Sub AddIcon1(elID As String, eIcon As String, color As String, iDark As Boolean) As VueElement"},{"signature":"Sub AddBadge(elID As String, vmodel As String, content As String, color As String, bDot As Boolean, bOverLap As Boolean, iDark As Boolean, badgeProps As Map) As VueElement"},{"signature":"Sub AddSearch(elID As String, vmodel As String, slabel As String, bSolo As Boolean, props As Map) As VueElement"},{"signature":"Sub AddParallax(elID As String, sheight As String, src As String, alt As String, props As Map) As VueElement"},{"signature":"Sub AddFileInput(elID As String, vmodel As String, slabel As String, splaceholder As String, bMultiple As Boolean, sHint As String, props As Map) As VueElement"},{"signature":"Sub AddFileInput1(fldName As String, vmodel As String, title As String, props As Map) As VueElement"},{"signature":"Sub AddSlider(elID As String, vmodel As String, slabel As String, iminvalue As Object, imaxvalue As Object, iStep As Int,  bShowThumb As Boolean,  bVertical As Boolean, props As Map) As VueElement"},{"signature":"Sub AddTelephone1(elID As String, vmodel As String, slabel As String, props As Map) As VueElement"},{"signature":"Sub AddTelephone(elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, iMaxLen As Int, sHint As String, props As Map) As VueElement"},{"signature":"Sub AddEmail1(elID As String, vmodel As String, slabel As String, props As Map) As VueElement"},{"signature":"Sub AddEmail(elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, iMaxLen As Int, sHint As String, props As Map) As VueElement"},{"signature":"Sub AddTextField1(elID As String, vModel As String, sLabel As String, props As Map) As VueElement"},{"signature":"Sub AddTextField(elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, iMaxLen As Int, sHint As String, props As Map) As VueElement"},{"signature":"Sub AddTextArea1(elID As String, vmodel As String, slabel As String, props As Map) As VueElement"},{"signature":"Sub AddTextArea(elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, iMaxLen As Int, sHint As String, props As Map) As VueElement"},{"signature":"Sub AddPassword1(fldName As String, vmodel As String, title As String, maxLen As Int, props As Map) As VueElement"},{"signature":"Sub AddPassword(elID As String, vmodel As String, slabel As String, splaceholder As String, bRequired As Boolean, sPrependIcon As String, iMaxLen As Int, sHint As String, props As Map) As VueElement"},{"signature":"Sub AddSwitch(sid As String, vmodel As String, slabel As String, truevalue As Object, falsevalue As Object, color As String, bInset As Boolean, props As Map) As VueElement"},{"signature":"Sub AddRating(sid As String, vmodel As String, slength As Int, ssize As Int, bHover As Boolean, color As String, props As Map) As VueElement"},{"signature":"Sub AddCheckBox(sid As String, vmodel As String, slabel As String, truevalue As Object, falsevalue As Object, color As String, props As Map) As VueElement"},{"signature":"Sub AddImage1(elID As String, vmodel As String, alt As String, sheight As String, swidth As String, props As Map) As VueElement"},{"signature":"Sub AddImage(elID As String, src As String, lazysrc As String, alt As String, sheight As String, swidth As String, props As Map) As VueElement"},{"signature":"Sub AddSpacer1(elid As String, props As Map) As VueElement"},{"signature":"Sub AddSparkLine(elid As String) As VueElement"},{"signature":"Sub AddDivider1(elid As String, props As Map) As VueElement"},{"signature":"Sub AddList(elid As String, bDense As Boolean, bFlat As Boolean, bRounded As Boolean, props As Map) As VueElement"},{"signature":"Sub AddList1(elID As String) As VueElement"},{"signature":"Sub AddListItem(elid As String, props As Map) As VueElement"},{"signature":"Sub AddFooter(elid As String, bPadless As Boolean, bFlat As Boolean, props As Map) As VueElement"},{"signature":"Sub AddHover(elid As String, props As Map) As VueElement"},{"signature":"Sub AddTimePicker(elid As String, vmodel As String, defaultValue As String, props As Map) As VueElement"},{"signature":"Sub AddDatePicker(elid As String, vmodel As String, defaultValue As String, props As Map) As VueElement"},{"signature":"Sub AddMenu(elid As String, returnValue As String, bCloseOnContentClick As Boolean, bCloseOnClick As Boolean, props As Map) As VueElement"},{"signature":"Sub AddDialog(elid As String, vmodel As String, bPersistent As Boolean, width As String, props As Map) As VueElement"},{"signature":"Sub AddChipWithAvatar(elID As String, src As String, label As String, bPill As Boolean, bClose As Boolean, color As String, chipprops As Map, avatarprops As Map, imgprops As Map) As VueElement"},{"signature":"Sub AddChipWithIcon(elID As String, sicon As String, label As String, bPill As Boolean, bClose As Boolean, color As String, chipprops As Map, iconprops As Map) As VueElement"},{"signature":"Sub AddRadioGroup(elID As String, vmodel As String, sLabel As String, bRow As Boolean, bMultiple As Boolean, sourceTable As String, key As String, value As String, colorField As String, radiogroupprops As Map, radioprops As Map) As VueElement"},{"signature":"Sub AddFab(elID As String, eIcon As String, eColor As String, bOutlined As Boolean, btnprops As Map, iconprops As Map) As VueElement"},{"signature":"Sub AddFab1(elID As String, eIcon As String, eColor As String) As VueElement"},{"signature":"Sub setMXAuto(b As Boolean)"},{"signature":"Sub setPaddingA(v As String)"},{"signature":"Sub setPaddingX(v As String)"},{"signature":"Sub setPaddingY(v As String)"},{"signature":"Sub setPaddingT(v As String)"},{"signature":"Sub setPaddingB(v As String)"},{"signature":"Sub setPaddingR(v As String)"},{"signature":"Sub setPaddingL(v As String)"},{"signature":"Sub setMarginT(v As String)"},{"signature":"Sub setMarginB(v As String)"},{"signature":"Sub setMarginR(v As String)"},{"signature":"Sub setMarginL(v As String)"},{"signature":"Sub setMarginA(v As String)"},{"signature":"Sub setMarginX(v As String)"},{"signature":"Sub setMarginY(v As String)"},{"signature":"Sub setMarginTop(v As String)"},{"signature":"Sub setMarginBottom(v As String)"},{"signature":"Sub setMarginLeft(v As String)"},{"signature":"Sub setMarginRight(v As String)"},{"signature":"Sub setPaddingTop(v As String)"},{"signature":"Sub setPaddingBottom(v As String)"},{"signature":"Sub setPaddingLeft(v As String)"},{"signature":"Sub setPaddingRight(v As String)"},{"signature":"Sub setMiniVariantWidth(w As String)"},{"signature":"Sub setMiniVariantSync(w As String)"},{"signature":"Sub setMiniVariant(b As Object)"},{"signature":"Sub setFloating(w As Object)"},{"signature":"Sub setExpandOnHover(eoh As Object)"},{"signature":"Sub AddDrawer(elID As String, vmodel As String, bVisible As Boolean, Color As String, bRight As Boolean, props As Map) As VueElement"},{"signature":"Sub AddNavigationDrawer(elID As String, vmodel As String) As VueElement"},{"signature":"Sub AddOverlay(elID As String, vmodel As String, props As Map) As VueElement"},{"signature":"Sub setDisableRouteWatcher(b As Object)"},{"signature":"Sub AddAppBarTitle(elID As String, Caption As String, TextColor As String) As VueElement"},{"signature":"Sub AddToolbarTitle(elID As String, Caption As String, TextColor As String, props As Map) As VueElement"},{"signature":"Sub AddToolbarTitle1(elID As String, Caption As String, TextColor As String) As VueElement"},{"signature":"Sub AddSnackBar(elID As String, vmodel As String, Caption As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddSnackBar1(elID As String, vmodel As String, Caption As String, color As String, icon As String, iTimeOut As Int) As VueElement"},{"signature":"Sub AddNav(elID As String) As VueElement"},{"signature":"Sub AddAppBar(elID As String) As VueElement"},{"signature":"Sub AddItemGroup(elID As String, vmodel As String, mandatory As Boolean) As VueElement"},{"signature":"Sub AddItemGroupItem(elID As String, value As String) As VueElement"},{"signature":"Sub GetMain As VueElement"},{"signature":"Sub GetMainButton As VueElement"},{"signature":"Sub GetMainIcon As VueElement"},{"signature":"Sub GetCloseIcon As VueElement"},{"signature":"Sub AddSpeedDial(elID As String, mainIcon As String, closeIcon As String, vmodel As String, mainColor As String) As VueElement"},{"signature":"Sub AddSpeedDialItem(elID As String, elIcon As String, elColor As String) As VueElement"},{"signature":"Sub AddLoadingProgress(elID As String, vmodel As String, progressSize As Int) As VueElement"},{"signature":"Sub AddVJSF(elID As String, jschema As String, jmodel As String, joptions As String) As VueElement"},{"signature":"Sub NewMap As Map"},{"signature":"Sub AddFormWizard(elID As String, title As String, subtitle As String) As VueElement"},{"signature":"Sub AddTabContent(elID As String, icon As String, title As String) As VueElement"},{"signature":"Sub AddTransitionGroup(elID As String) As VueElement"},{"signature":"Sub AddTransition(elID As String) As VueElement"},{"signature":"Sub AddApp(elID As String) As VueElement"},{"signature":"Sub AddVBtn(elID As String) As VueElement"},{"signature":"Sub AddVIcon(elID As String) As VueElement"},{"signature":"Sub AddBottomNavigation(elID As String, vmodel As String, color As String, grow As Boolean, shift As Boolean) As VueElement"},{"signature":"Sub AddBottomSheet(elID As String, vmodel As String, height As String, color As String) As VueElement"},{"signature":"Sub AddBottomNavigationItem(elID As String, value As String, caption As String, iconName As String) As VueElement"},{"signature":"Sub AddBottomNavigationItem1(elID As String, value As String, caption As String, iconName As String, goTo As String) As VueElement"},{"signature":"Sub AddVRow(elID As String) As VueElement"},{"signature":"Sub AddVCol(elID As String) As VueElement"},{"signature":"Sub AddAppProgress(color As String) As VueElement"},{"signature":"Sub AddColorGroup(elID As String, vModel As String, colors As List) As VueElement"},{"signature":"Sub GetSimpleTableHeading(colID As String) As VueElement"},{"signature":"Sub GetSimpleTableColumn(colID As String) As VueElement"},{"signature":"Sub AddSimpleTable(elID As String, DataSource As String, KeyFld As String, Columns As Map) As VueElement"},{"signature":"Sub AddPDFView(elID As String, sourceFile As String) As VueElement"},{"signature":"Sub AddAppSnackBar As VueElement"},{"signature":"Sub AddAppBarNavIcon(elID As String) As VueElement"},{"signature":"Sub AddHamburger(elID As String) As VueElement"},{"signature":"Sub setIcon(sicon As String)"},{"signature":"Sub setIconColor(sicon As String)"},{"signature":"Sub AddRow(rowpos As Int) As VueElement"},{"signature":"Sub AddCol(colpos As Int, xs As String, sm As String, md As String, lg As String, xl As String) As VueElement"},{"signature":"Sub AddTimeLine(elID As String) As VueElement"},{"signature":"Sub AddTimeLineItem(elID As String) As VueElement"},{"signature":"Sub setAlignTop(b As Object)"},{"signature":"Sub setFillDot(b As Object)"},{"signature":"Sub setHideDot(b As Object)"},{"signature":"Sub setScrollXReverseTransition(b As Boolean)"},{"signature":"Sub setSlideXReverseTransition(b As Boolean)"},{"signature":"Sub AddSlideXReverseTransition(elID As String) As VueElement"},{"signature":"Sub AddTemplate(elID As String) As VueElement"},{"signature":"Sub AddSlotAppend(elID As String) As VueElement"},{"signature":"Sub AddSlotExtension(elID As String) As VueElement"},{"signature":"Sub setProgressColor(i As String)"},{"signature":"Sub setTextColorAttr(i As String)"},{"signature":"Sub setCloseDelay(i As Int)"},{"signature":"Sub setOpenDelay(i As Int)"},{"signature":"Sub setPermanent(b As Object)"},{"signature":"Sub setNav(b As Object)"},{"signature":"Sub setAttach(b As Object)"},{"signature":"Sub setLink(b As Object)"},{"signature":"Sub setWrap(b As Object)"},{"signature":"Sub setDivider(b As String)"},{"signature":"Sub AddBreadCrumbs(elid As String) As VueElement"},{"signature":"Sub AddTabItems(elID As String, vmodel As String) As VueElement"},{"signature":"Sub AddTabsSlider(elID As String, color As String, props As Map) As VueElement"},{"signature":"Sub AddContainer(elID As String, xFluid As Boolean) As VueElement"},{"signature":"Sub AddTabs(elID As String) As VueElement"},{"signature":"Sub AddSheet(elID As String, Height As String, Color As String, props As Map) As VueElement"},{"signature":"Sub AddSheet1(elID As String, Height As String, Width As String, Color As String) As VueElement"},{"signature":"Sub AddResponsive(elID As String) As VueElement"},{"signature":"Sub setActive(b As Object)"},{"signature":"Sub setJustifyCenterClass(b As Boolean)"},{"signature":"Sub AddChip(elid As String) As VueElement"},{"signature":"Sub CenterContent"},{"signature":"Sub setLazyValidation(b As Boolean)"},{"signature":"Sub PlaceAtBottom As VueElement"},{"signature":"Sub AbsolutePosition As VueElement"},{"signature":"Sub AtTheBottom As VueElement"},{"signature":"Sub setOverflowHidden(b As Boolean)  'ignore"},{"signature":"Sub setOverflowYHidden(b As Boolean)  'ignore"},{"signature":"Sub setOverflowXHidden(b As Boolean)   'ignore"},{"signature":"Sub setTextLGRight(b As Boolean)   'ignore"},{"signature":"Sub setTextMDCenter(b As Boolean)   'ignore"},{"signature":"Sub setTextSMLeft(b As Boolean)   'ignore"},{"signature":"Sub setTextXSRight(b As Boolean)  'ignore"},{"signature":"Sub setNextIcon(ni As String)"},{"signature":"Sub setPrevIcon(pi As String)"},{"signature":"Sub setAlignStart(b As Boolean)  'ignore"},{"signature":"Sub setAlignEnd(b As Boolean) 'ignore"},{"signature":"Sub setJustifySpaceAround(b As Boolean)  'ignore"},{"signature":"Sub setJustifySpaceBetween(b As Boolean)  'ignore"},{"signature":"Sub setJustifyStart(b As Boolean)  'ignore"},{"signature":"Sub setAlignContentCenter(b As Boolean)"},{"signature":"Sub setAlignContentStart(b As Boolean)"},{"signature":"Sub setAlignContentSpaceBetween(b As Boolean)"},{"signature":"Sub setAlignContentSpaceAround(b As Boolean)"},{"signature":"Sub setAlignContentEnd(b As Boolean)"},{"signature":"Sub setAlignSpaceAround(b As Boolean)"},{"signature":"Sub setAlignSpaceBetween(b As Boolean)"},{"signature":"Sub setFabTransition(b As Boolean)"},{"signature":"Sub AddFabTransition(elID As String) As VueElement"},{"signature":"Sub setFadeTransition(b As Boolean)"},{"signature":"Sub AddFadeTransition(elID As String) As VueElement"},{"signature":"Sub setExpandTransition(b As Boolean)"},{"signature":"Sub AddExpandTransition(elID As String) As VueElement"},{"signature":"Sub setScaleTransition(b As Boolean)"},{"signature":"Sub AddScaleTransition(elID As String) As VueElement"},{"signature":"Sub setScrollXTransition(b As Boolean)   'ignore"},{"signature":"Sub AddScrollXTransition(elID As String) As VueElement"},{"signature":"Sub AddScrollXReverseTransition(elID As String) As VueElement"},{"signature":"Sub setScrollYReverseTransition(b As Boolean)  'ignore"},{"signature":"Sub AddScrollYReverseTransition(elID As String) As VueElement"},{"signature":"Sub setScrollYTransition(b As Boolean)   'ignore"},{"signature":"Sub AddScrollYTransition(elID As String) As VueElement"},{"signature":"Sub setSlideYTransition(b As Boolean)  'ignore"},{"signature":"Sub AddSlideYTransition(elID As String) As VueElement"},{"signature":"Sub setSlideYReverseTransition(b As Boolean)   'ignore"},{"signature":"Sub AddSlideYReverseTransition(elID As String) As VueElement"},{"signature":"Sub setBlurred(s As String)"},{"signature":"Sub IsBlurred(s As String, v As Boolean)"},{"signature":"Sub AddKeyValue(key As String, value As String)"},{"signature":"Sub setNoBorder(b As Boolean)  'ignore"},{"signature":"Sub setBorderNone(b As Boolean)  'ignore"},{"signature":"Sub AddLink(elID As String, href As String, caption As String, target As String)"},{"signature":"Sub setFadeImgOnScroll(b As Boolean)"},{"signature":"Sub setScrollTarget(v As String)"},{"signature":"Sub setScrollThreshold(v As Object)"},{"signature":"Sub setShrinkOnScroll(v As Boolean)"},{"signature":"Sub setOverFlowYAuto(b As Boolean)  'ignore"},{"signature":"Sub setContentClass(v As String)"},{"signature":"Sub setAspectRation(v As Object)"},{"signature":"Sub setHideOverFlow(b As Boolean)   'ignore"},{"signature":"Sub setFloatLeft(b As Boolean)  'ignore"},{"signature":"Sub setFloatRight(b As Boolean)  'ignore"},{"signature":"Sub setSecondary(b As Boolean)  'ignore"},{"signature":"Sub setTextNoWrap(b As Boolean)  'ignore"},{"signature":"Sub setTextCapitalize(b As Boolean)   'ignore"},{"signature":"Sub setBordered(b As Boolean)"},{"signature":"Sub setThreeLine(b As Boolean)"},{"signature":"Sub setTwoLine(b As Boolean)"},{"signature":"Sub RGBA(r As Int, g As Int, b As Int, a As String) As String"},{"signature":"Sub setVBindCSS(b As Boolean)"},{"signature":"Sub AddQRCode(elID As String, Text As String, Width As Int, Height As Int, ColorDark As String, ColorLight As String, CorrectLevel As Object) As VueElement"},{"signature":"Sub GetBase64Image As String"},{"signature":"Sub setAcceptVideo(b As Boolean) 'ignore"},{"signature":"Sub GetFile As VueElement"},{"signature":"Sub AddFileInputImage(elID As String) As VueElement"},{"signature":"Sub GetToday As VueElement"},{"signature":"Sub GetPrevious As VueElement"},{"signature":"Sub GetNext As VueElement"},{"signature":"Sub GetToolbarTitle As VueElement"},{"signature":"Sub GetTitleToolbar As VueElement"},{"signature":"Sub AddFullCalendar(elID As String, vmodel As String, color As String, events As String) As VueElement"},{"signature":"Sub setEventColor(ec As String)"},{"signature":"Sub CalendarShowWeek(C As VueComponent, elID As String)"},{"signature":"Sub CalendarShowDay(C As VueComponent, elID As String)"},{"signature":"Sub CalendarShowMonth(C As VueComponent, elID As String)"},{"signature":"Sub CalendarCheckChange(C As VueComponent, elID As String)"},{"signature":"Sub CalendarPrev(C As VueComponent, elID As String)"},{"signature":"Sub CalendarNext(C As VueComponent, elID As String)"},{"signature":"Sub setIsLoading(b As Boolean)"},{"signature":"Sub setIsReadOnly(b As Boolean)"},{"signature":"Sub setIsDisabled(b As Boolean)"},{"signature":"Sub setIsRequired(b As Boolean)"},{"signature":"Sub setIsVisible(b As Boolean)"},{"signature":"Sub SquareShape"},{"signature":"Sub CircleShape"},{"signature":"Sub TabShape"},{"signature":"Sub setClose(b As Boolean)"},{"signature":"Sub setPill(b As Boolean)"},{"signature":"Sub setShape(s As String)"},{"signature":"Sub setStartIndex(idx As Int)"},{"signature":"Sub setBackButtonText(t As String)"},{"signature":"Sub setNextButtonText(t As String)"},{"signature":"Sub setFinishButtonText(t As String)"},{"signature":"Sub OnBeforeChange"},{"signature":"Sub OnComplete(args As String)"},{"signature":"Sub OnLoading(args As String)"},{"signature":"Sub OnValidate(args As String)"},{"signature":"Sub setOnError(args As String)"},{"signature":"Sub setErrorColor(c As String)"},{"signature":"Sub setRouteTo(r As String)"},{"signature":"Sub setModeOutIn(b As Boolean)   'ignore"},{"signature":"Sub setValidateOnBack(b As Boolean)"},{"signature":"Sub setLazy(b As Boolean)"},{"signature":"Sub RemoveBinding(v As String)  As VueElement"},{"signature":"Sub setActivatable(b As Boolean)"},{"signature":"Sub SetActiveItems(lst As List)  As VueElement"},{"signature":"Sub SetOpenItems(lst As List)  As VueElement"},{"signature":"Sub setHoverable(b As Boolean)"},{"signature":"Sub setItemChildren(ic As String)"},{"signature":"Sub setBench(bench As String)"},{"signature":"Sub setItemHeight(ih As String)"},{"signature":"Sub setItemDisabled(id As String)"},{"signature":"Sub setItemKey(ik As String)"},{"signature":"Sub setMultipleActive(b As Boolean)"},{"signature":"Sub setExpandIcon(ei As String)"},{"signature":"Sub setOpenAll(b As Boolean)"},{"signature":"Sub setHideOnScroll(b As Boolean)"},{"signature":"Sub setHorizontal(b As Boolean)"},{"signature":"Sub AddTreeView(elID As String, vmodel As String, DataSource As String, bMultiple As Boolean , ReturnObject As Boolean) As VueElement"},{"signature":"Sub AddTreeViewItem(parentID As String, key As String, text As String, mhref As String, mIcon As String, mDisabled As Boolean)"},{"signature":"Sub AddTreeViewItemOpen(parentID As String, key As String, text As String, mhref As String, mIcon As String, mDisabled As Boolean, mOpen As Boolean)"},{"signature":"Sub RefreshTreeView(C As VueComponent)"},{"signature":"Sub AddTreeViewOpen(itemKey As String)"},{"signature":"Sub TopRight  As VueElement"},{"signature":"Sub BottomRight  As VueElement"},{"signature":"Sub BottomLeft  As VueElement"},{"signature":"Sub TopLeft  As VueElement"},{"signature":"Sub setFluid(b As Boolean)"},{"signature":"Sub getTarget As String"},{"signature":"Sub TargetBlank  As VueElement"},{"signature":"Sub BindHREF(shref As String)  As VueElement"},{"signature":"Sub AddHiddenFileSelect(elID As String, multiple As Boolean) As VueElement"},{"signature":"Sub setBoilerPlate(b As Boolean)"},{"signature":"Sub setBackdropFilterBlur(r As String)"},{"signature":"Sub AlignItemsCenter As VueElement"},{"signature":"Sub JustifyContentCenter As VueElement"},{"signature":"Sub setVSlotActiveToggle(b As Boolean)   'ignore"},{"signature":"Sub BuildSnackBar"},{"signature":"Sub ListViewRefreshFromTree"},{"signature":"Sub SetDataFromTree"},{"signature":"Sub SnackBarShow(b As Boolean) As VueElement"},{"signature":"Sub SnackBarMessage(msg As String) As VueElement"},{"signature":"Sub SnackBarColor(s As String) As VueElement"},{"signature":"Sub SnackBarTimeOut(tout As Int) As VueElement"},{"signature":"Sub SnackBarRounded(b As Boolean) As VueElement"},{"signature":"Sub SnackBarShaped(b As Boolean) As VueElement"},{"signature":"Sub setSnackBarOutlined(b As Boolean) As VueElement"},{"signature":"Sub SnackBarTopLeft As VueElement"},{"signature":"Sub SnackBarTopCentered As VueElement"},{"signature":"Sub SnackBarBottomCentered As VueElement"},{"signature":"Sub SnackBarTopRight As VueElement"},{"signature":"Sub BuildTextColor(s As String, i As String) As String"},{"signature":"Sub BuildColor(s As String, i As String) As String"},{"signature":"Sub SnackBarBottomLeft As VueElement"},{"signature":"Sub SnackBarBottomRight As VueElement"},{"signature":"Sub SnackBarCentered As VueElement"},{"signature":"Sub setAvatar(b As Boolean)"},{"signature":"Sub setContent(s As String)"},{"signature":"Sub setAspectRatio(sAspectRatio As String)"},{"signature":"Sub setContain(bContain As String)"},{"signature":"Sub setSrcSet(s As String)"},{"signature":"Sub setRef(s As String)"},{"signature":"Sub SetCloseIcon(s As String)"},{"signature":"Sub SetWatch(k As String, bImmediate As Boolean, bDeep As Boolean, methodName As String, args As List)"},{"signature":"Sub getHere As String"},{"signature":"Sub BindState(C As VueComponent)"},{"signature":"Sub BindStateOnApp(c As VuetifyApp)"},{"signature":"Sub NewListViewItemOptions"},{"signature":"Sub AddAttrBoolean(prop As String)"},{"signature":"Sub RemoveAttrBoolean(prop As String)"},{"signature":"Sub ListClear(listName As String)"},{"signature":"Sub MapClear(listName As String)"},{"signature":"Sub SetBorder2(sBorderPosition As String, sBorderStyle As String, sBorderWidth As String, sBorderColor As String, sBorderRadius As String)"},{"signature":"Sub SetBorder3(sBorderPosition As String, sBorderStyle As String, sBorderWidth As String, sBorderColor As String)"},{"signature":"Sub setButtonSize(sSize As String)"},{"signature":"Sub BuildRounded(location As String, size As String) As String"},{"signature":"Sub Circle As VueElement"},{"signature":"Sub Diamond As VueElement"},{"signature":"Sub Square As VueElement"},{"signature":"Sub TopRound As VueElement"},{"signature":"Sub BottomRound As VueElement"},{"signature":"Sub LeftRound As VueElement"},{"signature":"Sub RightRound As VueElement"},{"signature":"Sub setSticky(b As Boolean)"},{"signature":"Sub BindCallBack(attr As String, methodName As String)"},{"signature":"Sub AddAttrRT(xapp As VueComponent, prop As String, value As Object)"},{"signature":"Sub AddClassRT(xapp As VueComponent, sClass As String)"},{"signature":"Sub AddStyleRT(xapp As VueComponent, prop As String, value As String)"},{"signature":"Sub AddAttributes(varAttributes As String)"},{"signature":"Sub RemoveStyle(prop As String)"},{"signature":"Sub RemoveStyleRT(xapp As VueComponent, prop As String)"},{"signature":"Sub AddMethod(methodName As String)"},{"signature":"Sub AddEvent(event As String, args As String)"},{"signature":"Sub AddEventOwn(event As String, args As String, methodName As String)"},{"signature":"Sub SetDataNewList(prop As String)"},{"signature":"Sub SetDataNewMap(prop As String)"},{"signature":"Sub AddStates(varBindings As String)"},{"signature":"Sub ToggleClassRT(xapp As VueComponent, sclass As String)"},{"signature":"Sub AddWatch(k As String, bImmediate As Boolean, bDeep As Boolean, methodName As String)"},{"signature":"Sub AddComputed(k As String, methodName As String)"},{"signature":"Sub RemoveClassRT(xApp As VueComponent, sClass As String)"},{"signature":"Sub AddStyles(varStyles As String)"},{"signature":"Sub BindAttr(prop As String, value As Object)"},{"signature":"Sub AddDesignWait(designName As String) As Boolean"},{"signature":"Sub setChipSize(sSize As String)"},{"signature":"Sub DesignerCreateView (Target As BANanoElement, Props As Map)"}],"properties":[{"key":"App","displayname":"App","fieldtype":"Boolean","defaultvalue":"False","description":""},{"key":"AssignName","displayname":"Assign Name","fieldtype":"Boolean","defaultvalue":"False"},{"key":"TagName","displayname":"Tag Name","fieldtype":"String","defaultvalue":"div","description":"tag of the element"},{"key":"OverwriteTag","displayname":"Overwrite Tag","fieldtype":"String","defaultvalue":"","description":"over write tag of the element with"},{"key":"Caption","displayname":"Caption","fieldtype":"String","defaultvalue":"","description":"Text on the element"},{"key":"Color","displayname":"Color","fieldtype":"String","defaultvalue":"","description":"","list":"accent|amber|black|blue|blue-grey|brown|cyan|deep-orange|deep-purple|error|green|grey|indigo|info|light-blue|light-green|lime|none|orange|pink|primary|purple|red|secondary|success|teal|transparent|warning|white|yellow"},{"key":"ColorIntensity","displayname":"Color Intensity","fieldtype":"String","defaultvalue":"normal","description":"","list":"accent-1|accent-2|accent-3|accent-4|darken-1|darken-2|darken-3|darken-4|lighten-1|lighten-2|lighten-3|lighten-4|lighten-5|normal"},{"key":"TextColor","displayname":"Text Color","fieldtype":"String","defaultvalue":"","description":"","list":"accent|amber|black|blue|blue-grey|brown|cyan|deep-orange|deep-purple|error|green|grey|indigo|info|light-blue|light-green|lime|none|orange|pink|primary|purple|red|secondary|success|teal|transparent|warning|white|yellow"},{"key":"TextColorIntensity","displayname":"Text Color Intensity","fieldtype":"String","defaultvalue":"normal","description":"","list":"accent-1|accent-2|accent-3|accent-4|darken-1|darken-2|darken-3|darken-4|lighten-1|lighten-2|lighten-3|lighten-4|lighten-5|normal"},{"key":"SetColorByAttribute","displayname":"Set Color By Attribute","fieldtype":"Boolean","defaultvalue":"True","description":""},{"key":"LoremIpsum","displayname":"Lorem Ipsum","fieldtype":"Boolean","defaultvalue":"False","description":"Lorem ipsum."},{"key":"ActiveClass","displayname":"Active Class","fieldtype":"String","defaultvalue":"","description":"ActiveClass."},{"key":"Align","displayname":"Vertical Align","fieldtype":"String","defaultvalue":"normal","description":"Align","list":"baseline|center|end|none|start|stretch"},{"key":"Justify","displayname":"Horizontal Align/Justify","fieldtype":"String","defaultvalue":"normal","description":"Justify","list":"center|end|none|space-around|space-between|start"},{"key":"AlignCenter","displayname":"Align Center","fieldtype":"Boolean","defaultvalue":"False","description":"AlignCenter"},{"key":"Alt","displayname":"Alt","fieldtype":"String","defaultvalue":"","description":"Alt"},{"key":"AppendIcon","displayname":"Append Icon","fieldtype":"String","defaultvalue":"","description":""},{"key":"AppendOuterIcon","displayname":"Append Outer Icon","fieldtype":"String","defaultvalue":"","description":""},{"key":"Attributes","displayname":"Attributes","fieldtype":"String","defaultvalue":"","description":"Attributes added to the HTML tag. Must be a json String- use ="},{"key":"Autofocus","displayname":"Auto-focus","fieldtype":"Boolean","defaultvalue":"False","description":""},{"key":"BackgroundImage","displayname":"Background Image","fieldtype":"String","defaultvalue":"","description":""},{"key":"BackgroundRepeat","displayname":"Background Repeat","fieldtype":"String","defaultvalue":"","description":"","list":"inherit|initial|no-repeat|none|repeat|repeat-x|repeat-y"},{"key":"Bold","displayname":"Bold","fieldtype":"Boolean","defaultvalue":"False","description":"Bold"},{"key":"Border","displayname":"Border","fieldtype":"String","defaultvalue":"","description":""},{"key":"BorderColor","displayname":"BorderColor","fieldtype":"String","defaultvalue":"","description":"","list":"accent|amber|black|blue|blue-grey|brown|cyan|deep-orange|deep-purple|error|green|grey|indigo|info|light-blue|light-green|lime|none|orange|pink|primary|purple|red|secondary|success|teal|transparent|warning|white|yellow"},{"key":"BorderRadius","displayname":"Border Radius","fieldtype":"String","defaultvalue":"","description":""},{"key":"BorderStyle","displayname":"Border Style","fieldtype":"String","defaultvalue":"","description":"","list":"dashed|dotted|double|groove|hidden|inherit|initial|inset|none|outset|remove|ridge|solid"},{"key":"BorderWidth","displayname":"Border Width","fieldtype":"String","defaultvalue":"","description":""},{"key":"BuildGrid","displayname":"Build Grid","fieldtype":"Boolean","defaultvalue":"False","description":"BuildGrid"},{"key":"ShowGridDesign","displayname":"Show Grid Design","fieldtype":"Boolean","defaultvalue":"False","description":"ShowGridDesign"},{"key":"Rows","displayname":"Rows","fieldtype":"String","defaultvalue":"","description":"Rows"},{"key":"Columns","displayname":"Columns","fieldtype":"String","defaultvalue":"","description":"Columns"},{"key":"OffSets","displayname":"OffSets XSMLX","fieldtype":"String","defaultvalue":"xs=?; s=?; m=?; l=?; x=?","description":"OffSets SMLX"},{"key":"Sizes","displayname":"Sizes XSMLX","fieldtype":"String","defaultvalue":"xs=?; s=?; m=?; l=?; x=?","description":"Sizes SMLX"},{"key":"MarginAXYTBLR","displayname":"Margin AXYTBLR","fieldtype":"String","defaultvalue":"a=?; x=?; y=?; t=?; b=?; l=?; r=?","description":"Margins AXYSMLX"},{"key":"PaddingAXYTBLR","displayname":"Padding AXYTBLR","fieldtype":"String","defaultvalue":"a=?; x=?; y=?; t=?; b=?; l=?; r=?","description":"Padding AXYSMLX"},{"key":"Center","displayname":"Center","fieldtype":"Boolean","defaultvalue":"False","description":"Center"},{"key":"Circle","displayname":"Circle","fieldtype":"Boolean","defaultvalue":"False","description":"Circle"},{"key":"Classes","displayname":"Classes","fieldtype":"String","defaultvalue":"","description":"Classes added to the HTML tag."},{"key":"Clearable","displayname":"Clearable","fieldtype":"Boolean","defaultvalue":"False","description":""},{"key":"Clipped","displayname":"Clipped","fieldtype":"Boolean","defaultvalue":"False","description":"Clipped"},{"key":"ClippedLeft","displayname":"ClippedLeft","fieldtype":"Boolean","defaultvalue":"False","description":"Clipped Left"},{"key":"ClippedRight","displayname":"ClippedRight","fieldtype":"Boolean","defaultvalue":"False","description":"Clipped Right"},{"key":"Counter","displayname":"Counter","fieldtype":"String","defaultvalue":"","description":""},{"key":"CoverImage","displayname":"Cover Image Src","fieldtype":"String","defaultvalue":"","description":"CoverImage"},{"key":"Dark","displayname":"Dark","fieldtype":"Boolean","defaultvalue":"False","description":"Dark"},{"key":"DataSource","displayname":"Data Source","fieldtype":"String","defaultvalue":"","description":""},{"key":"Dense","displayname":"Dense","fieldtype":"Boolean","defaultvalue":"False","description":""},{"key":"Disabled","displayname":"Disabled","fieldtype":"String","defaultvalue":"","description":""},{"key":"Elevation","displayname":"Elevation","fieldtype":"String","defaultvalue":"","description":""},{"key":"FillHeight","displayname":"Fill Height","fieldtype":"Boolean","defaultvalue":"False","description":"FillHeight"},{"key":"Filled","displayname":"Filled","fieldtype":"Boolean","defaultvalue":"False","description":""},{"key":"FitScreen","displayname":"Fit Screen VH","fieldtype":"Boolean","defaultvalue":"False","description":"FitScreen VH"},{"key":"Flat","displayname":"Flat","fieldtype":"Boolean","defaultvalue":"False","description":""},{"key":"Float","displayname":"Float","fieldtype":"String","defaultvalue":"","description":"","list":"left|none|right"},{"key":"Fluid","displayname":"Fluid","fieldtype":"Boolean","defaultvalue":"False","description":"Fluid"},{"key":"FontFamily","displayname":"Font Family","fieldtype":"String","defaultvalue":"","description":""},{"key":"FontSize","displayname":"Font Size","fieldtype":"String","defaultvalue":"","description":""},{"key":"FontStyle","displayname":"Font Style","fieldtype":"String","defaultvalue":"","description":"","list":"inherit|initial|italic|none|normal|oblique"},{"key":"FontWeight","displayname":"Font Weight","fieldtype":"String","defaultvalue":"","description":"","list":"bold|bolder|inherit|initial|lighter|none|normal"},{"key":"FullScreen","displayname":"Full Screen On Mobile","fieldtype":"Boolean","defaultvalue":"False","description":"FullScreen Mobile"},{"key":"Height","displayname":"Height","fieldtype":"String","defaultvalue":"","description":""},{"key":"Hidden","displayname":"Hidden","fieldtype":"Boolean","defaultvalue":"False","description":"Hidden"},{"key":"HiddenMDAndUp","displayname":"Hidden MD And Up","fieldtype":"Boolean","defaultvalue":"False","description":"HiddenMDAndUp"},{"key":"HiddenSMAndDown","displayname":"Hidden SM And Down","fieldtype":"Boolean","defaultvalue":"False","description":"HiddenSMAndDown"},{"key":"HideDetails","displayname":"Hide Details","fieldtype":"Boolean","defaultvalue":"False","description":""},{"key":"Hint","displayname":"Hint","fieldtype":"String","defaultvalue":"","description":""},{"key":"Href","displayname":"Href","fieldtype":"String","defaultvalue":"","description":"Href"},{"key":"InputType","displayname":"Input Type","fieldtype":"String","defaultvalue":"","description":"Input type","list":"email|error|file|info|none|number|password|search|success|tel|text|url|warning"},{"key":"Italic","displayname":"Italic","fieldtype":"Boolean","defaultvalue":"False","description":"Italic"},{"key":"ItemText","displayname":"Item Text","fieldtype":"String","defaultvalue":"","description":""},{"key":"ItemValue","displayname":"Item Value","fieldtype":"String","defaultvalue":"","description":""},{"key":"Items","displayname":"Items","fieldtype":"String","defaultvalue":"","description":""},{"key":"JustifyCenter","displayname":"Justify Center","fieldtype":"Boolean","defaultvalue":"False","description":"JustifyCenter"},{"key":"Key","displayname":"Key","fieldtype":"String","defaultvalue":"","description":""},{"key":"Label","displayname":"Label","fieldtype":"String","defaultvalue":"","description":"Label of the element"},{"key":"MaxHeight","displayname":"Max Height","fieldtype":"String","defaultvalue":"","description":""},{"key":"MaxWidth","displayname":"Max Width","fieldtype":"String","defaultvalue":"","description":""},{"key":"NoGutter","displayname":"No Gutters","fieldtype":"Boolean","defaultvalue":"False","description":"NoGutter"},{"key":"Outlined","displayname":"Outlined","fieldtype":"Boolean","defaultvalue":"False","description":""},{"key":"PersistentHint","displayname":"Persistent Hint","fieldtype":"Boolean","defaultvalue":"False","description":""},{"key":"Placeholder","displayname":"Placeholder","fieldtype":"String","defaultvalue":"","description":""},{"key":"PrependIcon","displayname":"Prepend Icon","fieldtype":"String","defaultvalue":"","description":""},{"key":"PrependInnerIcon","displayname":"Prepend Inner Icon","fieldtype":"String","defaultvalue":"","description":""},{"key":"Readonly","displayname":"Readonly","fieldtype":"String","defaultvalue":"","description":""},{"key":"Required","displayname":"Required","fieldtype":"String","defaultvalue":"","description":""},{"key":"ReturnObject","displayname":"Return Object","fieldtype":"Boolean","defaultvalue":"False","description":""},{"key":"Rounded","displayname":"Rounded","fieldtype":"Boolean","defaultvalue":"False","description":"","":""},{"key":"Shaped","displayname":"Shaped","fieldtype":"Boolean","defaultvalue":"False","description":""},{"key":"SingleLine","displayname":"Single Line","fieldtype":"Boolean","defaultvalue":"False","description":""},{"key":"Slot","displayname":"Slot","fieldtype":"String","defaultvalue":"","description":""},{"key":"Solo","displayname":"Solo","fieldtype":"Boolean","defaultvalue":"False","description":""},{"key":"Src","displayname":"Src","fieldtype":"String","defaultvalue":"","description":"Src"},{"key":"States","displayname":"States","fieldtype":"String","defaultvalue":"","description":"Initial Binding States. Must be a json String- use ="},{"key":"Style","displayname":"Style","fieldtype":"String","defaultvalue":"","description":"Styles added to the HTML tag. Must be a json String- use ="},{"key":"StyleHeight","displayname":"Style Height","fieldtype":"String","defaultvalue":"","description":""},{"key":"StyleMaxHeight","displayname":"Style Max Height","fieldtype":"String","defaultvalue":"","description":""},{"key":"StyleMaxWidth","displayname":"Style Max Width","fieldtype":"String","defaultvalue":"","description":""},{"key":"StyleWidth","displayname":"Style Width","fieldtype":"String","defaultvalue":"","description":""},{"key":"TextAlign","displayname":"Text Align","fieldtype":"String","defaultvalue":"","description":"","list":"center|justify|left|none|right"},{"key":"TextDecoration","displayname":"Text Decoration","fieldtype":"String","defaultvalue":"","description":"","list":"line-through|none|overline|underline"},{"key":"To","displayname":"To","fieldtype":"String","defaultvalue":"","description":""},{"key":"VElse","displayname":"V-Else","fieldtype":"String","defaultvalue":"","description":""},{"key":"VElseIf","displayname":"V-Else-If","fieldtype":"String","defaultvalue":"","description":""},{"key":"VFor","displayname":"V-For","fieldtype":"String","defaultvalue":"","description":""},{"key":"VHtml","displayname":"V-Html","fieldtype":"String","defaultvalue":"","description":""},{"key":"VIf","displayname":"V-If","fieldtype":"String","defaultvalue":"","description":""},{"key":"VModel","displayname":"V-Model","fieldtype":"String","defaultvalue":"","description":""},{"key":"VOn","displayname":"V-On","fieldtype":"String","defaultvalue":"","description":""},{"key":"VShow","displayname":"V-Show","fieldtype":"String","defaultvalue":"","description":""},{"key":"VSlotActivator","displayname":"V-Slot-Activator","fieldtype":"String","defaultvalue":"","description":"Slot activator"},{"key":"VSlotDefault","displayname":"V-Slot-Default","fieldtype":"String","defaultvalue":"","description":"Slot default"},{"key":"VText","displayname":"V-Text","fieldtype":"String","defaultvalue":"","description":""},{"key":"Value","displayname":"Value","fieldtype":"String","defaultvalue":"","description":"Value on the element"},{"key":"Width","displayname":"Width","fieldtype":"String","defaultvalue":"","description":""},{"key":"OnClick","displayname":"On Click","fieldtype":"String","defaultvalue":"","description":"Event arguments to be passed to the attribute."},{"key":"OnClickStop","displayname":"On Click Stop","fieldtype":"String","defaultvalue":"","description":"Event arguments to be passed to the attribute."},{"key":"OnChange","displayname":"On Change","fieldtype":"String","defaultvalue":"","description":"Event arguments to be passed to the attribute."},{"key":"OnDblClick","displayname":"On Dbl Click","fieldtype":"String","defaultvalue":"","description":"Event arguments to be passed to the attribute."},{"key":"OnMouseMove","displayname":"On Mouse Move","fieldtype":"String","defaultvalue":"","description":"Event arguments to be passed to the attribute."},{"key":"OnMouseOut","displayname":"On Mouse Out","fieldtype":"String","defaultvalue":"","description":"Event arguments to be passed to the attribute."},{"key":"OnKeyUp","displayname":"On KeyUp","fieldtype":"String","defaultvalue":"","description":"Event arguments to be passed to the attribute."},{"key":"OnKeyPress","displayname":"On KeyPress","fieldtype":"String","defaultvalue":"","description":"Event arguments to be passed to the attribute."},{"key":"OnClickAlt","displayname":"On ClickAlt","fieldtype":"String","defaultvalue":"","description":"Event arguments to be passed to the attribute."},{"key":"OnClickShift","displayname":"On ClickShift","fieldtype":"String","defaultvalue":"","description":"Event arguments to be passed to the attribute."},{"key":"OnClickPrevent","displayname":"On ClickPrevent","fieldtype":"String","defaultvalue":"","description":"Event arguments to be passed to the attribute."}]}