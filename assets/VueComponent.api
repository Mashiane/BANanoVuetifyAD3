{"filename":"VueComponent","events":[{"event":"Mounted"},{"event":"Created"},{"event":"Destroyed"},{"event":"Activated"},{"event":"BeforeUpdate"},{"event":"BeforeMount"},{"event":"BeforeDestroy"},{"event":"BeforeCreate"},{"event":"Updated"},{"event":"DeActivated"},{"event":"BeforeEnter (boTo as map, boFrom as map, boNext as BANanoObject)"},{"event":"BeforeRouteEnter (boTo as map, boFrom as map, boNext as BANanoObject)"},{"event":"BeforeRouteUpdate (boTo as map, boFrom as map, boNext as BANanoObject)"},{"event":"BeforeRouteLeave (boTo as map, boFrom as map, boNext as BANanoObject)"},{"event":"Animation_Update (anim As BANanoObject)"},{"event":"Animation_Begin (anim As BANanoObject)"},{"event":"Animation_Complete (anim As BANanoObject)"},{"event":"Animation_LoopComplete (anim As BANanoObject)"},{"event":"Animation_LoopBegin (anim As BANanoObject)"},{"event":"Animation_Change"},{"event":"Animation_ChangeBegin (anim As BANanoObject)"},{"event":"Animation_ChangeComplete (anim As BananoObject)"},{"event":"Notification_Show"},{"event":"Notification_Close"},{"event":"Notification_Error"},{"event":"Notification_Click"},{"event":"NextTick"}],"subroutines":[{"signature":"Sub Class_Globals"},{"signature":"Sub OnNextTick(methodName As String)"},{"signature":"Sub CloneTranslations(source As Map)"},{"signature":"Sub Html2ImageWait(elementID As String, sFileName As String) As Boolean"},{"signature":"Sub This(v As VuetifyApp) As BANanoObject"},{"signature":"Sub StartHeartBeat(persist As Boolean, seconds As Long)"},{"signature":"Sub DeleteSession"},{"signature":"Sub StoragePersistWait As Boolean"},{"signature":"Sub StorageEstimateWait As StorageQuota"},{"signature":"Sub StopHeartBeat"},{"signature":"Sub SaveSession"},{"signature":"Sub ReadSession"},{"signature":"Sub StartPage"},{"signature":"Sub FindProgressLoaderOn(appBar As VAppBar)"},{"signature":"Sub PagePause"},{"signature":"Sub PageResume"},{"signature":"Sub readAsText(fr As Map) As String"},{"signature":"Sub readAsBinaryString(fr As Map) As String"},{"signature":"Sub readAsDataURL(fr As Map) As String"},{"signature":"Sub readAsArrayBuffer(fr As Map) As String"},{"signature":"Sub Page As VueElement"},{"signature":"Sub OnBeforeEnter(MethodName As String)"},{"signature":"Sub OnBeforeRouteEnter(MethodName As String)"},{"signature":"Sub OnBeforeRouteUpdate(MethodName As String)"},{"signature":"Sub OnBeforeRouteLeave(MethodName As String)"},{"signature":"Sub AddContainer(contID As String, bFluid As Boolean) As VueElement"},{"signature":"Sub GetTabItem(elID As String) As VueElement"},{"signature":"Sub GetTabIcon(elID As String) As VueElement"},{"signature":"Sub Click(refID As String)"},{"signature":"Sub ClickFile(refID As String)"},{"signature":"Sub ClearFile(refID As String)"},{"signature":"Sub SetFocus(refID As String)"},{"signature":"Sub FormReset(formName As String)"},{"signature":"Sub FormResetValidation(formName As String)"},{"signature":"Sub FormValidate(formName As String) As Boolean"},{"signature":"Sub DialogValidate(dlgID As String) As Boolean"},{"signature":"Sub DialogResetValidation(dlgID As String) As Boolean"},{"signature":"Sub DialogReset(dlgID As String) As Boolean"},{"signature":"Sub AddRealComponent(k As String)"},{"signature":"Sub Initialize (CallBack As Object, Name As String) As VueComponent"},{"signature":"Sub sanitizeid(value As String) As String"},{"signature":"Sub SetTranslations"},{"signature":"Sub Truncate(txt As String, size As Int) As String"},{"signature":"Sub join(x As List) As String"},{"signature":"Sub strparseover(content As String) As Int"},{"signature":"Sub strparse(v As String) As List"},{"signature":"Sub OnComputed(k As String, methodName As String)"},{"signature":"Sub OnWatch(k As String, bImmediate As Boolean, bDeep As Boolean, methodName As String)"},{"signature":"Public Sub UpDown(variance As String) As String\t\t'ignore"},{"signature":"Public Sub RagUpDownName(variance As String) As String\t\t'ignore"},{"signature":"Sub RagSmiley(item As String) As String  'ignore"},{"signature":"Sub RagSmileyName(item As String) As String  'ignore"},{"signature":"Sub Reactions(item As String) As String  'ignore"},{"signature":"Sub ReactionsName(item As String) As String  'ignore"},{"signature":"Public Sub RagCircles(dVariance As Int) As String   'ignore"},{"signature":"Public Sub RagCirclesName(dVariance As Int) As String   'ignore"},{"signature":"Public Sub GenderAvatar(gender As String) As String\t\t'ignore"},{"signature":"Public Sub GenderName(gender As String) As String\t\t'ignore"},{"signature":"Sub GetDefault(m As Map, prop As String, def As String) As String"},{"signature":"Sub SetDefault(m As Map, prop As String, def As Object) As Map"},{"signature":"Sub ComponentExists(compName As String) As Boolean"},{"signature":"Sub json2list(content As String) As List"},{"signature":"Sub AddMsgBox(bPersistent As Boolean, width As Int, okColor As String, cancelColor As String) As VueElement"},{"signature":"Sub GetVueElement(Module As Object, elID As String) As VueElement"},{"signature":"Sub NewMap As Map"},{"signature":"Sub TableSetTitle(tableName As String, Title As String)"},{"signature":"Sub DialogCardTitle(dlgID As String) As VueElement"},{"signature":"Sub DialogContainer(dlgID As String) As VueElement"},{"signature":"Sub DialogForm(dlgID As String) As VueElement"},{"signature":"Sub DialogUpdateTitle(dlgID As String, title As String)"},{"signature":"Sub DialogCancelShowHide(eliD As String, b As Boolean)"},{"signature":"Sub DialogOkShowHide(elID As String, b As Boolean)"},{"signature":"Sub DialogActions(dlgID As String) As VueElement"},{"signature":"Sub DialogOK(dlgID As String) As VueElement"},{"signature":"Sub DialogCancel(dlgID As String) As VueElement"},{"signature":"Sub ShowConfirm(sprocess As String, Title As String, Message As String, ConfirmText As String, CancelText As String)"},{"signature":"Sub FormatDisplayDate(item As String, sFormat As String) As String\t\t\t'ignoredeadcode"},{"signature":"Sub DateDisplayFormat(vmodel As String, sformat As String) As String   'IgnoreDeadCode"},{"signature":"Sub HideCreditCard(snumber As String) As String\t\t\t'ignoredeadcode"},{"signature":"Sub YYYYMMDD(sdate As String) As String"},{"signature":"Sub YYYYMM(sdate As String) As String"},{"signature":"Sub NiceMonth(sdate As String) As String\t\t\t'ignoredeadcode"},{"signature":"Sub NiceYear(sdate As String) As String\t\t\t'ignoredeadcode"},{"signature":"Sub NiceDate(sdate As String) As String\t\t\t\t'ignoredeadcode"},{"signature":"Sub NiceTime(stime As String) As String\t\t\t\t'ignoredeadcode"},{"signature":"Sub NiceDateTime(d As String, t As String) As String\t\t\t\t'ignoredeadcode"},{"signature":"Sub NiceTimeOnly(stime As String) As String\t\t\t\t'ignoredeadcode"},{"signature":"Sub NiceMoney(smoney As String) As String\t\t\t\t'ignoredeadcode"},{"signature":"Sub Thousands(smoney As String) As String\t\t\t\t'ignoredeadcode"},{"signature":"Sub NiceFileSize(fsx As String) As String\t\t\t\t'ignoredeadcode"},{"signature":"Sub FormatFileSize(Bytes As Float) As String\t\t\t'ignoredeadcode\t\t'ignoredeadcode"},{"signature":"Sub FormatDisplayNumber(item As String, sFormat As String) As String\t\t\t'ignoredeadcode"},{"signature":"Sub ShowAlert(sprocess As String, title As String, Message As String, OkTitle As String)"},{"signature":"Sub SetDataRemoveWhere1(dsname As String, prop As String, value As String)"},{"signature":"Sub Append(txt As String)"},{"signature":"Sub ShowPrompt(sprocess As String, Title As String, Label As String, Placeholder As String, Hint As String, DefaultValue As String, OkText As String, CancelText As String)"},{"signature":"Sub ShowPrompt1(sProcess As String, InputType As String, Title As String, Label As String, Placeholder As String, Hint As String, DefaultValue As String, OkText As String, CancelText As String)"},{"signature":"Sub getPromptValue As String"},{"signature":"Sub AddQuery(k As String, v As String)"},{"signature":"Sub BindVueElement(el As VueElement)"},{"signature":"Sub NewList As List"},{"signature":"Sub NewList1(itms As List) As List"},{"signature":"Sub GetElementByData(dataattr As String, value As String) As BANanoElement"},{"signature":"Sub Import(Vuex As BANanoObject, comp As VueComponent)"},{"signature":"Sub ImportVueComponent(comp As VueComponent)"},{"signature":"Sub AddElement1(elTag As String, elID As String, elText As String, elprops As Map, mstyles As Map, lclasses As List, loose As List)"},{"signature":"Sub AddCustomElement(eltag As String, elid As String, elprops As Map, eltext As String)"},{"signature":"Sub ImportBO(compName As String, comp As BANanoObject)"},{"signature":"Sub UsePrism"},{"signature":"Sub UseDynamic"},{"signature":"Sub AddElement(ve As VueElement)"},{"signature":"Sub AddHTML(shtml As String)"},{"signature":"Sub OnMounted(methodName As String, args As List)"},{"signature":"Sub SetMounted(Module As Object,methodName As String, args As List) As VueComponent"},{"signature":"Sub OnUpdated(methodName As String, args As List)"},{"signature":"Sub SetUpdated(Module As Object, methodName As String, args As List) As VueComponent"},{"signature":"Sub OnBeforeMount(methodName As String, args As List)"},{"signature":"Sub SetBeforeMount(Module As Object, methodName As String, args As List) As VueComponent"},{"signature":"Sub OnBeforeUpdate(methodName As String, args As List)"},{"signature":"Sub SetBeforeUpdate(Module As Object, methodName As String, args As List) As VueComponent"},{"signature":"Sub OnBeforeDestroy(methodName As String, args As List)"},{"signature":"Sub SetBeforeDestroy(Module As Object, methodName As String, args As List) As VueComponent"},{"signature":"Sub OnBeforeCreate(methodName As String, args As List)"},{"signature":"Sub SetBeforeCreate(Module As Object, methodName As String, args As List) As VueComponent"},{"signature":"Sub OnCreated(methodName As String, args As List)"},{"signature":"Sub SetCreated(Module As Object, methodName As String, args As List) As VueComponent"},{"signature":"Sub OnDestroyed(methodName As String, args As List)"},{"signature":"Sub SetDestroyed(Module As Object, methodName As String, args As List) As VueComponent"},{"signature":"Sub OnActivated(methodName As String, args As List)"},{"signature":"Sub SetActivated(Module As Object, methodName As String, args As List) As VueComponent"},{"signature":"Sub SetRender(cb As BANanoObject)"},{"signature":"Sub AddPropertyArray(propName As String, propDefault As Object, propRequired As Boolean)"},{"signature":"Sub AddPropertyNumber(propName As String, propDefault As Object, propRequired As Boolean)"},{"signature":"Sub AddPropertyBoolean(propName As String, propDefault As Object, propRequired As Boolean)"},{"signature":"Sub AddPropertyObject(propName As String, propDefault As Object, propRequired As Boolean)"},{"signature":"Sub AddPropertyString(propName As String, propDefault As Object, propRequired As Boolean)"},{"signature":"Sub AddProperty1(propName As String, propType As BANanoObject, propDefault As Object, propRequired As Boolean)"},{"signature":"Sub AddRouteProperty(propName As String, propValue As String)"},{"signature":"Sub OnDeActivated(methodName As String, args As List)"},{"signature":"Sub SetDeActivated(Module As Object, methodName As String, args As List) As VueComponent"},{"signature":"Sub SetPath(sPath As String) As VueComponent"},{"signature":"Sub getID() As String"},{"signature":"Sub setID(varText As String) As VueComponent"},{"signature":"Sub SetDataFreeze(prop As String, xvalue As Object) As VueComponent"},{"signature":"Sub SetData(prop As String, value As Object)"},{"signature":"Sub SetDataAsIs(prop As String, value As Object)"},{"signature":"Sub SetDataPush(listName As String, item As Object)"},{"signature":"Sub SetDataRemoveWhere(listname As String, whereMap As Map)"},{"signature":"Sub GetDataWhere(lstName As String, whereMap As Map) As Map"},{"signature":"Sub SetDataRemoveAtPosition(lstName As String, pos As Int)"},{"signature":"Sub SetDataInsert(lstname As String, pos As Int, obj As Object)"},{"signature":"Sub SetDataSplice(lstname As String, pos As Int, removeHowMany As Int, obj As Object)"},{"signature":"Sub SetDataSpliceRemove(lstname As String, pos As Int, removeHowMany As Int)"},{"signature":"Sub GetDataSlice(lstname As String, startPos As Int) As List"},{"signature":"Sub GetDataAtPosition(lstName As String, pos As Int) As Map"},{"signature":"Sub GetDataPositionWhere(lstName As String, props As Map) As Int"},{"signature":"Sub SetDataShift(lstname As String)"},{"signature":"Sub SetDataReverse(lstname As String)"},{"signature":"Sub SetDataSort(lstname As String)"},{"signature":"Sub SetDataPop(lstname As String)"},{"signature":"Sub SetDataUnshift(lstname As String, obj As Object)"},{"signature":"Sub RequiresAuthentication(b As Boolean)"},{"signature":"Sub setTitle(sTitle As String)"},{"signature":"Sub AddMeta(prop As String, value As String)"},{"signature":"Sub SetLoading(elID As String, b As Boolean)"},{"signature":"Sub Component As Map"},{"signature":"Sub RemoveData(key As String)"},{"signature":"Sub GetData(prop As String) As Object"},{"signature":"Sub GetDataAsIs(prop As String) As Object"},{"signature":"Sub AddProperty(propName As String)"},{"signature":"Sub AddProperties(propsList As List)"},{"signature":"Sub AddFilter(methodName As String)"},{"signature":"Sub SetFilter(Module As Object, methodName As String)"},{"signature":"Sub AddComputed(k As String, methodName As String)"},{"signature":"Sub SetComputed(k As String, Module As Object, methodName As String, args As List)"},{"signature":"Sub AddComputed1(k As String, Module As Object, getmethodName As String, setmethodName As String)"},{"signature":"Sub AddWatch(k As String, bImmediate As Boolean, bDeep As Boolean, methodName As String)"},{"signature":"Sub SetWatch(k As String, bImmediate As Boolean, bDeep As Boolean, Module As Object, methodName As String, args As List)"},{"signature":"Sub AddMethod(methodName As String, args As List)"},{"signature":"Sub SetMethod(Module As Object, methodName As String, args As List)"},{"signature":"Sub SetMethod2(Module As Object, methodName As String)"},{"signature":"Sub SetMethod3(Module As Object, methodName As String)"},{"signature":"Sub SetCallBack(methodName As String, cb As BANanoObject)"},{"signature":"Sub SetComputedBind(methodName As String, cb As BANanoObject)"},{"signature":"Sub SetWatchBind(methodName As String, cb As BANanoObject)"},{"signature":"Sub SetState(m As Map)"},{"signature":"Sub HasState(k As String) As Boolean"},{"signature":"Sub GetState(k As String, v As Object) As Object"},{"signature":"Sub ToggleState(stateName As String)"},{"signature":"Sub Toggle(stateID As String)"},{"signature":"Sub StateExists(stateName As String) As Boolean"},{"signature":"Sub SetStateMap(mapKey As String, mapValues As Map)"},{"signature":"Sub SetStateList(mapKey As String, mapValues As List)"},{"signature":"Sub SetStateListValues(mapValues As List)"},{"signature":"Sub GetStates(lst As List) As Map"},{"signature":"Sub SetStateTrue(k As String)"},{"signature":"Sub SetStateFalse(k As String)"},{"signature":"Sub SetStateSingle(k As String, v As Object)"},{"signature":"Sub NotState(stateName As String) As Boolean"},{"signature":"Sub Increment(k As String) As VueComponent"},{"signature":"Sub Decrement(k As String) As VueComponent"},{"signature":"Sub Enable(elID As String)"},{"signature":"Sub Disable(elID As String)"},{"signature":"Sub SetEnabled(elID As String, b As Boolean)"},{"signature":"Sub Hide(elID As String)"},{"signature":"Sub Show(elID As String)"},{"signature":"Sub SetMessage(elID As String, msg As String)"},{"signature":"Sub NullifyFileSelect(refID As String)"},{"signature":"Sub RefNull(refID As String)"},{"signature":"Sub RefClick(refID As String)"},{"signature":"Sub ShowFileSelect(fsName As String)"},{"signature":"Sub RefreshKey(keyName As String) As VueComponent"},{"signature":"Sub AddRule(ruleName As String, MethodName As String)"},{"signature":"Sub OpenDialog(dldID As String)"},{"signature":"Sub CloseDialog(dldID As String)"},{"signature":"Sub BANanoGetHTMLAsIs(id As String) As String"},{"signature":"Sub getConfirm As String"},{"signature":"Sub getPromptProcess As String"},{"signature":"Sub DialogAction As String"},{"signature":"Sub ShowDialog"},{"signature":"Sub HideDialog"},{"signature":"Sub BANanoGetHTML(id As String) As String"},{"signature":"Sub AppendHolder"},{"signature":"Sub Build"},{"signature":"Sub AppendHolderTo(target As String)"},{"signature":"Sub AppendPlaceHolderTo(target As String)"},{"signature":"Sub AppendPlaceHolder"},{"signature":"Sub CallMethod(methodName As String)"},{"signature":"Sub RunMethod(methodName As String, args As Object) As BANanoObject"},{"signature":"Sub CStr(o As Object) As String"},{"signature":"Sub IsVisible1(ve As VueElement, bShow As Boolean)"},{"signature":"Sub FormValidate1(formName As String) As Boolean"},{"signature":"Sub SetInterval(methodname As String, ms As Int, args As List) As Object"},{"signature":"Sub ClearInterval(interval As Object)"},{"signature":"Sub UpdateSRC(elID As String, src As String)"},{"signature":"Sub RealTimeUpdateItemAtPosition(lstName As String, pos As Int, item As Map)"},{"signature":"Sub RealTimeRemoveItemAtPosition(lstName As String, pos As Int)"},{"signature":"Sub RealTimeFindItemAtPosition(lstName As String, pos As Int) As Map"},{"signature":"Sub RealTimeFindItemPosition(lstName As String, whereMap As Map) As Int"},{"signature":"Sub RealTimeAddItem(lstName As String, rowData As Map)"},{"signature":"Sub RealTimeRemoveItem(lstName As String, prop As String, value As String)"},{"signature":"Sub RealTimeUpdateItem(lstName As String, prop As String, value As String, item As Map)"},{"signature":"Sub RealTimeReadItem(lstName As String, prop As String, value As String) As Map"},{"signature":"Sub RealTimeFindItem(lstName As String, whereMap As Map) As Map"},{"signature":"Sub IsLoading(elID As String, b As Boolean)"},{"signature":"Sub IsReadOnly(elID As String, b As Boolean)"},{"signature":"Sub IsDisabled(elID As String, b As Boolean)"},{"signature":"Sub IsRequired(elID As String, b As Boolean)"},{"signature":"Sub IsVisible(elID As String, b As Boolean)"},{"signature":"Sub MapNiceDates(m As Map, flds As List)"},{"signature":"Sub GetThemeColor(color As String, intensity As String) As String"},{"signature":"Sub MapNiceMoney(m As Map, flds As List)"},{"signature":"Sub MapThousands(m As Map, flds As List)"},{"signature":"Sub MapNiceMonths(m As Map, flds As List)"},{"signature":"Sub MapVal(m As Map, flds As List)"},{"signature":"Sub SetActiveItems(elID As String, lst As List)"},{"signature":"Sub SetOpenItems(elID As String, lst As List)"},{"signature":"Sub GetOpen(elID As String) As List"},{"signature":"Sub GetActive(elID As String) As List"},{"signature":"Sub GetSelected(vmodel As String) As List"},{"signature":"Sub VJSFAdd(parent As Map, vmodel As String, eType As String, eTitle As String, eDescription As String, props As Map)"},{"signature":"Sub TreeViewRefresh(tv As VueElement)"},{"signature":"Sub ShowSnackBarError(elID As String, Message As String)"},{"signature":"Sub ShowSnackBarSuccess(elID As String, Message As String)"},{"signature":"Sub ShowSnackBarPrimary(elID As String, Message As String)"},{"signature":"Sub ShowSnackBarSecondary(elID As String, Message As String)"},{"signature":"Sub ShowSnackBarInfo(elID As String, Message As String)"},{"signature":"Sub ShowSnackBarWarning(elID As String, Message As String)"},{"signature":"Sub ShowSnackBar(elID As String, Message As String)"},{"signature":"Sub HideSnackBar(elID As String)"},{"signature":"Sub SetTimeOut(MethodName As String, ms As Int)"},{"signature":"Sub GetBindingCode(sVariables As String) As String"},{"signature":"Sub UseVJSF"},{"signature":"Sub BindState(elx As VueElement)"},{"signature":"Sub FindItemAtPosition(dsName As String, pos As Int) As Map"},{"signature":"Sub TogglePassword(elID As String)"},{"signature":"Sub UpdateItems(elID As String, items As List)"},{"signature":"Sub AddItem(elID As String, rowdata As Map)"},{"signature":"Sub RemoveItem(elID As String, prop As String, value As String)"},{"signature":"Sub UpdateItem(elID As String, prop As String, value As String, item As Map)"},{"signature":"Sub FindItem(elID As String, whereMap As Map) As Map"},{"signature":"Sub ReadItem(elID As String, prop As String, value As String) As Map"},{"signature":"Sub RealTimeRemoveItemWhere(lstName As String, wm As Map)"},{"signature":"Sub OnTimeOut(MethodName As String, ms As Int)"},{"signature":"Sub OnInterval(MethodName As String, ms As Int) As Int"},{"signature":"Sub ListContains(listname As String, prop As String, value As String) As Boolean"},{"signature":"Sub ListFind(listname As String, prop As String, value As String) As Map"},{"signature":"Sub ListFindKeys(listName As String, prop As String, lstKeys As List) As List"},{"signature":"Sub ListIndexOf(listname As String, prop As String, value As String) As Long"},{"signature":"Sub ListChange(listname As String, prop As String, value As String, item As Map) As Boolean"},{"signature":"Sub ListDeleteAll(listname As String, prop As String, value As String) As Boolean"},{"signature":"Sub ListUpdate(listname As String, prop As String, value As String, item As Map) As Boolean"},{"signature":"Sub ListDelete(listname As String, prop As String, value As String) As Boolean"},{"signature":"Sub UpdateFieldVisibile(cName As String, b As Boolean)"},{"signature":"Sub UpdateFieldReadOnly(cName As String, b As Boolean)"},{"signature":"Sub UpdateFieldRequired(cName As String, b As Boolean)"},{"signature":"Sub UpdateFieldDisabled(cName As String, b As Boolean)"},{"signature":"Sub UpdateFieldLoading(cName As String, b As Boolean)"},{"signature":"Sub UpdateFieldCaption(cName As String, s As String)"},{"signature":"Sub UpdateFieldItems(cName As String, items As List)"},{"signature":"Sub UpdateFieldClearItems(cName As String)"},{"signature":"Sub UpdateFieldAddItems(cName As String, items As Map)"},{"signature":"Sub UpdateFieldAddColors(cName As String, items As Map)"},{"signature":"Sub UpdateFieldAddPerson(cName As String, value As String, text As String, avatar As String)"},{"signature":"Sub UpdateFieldColor(cName As String, cColor As String, cColorIntensity As String)"},{"signature":"Sub UpdateFieldTextColor(cName As String, cColor As String, cColorIntensity As String)"},{"signature":"Sub UpdateFieldImage(cName As String, src As String)"},{"signature":"Sub UpdateFieldLazyImage(cName As String, src As String)"},{"signature":"Sub UpdateFieldTogglePassword(elID As String)"},{"signature":"Sub UpdateFieldRemoveClass(sitem As String, sClass As String)"},{"signature":"Sub UpdateFieldTextAlign(sitem As String, ta As String)"},{"signature":"Sub UpdateFieldTextDecoration(sItem As String, s As String)"},{"signature":"Sub UpdateFieldTruncate(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldLineThrough(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldFontThin(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldFontLight(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldUnderLine(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldOverline(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldBold(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldFontWeightBlack(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldItalic(sitem As String, b As Boolean)"},{"signature":"Sub FieldBindDefault(sitem As String, prop As String, varName As String, def As Object)"},{"signature":"Sub FieldBind(sitem As String, prop As String, varName As String)"},{"signature":"Sub FieldHiddenXSOnly(sitem As String)"},{"signature":"Sub FieldHiddenSMOnly(sitem As String)"},{"signature":"Sub FieldHiddenMDOnly(sitem As String)"},{"signature":"Sub FieldHiddenLGOnly(sitem As String)"},{"signature":"Sub FieldHiddenXLOnly(sitem As String)"},{"signature":"Sub FieldHiddenSMAndDown(sitem As String)"},{"signature":"Sub FieldHiddenMDAndDown(sitem As String)"},{"signature":"Sub FieldHiddenLGAndDown(sitem As String)"},{"signature":"Sub FieldHiddenSMAndUp(sitem As String)"},{"signature":"Sub FieldHiddenMDAndUp(sitem As String)"},{"signature":"Sub FieldHiddenLGAndUp(sitem As String)"},{"signature":"Sub FieldHiddenOnAll(sitem As String)"},{"signature":"Sub FieldHideOnlyOnXS(sitem As String)"},{"signature":"Sub FieldHideOnlyOnSM(sitem As String)"},{"signature":"Sub FieldHideOnlyOnMD(sitem As String)"},{"signature":"Sub FieldHideOnlyOnLG(sitem As String)"},{"signature":"Sub FieldHideOnlyOnXL(sitem As String)"},{"signature":"Sub FieldVisibleOnAll(sitem As String)"},{"signature":"Sub FieldVisibleOnlyOnXS(sitem As String)"},{"signature":"Sub FieldVisibleOnlyOnSM(sitem As String)"},{"signature":"Sub FieldVisibleOnlyOnMD(sitem As String)"},{"signature":"Sub FieldVisibleOnlyOnLG(sitem As String)"},{"signature":"Sub FieldVisibleOnlyOnXL(sitem As String)"},{"signature":"Sub UpdateFieldToggleClass(sitem As String, sClass As String)"},{"signature":"Sub UpdateFieldAddClass(sItem As String, sClass As String)"},{"signature":"Sub UpdateFieldAddStyle(sitem As String, prop As String, value As String)"},{"signature":"Sub UpdateFieldRemoveStyle(sitem As String, prop As String)"},{"signature":"Sub UpdateFieldLabel(sitem As String, s As String)"},{"signature":"Sub UpdateFieldValue(sVModel As String, s As Object)"},{"signature":"Sub UpdateFieldElevation(sitem As String, iElev As Int)"},{"signature":"Sub UpdateFieldRounded(sitem As String, sround As String)"},{"signature":"Sub UpdateFieldSize(sitem As String, s As String)"},{"signature":"Sub UpdateFieldBadge(elIDName As String, items As Int)"},{"signature":"Sub UpdateFieldIncrement(elIDName As String)"},{"signature":"Sub UpdateFieldDecrement(elIDName As String)"},{"signature":"Sub UpdateFieldBadgeColor(bID As String, color As String)"},{"signature":"Sub UpdateFieldBadgeIconColor(bID As String, color As String)"},{"signature":"Sub UpdateFieldPercentage(bID As String, currentx As Long, totalx As Long)"},{"signature":"Sub GetFieldVModel(sVModel As String) As Object"},{"signature":"Sub GetFieldBadgeColor(bID As String) As String"},{"signature":"Sub GetFieldBadgeIconColor(bID As String) As String"},{"signature":"Sub GetFieldBadge(elIDName As String) As Int"},{"signature":"Sub GetFieldSize(sitem As String) As Int"},{"signature":"Sub GetFieldVisibile(cName As String) As Boolean"},{"signature":"Sub GetFieldReadOnly(cName As String) As Boolean"},{"signature":"Sub GetFieldRequired(cName As String) As Boolean"},{"signature":"Sub GetFieldDisabled(cName As String) As Boolean"},{"signature":"Sub GetFieldLoading(cName As String) As Boolean"},{"signature":"Sub GetFieldCaption(cName As String) As String"},{"signature":"Sub GetFieldItems(cName As String) As List"},{"signature":"Sub GetFieldImage(cName As String) As String"},{"signature":"Sub GetFieldLazyImage(cName As String) As String"},{"signature":"Sub GetFieldTogglePassword(elID As String) As Boolean"},{"signature":"Sub GetFieldLabel(sitem As String) As String"},{"signature":"Sub UpdateFieldPercent(svmodel As String, num As Int)"},{"signature":"Sub UpdateFieldProgress(svmodel As String, currentx As Long, totalx As Long)"},{"signature":"Sub ClearVModel(svmodel As String)"},{"signature":"Sub UpdateFieldIndeterminate(sitem As String, b As Boolean)"},{"signature":"Sub UpdateFieldCaptionVisible(sitem As String, b As Boolean)"},{"signature":"Sub PercentageOf(currentCount As Long, totalCount As Long) As Int"},{"signature":"Sub CreateNewList(lstName As String)"},{"signature":"Sub CreateNewObject(mapName As String)"},{"signature":"Sub SetDataAnimated(elID As String, duration As Int, endValue As Object) As BANanoAnimeJS"},{"signature":"Sub BindStateAll"},{"signature":"Sub RefreshActiveRefs(VA As VuetifyApp)"},{"signature":"Sub ListAdd(listName As String, obj As Object)"},{"signature":"Sub ListClear(listName As String)"},{"signature":"Sub PriorityColor(svalue As String) As String"},{"signature":"Sub BuildTextColor(s As String, i As String) As String"},{"signature":"Sub MapRemoveIfBlank(m As Map, items As List)"},{"signature":"Sub Download(content As String, fn As String)"},{"signature":"Sub ListSumProperty(lst As List, prop As String) As Double"},{"signature":"Sub ListAverageProperty(lst As List, prop As String) As Double"},{"signature":"Sub Flatten(m As Map, target As String, source As String)"},{"signature":"Sub CallMounted"},{"signature":"Sub CallCreated"},{"signature":"Sub CallDestroyed"},{"signature":"Sub CallActivated"},{"signature":"Sub CallBeforeUpdate"},{"signature":"Sub CallBeforeMount"},{"signature":"Sub CallBeforeDestroy"},{"signature":"Sub CallBeforeCreate"},{"signature":"Sub CallUpdated"},{"signature":"Sub CallDeActivated"},{"signature":"Sub SetDataDirect(key As String, value As Object)"},{"signature":"Sub GetDataDirect(key As String) As Object"},{"signature":"Sub ShowBrowserNotification(Title As String, Desc As String, Url As String, Icon As String, Vibrate As Boolean, Seconds As Int)\t\t'ignoreDadCode"},{"signature":"Sub getElementByIDRT(V As VuetifyApp, elID As String) As BANanoObject"},{"signature":"Sub SetDataCreateList(lstName As String, lst As List)"},{"signature":"Sub SetDataCreateMap(mapName As String, m As Map)"},{"signature":"Sub CreateList As List"}],"properties":[]}